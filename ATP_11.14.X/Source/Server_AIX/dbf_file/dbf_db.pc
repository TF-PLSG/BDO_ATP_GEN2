/******************************************************************************
  
   Module:           dbf_db.pc
  
   Title:            Settle file DB Routines
  
   Description:
   
   Application:      Equitable Bank

   Authour:          Emilia P.

   Revision History: 1.0
    
   
******************************************************************************/

#include <stdlib.h>
#include <stdio.h>
#include <string.h>

#ifdef WIN32
#include <sqlproto.h>
#endif

#include <math.h>
#include <time.h>
#include <sys/timeb.h>

#include "basictyp.h"
#include "pte.h"
#include "ptemsg.h"
#include "app_info.h"
#include "equitdb.h"
#include "dc_dbstruct.h"
#include "dc_database.h"
#include "ptetimer.h"
#include "dbcommon.h"
#include "txutils.h"
#include "ptetime.h"
#include "ntutils.h"
#include "dbf.h"
#include "timings.h"

/* Oracle error codes */
#define NULL_COLUMN_DATA -1405
#define NO_DATA_FOUND    1403

TLF01  auth_tx_total;
extern BCH10 auth_tx_detail;         

/* Globals used in the Exception File processing = records over 45 days old */
extern INT   TempExRecCnt;
extern INT   ExceptRecCnt;
extern INT   ExceptError;
extern CHAR  ExceptDate[9];
extern CHAR  CurrentDate[9];
extern CHAR  FileMode[5];

/* For DB statics added by raghu */
extern BYTE DB_MsgSubtype2 ;
extern BYTE DB_MsgSubtype1 ;
char DB_Tmr_Lgng_Buf[512];
double start_time;
double end_time  ;
double duration  ; 
extern INT db_error_statics_flag;
extern double db_error_statics_value;
char er_buf[1024] = {0};
BYTE DB_rcode;
extern CHAR  DB_Logging_Filename[256];
extern CHAR  DB_module_file_name[256];
extern CHAR  DB_file_path[256];
extern CHAR  AppName   [MAX_APP_NAME_SIZE];
/* End   */

/* Falcon Real-Time Flags */
extern INT Dcpimp_RT_Flag;
extern INT Falcon_RT_Flag;

/* Database Timing Measurements */
extern TIMINGS_LIST  TimingStats;
extern INT           DB_Timing_Flag;
SQL01 Sql01;


EXEC SQL INCLUDE sqlca;

EXEC SQL BEGIN DECLARE SECTION;


/* error code variable */
long    SQLCODE;
long    SQL_CODE;
/*
struct
{
   char transaction_id                     [21]; 
   char entry_type                         ;
   char tpdu_id                            [16];
   char issuer_id                          [21];
   char acquirer_id                        [21];
   char tx_key                             ;
   char terminal_id                        [9];
   char terminal_type                      [3];
   char response_text                      [41];
   char card_num_len                       [3];
   char card_num                           [65];
   char exp_date                           [5];
   char total_amount                       [13];
   char add_amounts                        [25];
   char invoice_number                     [9];
   char orig_amount                        [13];
   char auth_number                        [7];
   char processing_code                    [7];
   char sys_trace_audit_num                [7];
   char orig_sys_trace_num                 [7];
   char pos_entry_mode                     [5];
   char nii                                [5];
   char pos_condition_code                 [3];
   char track1                             [77];
   char track2                             [38];
   char retrieval_ref_num                  [13];
   char orig_retrieval_ref_num             [13];
   char merchant_id                        [16];
   char orig_message                       [5];
   char settlement_total                   [17];
   char message_type                       [5];
   char card_holder_name                   [31];
   char general_status                     ;
   char originator_queue                   [17];
   char originator_info                    [33];
   char batch_number                       [7];
   char response_code                      [3];
   char date_yyyymmdd                      [9];
   char time_hhmmss                        [7];
   char num_sales                          [4];
   char sales_amount                       [13];
   char num_refunds                        [4];
   char refund_amount                      [13];
   char num_dbsales                        [4];
   char dbsales_amount                     [13];
   char num_dbrefunds                      [4];
   char dbrefund_amount                    [13];
   char pin_block                          [19];
   char tax_amount                         [13];
   char tip_amount                         [13];
   char tran_start_time                    [17];
   char host_start_time                    [17];
   char host_finish_time                   [17];
   char tran_finish_time                   [17];
   char settle_file_prefix                 [7];
   char resp_source_len                    [3];
   char visa_char_indicator                ;
   char visa_tran_id                       [16];
   char visa_validation_code               [5];
   char mcard_banknet_len                  [4];
   char mcard_banknet                      [51];
   char agent_id_len                       [4];
   char agent_id                           [12];
   char cvc                                ;
   char settlement_date                    [5];
   char category_code                      [5];
   char conversion_rate                    [10];
   char product_code                       [9];
   char odometer                           [8];
   char organization_id                    [5];
   char dynamic_keychange                  ;
   char source_key                          [49];
   char txn_cnt                            [4];
   char dcf01_retired_cwk                  [49];
   char dest_key                           [49];
   char ncf01_retired_cwk                  [49];
   char handler_queue        		       [8];
   char authorizing_host_queue		   	   [8];
   char max_net_consec_tmouts              [4];
   char max_active_txns                    [4];
   char forwarding_institution_id          [12];
   char remote_nsp_type                    [2];
   char kek                                [17]; 
   char acquiring_id                       [12];
   char outstanding_balance                [13]; 
   char credit_limit                       [13];
   char nfi_name                           [11];
   char nfi_seq_nbr                        [7];
   char nfi_start_date                     [9];
   char nfi_end_date                       [9];
   char resp_source                        [26];
   char origin                             [3];
   char auth_1                             [3];
   char auth_2                             [3];
   char update_mask                        [2];
   char type_of_data                       [3];
   char down_payment                       [13];
   char period                             [3];
   char interest_rate                      [5];
   char total_interest                     [13];
   char redemption_amount                  [13];
   char vehicle_number                     [9];
   char profile                                    [3];
   char nbr_of_prod_codes                          [3];
   char product1_code                              [7];
   char product1_quantity                          [3];
   char product1_amount                            [13];
   char product2_code                              [7];
   char product2_quantity                          [3];
   char product2_amount                            [13];
   char product3_code                              [7];
   char product3_quantity                          [3];
   char product3_amount                            [13];
   char product4_code                              [7];
   char product4_quantity                          [3];
   char product4_amount                            [13];
   char product5_code                              [7];
   char product5_quantity                          [3];
   char product5_amount                            [13];
   char product6_code                              [7];
   char product6_quantity                          [3];
   char product6_amount                            [13];
   char product7_code                              [7];
   char product7_quantity                          [3];
   char product7_amount                            [13];
   char product8_code                              [7];
   char product8_quantity                          [3];
   char product8_amount                            [13];
   char product9_code                              [7];
   char product9_quantity                          [3];
   char product9_amount                            [13];
   char product10_code                              [7];
   char product10_quantity                          [3];
   char product10_amount                            [13];
   char product11_code                              [7];
   char product11_quantity                          [3];
   char product11_amount                            [13];
   char product12_code                              [7];
   char product12_quantity                          [3];
   char product12_amount                            [13];
   char product13_code                              [7];
   char product13_quantity                          [3];
   char product13_amount                            [13];
   char product14_code                              [7];
   char product14_quantity                          [3];
   char product14_amount                            [13];
   char product15_code                              [7];
   char product15_quantity                          [3];
   char product15_amount                            [13];
   char product16_code                              [7];
   char product16_quantity                          [3];
   char product16_amount                            [13];
   char product17_code                              [7];
   char product17_quantity                          [3];
   char product17_amount                            [13];
   char product18_code                              [7];
   char product18_quantity                          [3];
   char product18_amount                            [13];
   char product19_code                              [7];
   char product19_quantity                          [3];
   char product19_amount                            [13];
   char product20_code                              [7];
   char product20_quantity                          [3];
   char product20_amount                            [13];
   char visa_merchant_id                            [16];
   char cash_bonus                                  [2];  
   char deferred_factor                             [8];  
   char deferred_term_length                        [4];  
   char currency_code                               [4];  
   char transmission_timestamp                      [11]; 
   char tran_fee_amount                             [9];  
   char cvc_data                                    [4];  
   char verify_mag_stripe                           [2];  
   char saf                                         [2];  
   char security_response_code                      [3];  
   char service_code                                [4];  
   char source_pin_format                           [3];  
   char dest_pin_format                             [3];  
   char voice_auth                                  [2];  
   char actual_amount                               [13]; 
   char reversal_amount                             [13]; 
   char voice_auth_text                             [241];
   char operator_id                                 [21]; 
   char workstation                                 [21]; 
   char orig_auth_number                            [7];  
   char ticket_nbr									[16];
   char system_date                                 [9];
   char def_gross_amt                               [13];
   char monthly_amort_amt                           [13];
}pte_tlf01;


*/
DBF_TLF01 pte_tlf01;

FTLF01 pte_ftlf01;
PTSN01 pte_ptsn01;
TLF01_STIP pte_tlf01_stip;


struct
{
    varchar transaction_id                     [21]; 

    varchar entry_type                         [1];
    varchar tpdu_id                            [16];
    varchar issuer_id                          [21];
    varchar acquirer_id                        [21];
    varchar tx_key                             [1];
    varchar terminal_id                        [9];
    varchar terminal_type                      [3];
    varchar response_text                      [41];
    varchar card_num_len                       [3];
    varchar card_num                           [65];
    varchar exp_date                           [5];
    varchar total_amount                       [13];
    varchar add_amounts                        [25];
    varchar invoice_number                     [9];
    varchar orig_amount                        [13];
    varchar auth_number                        [7];
    varchar processing_code                    [7];
    varchar sys_trace_audit_num                [7];
    varchar orig_sys_trace_num                 [7];
    varchar pos_entry_mode                     [5];
    varchar nii                                [5];
    varchar pos_condition_code                 [3];
    varchar track1                             [77];
    varchar track2                             [38];
    varchar retrieval_ref_num                  [13];
    varchar orig_retrieval_ref_num             [13];
    varchar merchant_id                        [16];
    varchar orig_message                       [5];
    varchar settlement_total                   [17];
    varchar message_type                       [5];
    varchar card_holder_name                   [31];
    varchar general_status                     [1];
    varchar originator_queue                   [17];
    varchar originator_info                    [33];
    varchar batch_number                       [7];
    varchar response_code                      [3];
    varchar date_yyyymmdd                      [9];
    varchar time_hhmmss                        [7];
    varchar num_sales                          [4];
    varchar sales_amount                       [13];
    varchar num_refunds                        [4];
    varchar refund_amount                      [13];
    varchar num_dbsales                        [4];
    varchar dbsales_amount                     [13];
    varchar num_dbrefunds                      [4];
    varchar dbrefund_amount                    [13];
    varchar pin_block                          [19];
    varchar tax_amount                         [13];
    varchar tip_amount                         [13];
    varchar tran_start_time                    [17];
    varchar host_start_time                    [17];
    varchar host_finish_time                   [17];
    varchar tran_finish_time                   [17];
    varchar settle_file_prefix                 [7];
    varchar resp_source_len                    [3];
    varchar visa_char_indicator                [1];
    varchar visa_tran_id                       [16];
    varchar visa_validation_code               [5];
    varchar mcard_banknet_len                  [4];
    varchar mcard_banknet                      [51];
    varchar agent_id_len                       [4];
    varchar agent_id                           [12];
    varchar cvc                                [1];
    varchar settlement_date                    [5];

    varchar category_code                      [5];
    varchar conversion_rate                    [10];
    varchar product_code                       [9];
    varchar odometer                           [8];
    varchar organization_id                    [5];
    varchar dynamic_keychange                  [1];

   varchar source_key                         [49];
   varchar txn_cnt                            [4];
   varchar dcf01_retired_cwk                  [49];
   varchar dest_key                           [49];
   varchar ncf01_retired_cwk                  [49];
   varchar handler_queue        		      [8];
   varchar authorizing_host_queue		   	  [8];
   varchar max_net_consec_tmouts              [4];
   varchar max_active_txns                    [4];
   varchar forwarding_institution_id          [12];
   varchar remote_nsp_type                    [2];
   varchar kek                                [17];
   varchar acquiring_id                       [12];
   varchar outstanding_balance                [13];
   varchar credit_limit                       [13];
   varchar nfi_name                           [11];
   varchar nfi_seq_nbr                        [7];
   varchar nfi_start_date                     [9];
   varchar nfi_end_date                       [9];
   varchar resp_source                        [26];
   varchar origin                             [3];
   varchar auth_1                             [3];
   varchar auth_2                             [3];
   varchar update_mask                        [2];
   varchar type_of_data                       [3];
   varchar down_payment                       [13];
   varchar period                             [3];
   varchar interest_rate                      [5];
   varchar total_interest                     [13];
   varchar redemption_amount                  [13];
   varchar vehicle_number                     [9];

   varchar profile                                    [3];
   varchar nbr_of_prod_codes                          [3];
   
   varchar product1_code                              [7];
   varchar product1_quantity                          [3];
   varchar product1_amount                            [13];
   varchar product2_code                              [7];
   varchar product2_quantity                          [3];
   varchar product2_amount                            [13];
   varchar product3_code                              [7];
   varchar product3_quantity                          [3];
   varchar product3_amount                            [13];
   varchar product4_code                              [7];
   varchar product4_quantity                          [3];
   varchar product4_amount                            [13];
   varchar product5_code                              [7];
   varchar product5_quantity                          [3];
   varchar product5_amount                            [13];
   varchar product6_code                              [7];
   varchar product6_quantity                          [3];
   varchar product6_amount                            [13];
   varchar product7_code                              [7];
   varchar product7_quantity                          [3];
   varchar product7_amount                            [13];
   varchar product8_code                              [7];
   varchar product8_quantity                          [3];
   varchar product8_amount                            [13];
   varchar product9_code                              [7];
   varchar product9_quantity                          [3];
   varchar product9_amount                            [13];
   varchar product10_code                              [7];
   varchar product10_quantity                          [3];
   varchar product10_amount                            [13];
   varchar product11_code                              [7];
   varchar product11_quantity                          [3];
   varchar product11_amount                            [13];
   varchar product12_code                              [7];
   varchar product12_quantity                          [3];
   varchar product12_amount                            [13];
   varchar product13_code                              [7];
   varchar product13_quantity                          [3];
   varchar product13_amount                            [13];
   varchar product14_code                              [7];
   varchar product14_quantity                          [3];
   varchar product14_amount                            [13];
   varchar product15_code                              [7];
   varchar product15_quantity                          [3];
   varchar product15_amount                            [13];
   varchar product16_code                              [7];
   varchar product16_quantity                          [3];
   varchar product16_amount                            [13];
   varchar product17_code                              [7];
   varchar product17_quantity                          [3];
   varchar product17_amount                            [13];
   varchar product18_code                              [7];
   varchar product18_quantity                          [3];
   varchar product18_amount                            [13];
   varchar product19_code                              [7];
   varchar product19_quantity                          [3];
   varchar product19_amount                            [13];
   varchar product20_code                              [7];
   varchar product20_quantity                          [3];
   varchar product20_amount                            [13];
   varchar visa_merchant_id                            [16];
   varchar cash_bonus                                  [2];  /* added 01-29-99 by IG */
   varchar deferred_factor                             [8];  /* added 01-29-99 by IG */
   varchar deferred_term_length                        [4];  /* added 01-29-99 by IG */
   varchar currency_code                               [4];  /* added 01-29-99 by IG */
   varchar transmission_timestamp                      [11]; /* added 01-29-99 by IG */
   varchar tran_fee_amount                             [9];  /* added 01-29-99 by IG */
   varchar cvc_data                                    [4];  /* added 01-29-99 by IG */
   varchar verify_mag_stripe                           [2];  /* added 02-09-99 by IG */
   varchar saf                                         [2];  /* added 02-09-99 by IG */
   varchar security_response_code                      [3];  /* added 02-09-99 by IG */
   varchar service_code                                [4];  /* added 02-09-99 by IG */
   varchar source_pin_format                           [3];  /* added 02-09-99 by IG */
   varchar dest_pin_format                             [3];  /* added 02-09-99 by IG */
   varchar voice_auth                                  [2];  /* added 02-09-99 by IG */
   varchar actual_amount                               [13]; /* AP IG, Equitable 02-10-99 */
   varchar reversal_amount                             [13]; /* AP IG, Equitable 02-10-99 */
   varchar voice_auth_text                             [241]; /* IG 02-22-99 */
   varchar operator_id                                 [21];  /* IA 03-09-99 */
   varchar workstation                                 [21];  /* IA 03-16-99 */
   varchar orig_auth_number                            [7];   /* IA 04-08-99 */
   varchar ticket_nbr									[16];
   varchar system_date                                 [9];
   varchar def_gross_amt                               [13];
   varchar monthly_amort_amt                           [13];
}db_tlf01;



struct
{
    varchar transaction_id                     [21]; 

    varchar entry_type                         [1];
    varchar tpdu_id                            [16];
    varchar issuer_id                          [21];
    varchar acquirer_id                        [21];
    varchar tx_key                             [1];
    varchar terminal_id                        [9];
    varchar terminal_type                      [3];
    varchar response_text                      [41];
    varchar card_num_len                       [3];
    varchar card_num                           [65];
    varchar exp_date                           [5];
    varchar total_amount                       [13];
    varchar add_amounts                        [25];
    varchar invoice_number                     [9];
    varchar orig_amount                        [13];
    varchar auth_number                        [7];
    varchar processing_code                    [7];
    varchar sys_trace_audit_num                [7];
    varchar orig_sys_trace_num                 [7];
    varchar pos_entry_mode                     [5];
    varchar nii                                [5];
    varchar pos_condition_code                 [3];
    varchar track1                             [77];
    varchar track2                             [38];
    varchar retrieval_ref_num                  [13];
    varchar orig_retrieval_ref_num             [13];
    varchar merchant_id                        [16];
    varchar orig_message                       [5];
    varchar settlement_total                   [17];
    varchar message_type                       [5];
    varchar card_holder_name                   [31];
    varchar general_status                     [1];
    varchar originator_queue                   [17];
    varchar originator_info                    [33];
    varchar batch_number                       [7];
    varchar response_code                      [3];
    varchar date_yyyymmdd                      [9];
    varchar time_hhmmss                        [7];
    varchar num_sales                          [4];
    varchar sales_amount                       [13];
    varchar num_refunds                        [4];
    varchar refund_amount                      [13];
    varchar num_dbsales                        [4];
    varchar dbsales_amount                     [13];
    varchar num_dbrefunds                      [4];
    varchar dbrefund_amount                    [13];
    varchar pin_block                          [19];
    varchar tax_amount                         [13];
    varchar tip_amount                         [13];
    varchar tran_start_time                    [17];
    varchar host_start_time                    [17];
    varchar host_finish_time                   [17];
    varchar tran_finish_time                   [17];
    varchar settle_file_prefix                 [7];
    varchar resp_source_len                    [3];
    varchar visa_char_indicator                [1];
    varchar visa_tran_id                       [16];
    varchar visa_validation_code               [5];
    varchar mcard_banknet_len                  [4];
    varchar mcard_banknet                      [51];
    varchar agent_id_len                       [4];
    varchar agent_id                           [12];
    varchar cvc                                [1];
    varchar settlement_date                    [5];

    varchar category_code                      [5];
    varchar conversion_rate                    [10];
    varchar product_code                       [9];
    varchar odometer                           [8];
    varchar organization_id                    [5];
    varchar dynamic_keychange                  [1];

   varchar source_key                         [49];
   varchar txn_cnt                            [4];
   varchar dcf01_retired_cwk                  [49];
   varchar dest_key                           [49];
   varchar ncf01_retired_cwk                  [49];
   varchar handler_queue        		      [8];
   varchar authorizing_host_queue		   	  [8];
   varchar max_net_consec_tmouts              [4];
   varchar max_active_txns                    [4];
   varchar forwarding_institution_id          [12];
   varchar remote_nsp_type                    [2];
   varchar kek                                [17];
   varchar acquiring_id                       [12];
   varchar outstanding_balance                [13];
   varchar credit_limit                       [13];
   varchar nfi_name                           [11];
   varchar nfi_seq_nbr                        [7];
   varchar nfi_start_date                     [9];
   varchar nfi_end_date                       [9];
   varchar resp_source                        [26];
   varchar origin                             [3];
   varchar auth_1                             [3];
   varchar auth_2                             [3];
   varchar update_mask                        [2];
   varchar type_of_data                       [3];
   varchar down_payment                       [13];
   varchar period                             [3];
   varchar interest_rate                      [5];
   varchar total_interest                     [13];
   varchar redemption_amount                  [13];
   varchar vehicle_number                     [9];

   varchar profile                                    [3];
   varchar nbr_of_prod_codes                          [3];
   
   varchar product1_code                              [7];
   varchar product1_quantity                          [3];
   varchar product1_amount                            [13];
   varchar product2_code                              [7];
   varchar product2_quantity                          [3];
   varchar product2_amount                            [13];
   varchar product3_code                              [7];
   varchar product3_quantity                          [3];
   varchar product3_amount                            [13];
   varchar product4_code                              [7];
   varchar product4_quantity                          [3];
   varchar product4_amount                            [13];
   varchar product5_code                              [7];
   varchar product5_quantity                          [3];
   varchar product5_amount                            [13];
   varchar product6_code                              [7];
   varchar product6_quantity                          [3];
   varchar product6_amount                            [13];
   varchar product7_code                              [7];
   varchar product7_quantity                          [3];
   varchar product7_amount                            [13];
   varchar product8_code                              [7];
   varchar product8_quantity                          [3];
   varchar product8_amount                            [13];
   varchar product9_code                              [7];
   varchar product9_quantity                          [3];
   varchar product9_amount                            [13];
   varchar product10_code                              [7];
   varchar product10_quantity                          [3];
   varchar product10_amount                            [13];
   varchar product11_code                              [7];
   varchar product11_quantity                          [3];
   varchar product11_amount                            [13];
   varchar product12_code                              [7];
   varchar product12_quantity                          [3];
   varchar product12_amount                            [13];
   varchar product13_code                              [7];
   varchar product13_quantity                          [3];
   varchar product13_amount                            [13];
   varchar product14_code                              [7];
   varchar product14_quantity                          [3];
   varchar product14_amount                            [13];
   varchar product15_code                              [7];
   varchar product15_quantity                          [3];
   varchar product15_amount                            [13];
   varchar product16_code                              [7];
   varchar product16_quantity                          [3];
   varchar product16_amount                            [13];
   varchar product17_code                              [7];
   varchar product17_quantity                          [3];
   varchar product17_amount                            [13];
   varchar product18_code                              [7];
   varchar product18_quantity                          [3];
   varchar product18_amount                            [13];
   varchar product19_code                              [7];
   varchar product19_quantity                          [3];
   varchar product19_amount                            [13];
   varchar product20_code                              [7];
   varchar product20_quantity                          [3];
   varchar product20_amount                            [13];
   varchar visa_merchant_id                            [16];
   varchar cash_bonus                                  [2];  /* added 01-29-99 by IG */
   varchar deferred_factor                             [8];  /* added 01-29-99 by IG */
   varchar deferred_term_length                        [4];  /* added 01-29-99 by IG */
   varchar currency_code                               [4];  /* added 01-29-99 by IG */
   varchar transmission_timestamp                      [11]; /* added 01-29-99 by IG */
   varchar tran_fee_amount                             [9];  /* added 01-29-99 by IG */
   varchar cvc_data                                    [4];  /* added 01-29-99 by IG */
   varchar verify_mag_stripe                           [2];  /* added 02-09-99 by IG */
   varchar saf                                         [2];  /* added 02-09-99 by IG */
   varchar security_response_code                      [3];  /* added 02-09-99 by IG */
   varchar service_code                                [4];  /* added 02-09-99 by IG */
   varchar source_pin_format                           [3];  /* added 02-09-99 by IG */
   varchar dest_pin_format                             [3];  /* added 02-09-99 by IG */
   varchar voice_auth                                  [2];  /* added 02-09-99 by IG */
   varchar actual_amount                               [13]; /* AP IG, Equitable 02-10-99 */
   varchar reversal_amount                             [13]; /* AP IG, Equitable 02-10-99 */
   varchar voice_auth_text                             [241]; /* IG 02-22-99 */
   varchar operator_id                                 [21];  /* IA 03-09-99 */
   varchar workstation                                 [21];  /* IA 03-16-99 */
   varchar orig_auth_number                            [7];   /* IA 04-08-99 */
   varchar ticket_nbr									[16];
   varchar system_date                                 [9];
   varchar def_gross_amt                               [13];
   varchar monthly_amort_amt                           [13];
}db_tlf01_stip;

struct
{
	varchar tran_id      				[21];
	varchar sys_date                	[9];
	varchar card_brand              	[11];
	varchar handler_queue           	[11];
	varchar tran_req_sent_time      	[11];
	varchar tran_resp_recv_time     	[11];
	varchar tran_req_sent_mode    		[3];
	varchar tran_resp_recv_mode      	[3];
	varchar response_text           	[101];
	varchar decision_code_1_value   	[33];
	varchar decision_code_2_value   	[33];
	varchar decision_code_3_value   	[33];
	varchar decision_code_4_value   	[33];
	varchar decision_code_5_value   	[33];
	varchar decision_code_6_value   	[33];
	varchar decision_code_7_value   	[33];
	varchar decision_code_8_value   	[33];
	varchar decision_code_9_value  	[33];
	varchar decision_code_10_value  	[33];
	varchar future_field1                [12];
	varchar future_field2                [25];
	varchar future_field3                [37];
	varchar future_field4                [49];
	varchar future_field5                [61];

}db_ftlf01;

struct
{

    varchar  transaction_id                            [21];
    varchar  system_date                        [9];
    varchar  length_serial_no                          [3];
    varchar  total_length                     [3];
    varchar  table_id                       [4];
    varchar  serial_number                            [51];
    varchar  future_field_1                          [51];
    varchar  future_field_2                          [51];

}db_ptsn01;

struct {
   varchar num_count					[20];
}db_count_tlf01;


EXEC SQL END DECLARE SECTION;


void db_to_ftlf01 ()
{
	memset( &pte_ftlf01, 0, sizeof( pte_ftlf01 ) );
   memcpy(pte_ftlf01.tran_id, db_ftlf01.tran_id.arr, db_ftlf01.tran_id.len);
   memcpy(pte_ftlf01.sys_date, db_ftlf01.sys_date.arr, db_ftlf01.sys_date.len);
   memcpy(pte_ftlf01.card_brand, db_ftlf01.card_brand.arr, db_ftlf01.card_brand.len);
   memcpy(pte_ftlf01.handler_queue, db_ftlf01.handler_queue.arr, db_ftlf01.handler_queue.len);
   memcpy(pte_ftlf01.tran_resp_recv_time, db_ftlf01.tran_resp_recv_time.arr, db_ftlf01.tran_resp_recv_time.len);
   memcpy(pte_ftlf01.tran_req_sent_mode, db_ftlf01.tran_req_sent_mode.arr, db_ftlf01.tran_req_sent_mode.len);
   memcpy(pte_ftlf01.tran_resp_recv_mode, db_ftlf01.tran_resp_recv_mode.arr, db_ftlf01.tran_resp_recv_mode.len);
   memcpy(pte_ftlf01.response_text, db_ftlf01.response_text.arr, db_ftlf01.response_text.len);
   memcpy(pte_ftlf01.decision_code_1_value, db_ftlf01.decision_code_1_value.arr, db_ftlf01.decision_code_1_value.len);
   memcpy(pte_ftlf01.decision_code_2_value, db_ftlf01.decision_code_2_value.arr, db_ftlf01.decision_code_2_value.len);
   memcpy(pte_ftlf01.decision_code_3_value, db_ftlf01.decision_code_3_value.arr, db_ftlf01.decision_code_3_value.len);
   memcpy(pte_ftlf01.decision_code_4_value, db_ftlf01.decision_code_4_value.arr, db_ftlf01.decision_code_4_value.len);
   memcpy(pte_ftlf01.decision_code_5_value, db_ftlf01.decision_code_5_value.arr, db_ftlf01.decision_code_5_value.len);
   memcpy(pte_ftlf01.decision_code_6_value, db_ftlf01.decision_code_6_value.arr, db_ftlf01.decision_code_6_value.len);
   memcpy(pte_ftlf01.decision_code_7_value, db_ftlf01.decision_code_7_value.arr, db_ftlf01.decision_code_7_value.len);
   memcpy(pte_ftlf01.decision_code_8_value, db_ftlf01.decision_code_8_value.arr, db_ftlf01.decision_code_8_value.len);
   memcpy(pte_ftlf01.decision_code_9_value, db_ftlf01.decision_code_9_value.arr, db_ftlf01.decision_code_9_value.len);
   memcpy(pte_ftlf01.decision_code_10_value, db_ftlf01.decision_code_10_value.arr, db_ftlf01.decision_code_10_value.len);
   memcpy(pte_ftlf01.future_field1, db_ftlf01.future_field1.arr, db_ftlf01.future_field1.len);
   memcpy(pte_ftlf01.future_field2, db_ftlf01.future_field2.arr, db_ftlf01.future_field2.len);
   memcpy(pte_ftlf01.future_field3, db_ftlf01.future_field3.arr, db_ftlf01.future_field3.len);
   memcpy(pte_ftlf01.future_field4, db_ftlf01.future_field4.arr, db_ftlf01.future_field4.len);
   memcpy(pte_ftlf01.future_field5, db_ftlf01.future_field5.arr, db_ftlf01.future_field5.len);


}



void db_to_ptsn01 ()
{

	memset( &pte_ptsn01, 0, sizeof( pte_ptsn01 ) );
   memcpy(pte_ptsn01.transaction_id, db_ptsn01.transaction_id.arr, db_ptsn01.transaction_id.len);
   memcpy(pte_ptsn01.system_date, db_ptsn01.system_date.arr, db_ptsn01.system_date.len);
   memcpy(pte_ptsn01.length_serial_no, db_ptsn01.length_serial_no.arr, db_ptsn01.length_serial_no.len);
   memcpy(pte_ptsn01.total_length, db_ptsn01.total_length.arr, db_ptsn01.total_length.len);
   memcpy(pte_ptsn01.table_id, db_ptsn01.table_id.arr, db_ptsn01.table_id.len);
   memcpy(pte_ptsn01.serial_number, db_ptsn01.serial_number.arr, db_ptsn01.serial_number.len);
   memcpy(pte_ptsn01.future_field_1, db_ptsn01.future_field_1.arr, db_ptsn01.future_field_1.len);
   memcpy(pte_ptsn01.future_field_2, db_ptsn01.future_field_2.arr, db_ptsn01.future_field_2.len);

}

/*************************************************************************************/
/*************************************************************************************/
void db_to_tlf01 ( )
{
	char Local_kek[17]={0};

	char ErrorMsg[1024]={0};
   
   if(strcmp(FileMode, "DBF") == 0)
   {
	memset(&pte_tlf01, 0x20, sizeof(pte_tlf01));
   }
   else
   {
	 memset(&pte_tlf01, 0x00, sizeof(pte_tlf01));
	 memset(&pte_ptsn01, 0x00, sizeof(pte_ptsn01));
   }
   memcpy(pte_tlf01.transaction_id, db_tlf01.transaction_id.arr, db_tlf01.transaction_id.len);
   pte_tlf01.entry_type = db_tlf01.entry_type.arr[0];
   memcpy(pte_tlf01.tpdu_id, db_tlf01.tpdu_id.arr, db_tlf01.tpdu_id.len);
   memcpy(pte_tlf01.issuer_id, db_tlf01.issuer_id.arr, db_tlf01.issuer_id.len);
   memcpy(pte_tlf01.acquirer_id, db_tlf01.acquirer_id.arr, db_tlf01.acquirer_id.len);
   pte_tlf01.tx_key = db_tlf01.tx_key.arr[0];
   memcpy(pte_tlf01.terminal_id, db_tlf01.terminal_id.arr, db_tlf01.terminal_id.len);
   memcpy(pte_tlf01.terminal_type, db_tlf01.terminal_type.arr, db_tlf01.terminal_type.len);
   memcpy(pte_tlf01.response_text, db_tlf01.response_text.arr, db_tlf01.response_text.len);
   memcpy(pte_tlf01.card_num_len, db_tlf01.card_num_len.arr, db_tlf01.card_num_len.len);
   memcpy(pte_tlf01.card_num, db_tlf01.card_num.arr, db_tlf01.card_num.len);
   memcpy(pte_tlf01.exp_date, db_tlf01.exp_date.arr, db_tlf01.exp_date.len);
   memcpy(pte_tlf01.total_amount, db_tlf01.total_amount.arr, db_tlf01.total_amount.len);
   memcpy(pte_tlf01.add_amounts, db_tlf01.add_amounts.arr, db_tlf01.add_amounts.len);
   memcpy(pte_tlf01.invoice_number, db_tlf01.invoice_number.arr, db_tlf01.invoice_number.len);
   memcpy(pte_tlf01.orig_amount, db_tlf01.orig_amount.arr, db_tlf01.orig_amount.len);
   memcpy(pte_tlf01.auth_number, db_tlf01.auth_number.arr, db_tlf01.auth_number.len);
   memcpy(pte_tlf01.processing_code, db_tlf01.processing_code.arr, db_tlf01.processing_code.len);
   memcpy(pte_tlf01.sys_trace_audit_num, db_tlf01.sys_trace_audit_num.arr, db_tlf01.sys_trace_audit_num.len);
   memcpy(pte_tlf01.orig_sys_trace_num, db_tlf01.orig_sys_trace_num.arr, db_tlf01.orig_sys_trace_num.len);
   memcpy(pte_tlf01.pos_entry_mode, db_tlf01.pos_entry_mode.arr, db_tlf01.pos_entry_mode.len);
   memcpy(pte_tlf01.nii, db_tlf01.nii.arr, db_tlf01.nii.len);
   memcpy(pte_tlf01.pos_condition_code, db_tlf01.pos_condition_code.arr, db_tlf01.pos_condition_code.len);
   memcpy(pte_tlf01.track1, db_tlf01.track1.arr, db_tlf01.track1.len);
   memcpy(pte_tlf01.track2, db_tlf01.track2.arr, db_tlf01.track2.len);
   memcpy(pte_tlf01.retrieval_ref_num, db_tlf01.retrieval_ref_num.arr, db_tlf01.retrieval_ref_num.len);
   memcpy(pte_tlf01.orig_retrieval_ref_num, db_tlf01.orig_retrieval_ref_num.arr, db_tlf01.orig_retrieval_ref_num.len);
   memcpy(pte_tlf01.merchant_id, db_tlf01.merchant_id.arr, db_tlf01.merchant_id.len);
   memcpy(pte_tlf01.orig_message, db_tlf01.orig_message.arr, db_tlf01.orig_message.len);
   memcpy(pte_tlf01.settlement_total, db_tlf01.settlement_total.arr, db_tlf01.settlement_total.len);
   memcpy(pte_tlf01.message_type, db_tlf01.message_type.arr, db_tlf01.message_type.len);
   memcpy(pte_tlf01.card_holder_name, db_tlf01.card_holder_name.arr, db_tlf01.card_holder_name.len);
   pte_tlf01.general_status = db_tlf01.general_status.arr[0];
   memcpy(pte_tlf01.originator_queue, db_tlf01.originator_queue.arr, db_tlf01.originator_queue.len);
   memcpy(pte_tlf01.originator_info, db_tlf01.originator_info.arr, db_tlf01.originator_info.len);
   memcpy(pte_tlf01.batch_number, db_tlf01.batch_number.arr, db_tlf01.batch_number.len);
   memcpy(pte_tlf01.response_code, db_tlf01.response_code.arr, db_tlf01.response_code.len);
   memcpy(pte_tlf01.date_yyyymmdd, db_tlf01.date_yyyymmdd.arr, db_tlf01.date_yyyymmdd.len);
   memcpy(pte_tlf01.time_hhmmss, db_tlf01.time_hhmmss.arr, db_tlf01.time_hhmmss.len);
   memcpy(pte_tlf01.num_sales, db_tlf01.num_sales.arr, db_tlf01.num_sales.len);
   memcpy(pte_tlf01.sales_amount, db_tlf01.sales_amount.arr, db_tlf01.sales_amount.len);
   memcpy(pte_tlf01.num_refunds, db_tlf01.num_refunds.arr, db_tlf01.num_refunds.len);
   memcpy(pte_tlf01.refund_amount, db_tlf01.refund_amount.arr, db_tlf01.refund_amount.len);
   memcpy(pte_tlf01.num_dbsales, db_tlf01.num_dbsales.arr, db_tlf01.num_dbsales.len);
   memcpy(pte_tlf01.dbsales_amount, db_tlf01.dbsales_amount.arr, db_tlf01.dbsales_amount.len);
   memcpy(pte_tlf01.num_dbrefunds, db_tlf01.num_dbrefunds.arr, db_tlf01.num_dbrefunds.len);
   memcpy(pte_tlf01.dbrefund_amount, db_tlf01.dbrefund_amount.arr, db_tlf01.dbrefund_amount.len);
   memcpy(pte_tlf01.pin_block, db_tlf01.pin_block.arr, db_tlf01.pin_block.len);
   memcpy(pte_tlf01.tax_amount, db_tlf01.tax_amount.arr, db_tlf01.tax_amount.len);
   memcpy(pte_tlf01.tip_amount, db_tlf01.tip_amount.arr, db_tlf01.tip_amount.len);
   memcpy(pte_tlf01.tran_start_time, db_tlf01.tran_start_time.arr, db_tlf01.tran_start_time.len);
   memcpy(pte_tlf01.host_start_time, db_tlf01.host_start_time.arr, db_tlf01.host_start_time.len);
   memcpy(pte_tlf01.host_finish_time, db_tlf01.host_finish_time.arr, db_tlf01.host_finish_time.len);
   memcpy(pte_tlf01.tran_finish_time, db_tlf01.tran_finish_time.arr, db_tlf01.tran_finish_time.len);
   memcpy(pte_tlf01.settle_file_prefix, db_tlf01.settle_file_prefix.arr, db_tlf01.settle_file_prefix.len);
   memcpy(pte_tlf01.resp_source_len, db_tlf01.resp_source_len.arr, db_tlf01.resp_source_len.len);
   pte_tlf01.visa_char_indicator = db_tlf01.visa_char_indicator.arr[0];
   memcpy(pte_tlf01.visa_tran_id, db_tlf01.visa_tran_id.arr, db_tlf01.visa_tran_id.len);
   memcpy(pte_tlf01.visa_validation_code, db_tlf01.visa_validation_code.arr, db_tlf01.visa_validation_code.len);
   memcpy(pte_tlf01.mcard_banknet_len, db_tlf01.mcard_banknet_len.arr, db_tlf01.mcard_banknet_len.len);
   memcpy(pte_tlf01.mcard_banknet, db_tlf01.mcard_banknet.arr, db_tlf01.mcard_banknet.len);
   memcpy(pte_tlf01.agent_id_len, db_tlf01.agent_id_len.arr, db_tlf01.agent_id_len.len);
   memcpy(pte_tlf01.agent_id, db_tlf01.agent_id.arr, db_tlf01.agent_id.len);
   pte_tlf01.cvc = db_tlf01.cvc.arr[0];
   memcpy(pte_tlf01.settlement_date, db_tlf01.settlement_date.arr, db_tlf01.settlement_date.len);
   memcpy(pte_tlf01.category_code, db_tlf01.category_code.arr, db_tlf01.category_code.len);
   memcpy(pte_tlf01.conversion_rate, db_tlf01.conversion_rate.arr, db_tlf01.conversion_rate.len);
   memcpy(pte_tlf01.product_code, db_tlf01.product_code.arr, db_tlf01.product_code.len);
   memcpy(pte_tlf01.odometer, db_tlf01.odometer.arr, db_tlf01.odometer.len);
   memcpy(pte_tlf01.organization_id, db_tlf01.organization_id.arr, db_tlf01.organization_id.len);
   pte_tlf01.dynamic_keychange = db_tlf01.dynamic_keychange.arr[0];

   memcpy(pte_tlf01.txn_cnt, db_tlf01.txn_cnt.arr, db_tlf01.txn_cnt.len);
   memcpy(pte_tlf01.source_key, db_tlf01.source_key.arr, db_tlf01.source_key.len);
   memcpy(pte_tlf01.dcf01_retired_cwk, db_tlf01.dcf01_retired_cwk.arr, db_tlf01.dcf01_retired_cwk.len);
   memcpy(pte_tlf01.dest_key, db_tlf01.dest_key.arr, db_tlf01.dest_key.len);
   memcpy(pte_tlf01.ncf01_retired_cwk, db_tlf01.ncf01_retired_cwk.arr, db_tlf01.ncf01_retired_cwk.len);
   memcpy(pte_tlf01.handler_queue, db_tlf01.handler_queue.arr, db_tlf01.handler_queue.len);
   memcpy(pte_tlf01.authorizing_host_queue, db_tlf01.authorizing_host_queue.arr, db_tlf01.authorizing_host_queue.len);
   memcpy(pte_tlf01.max_net_consec_tmouts, db_tlf01.max_net_consec_tmouts.arr, db_tlf01.max_net_consec_tmouts.len);
   memcpy(pte_tlf01.max_active_txns, db_tlf01.max_active_txns.arr, db_tlf01.max_active_txns.len);
   memcpy(pte_tlf01.remote_nsp_type, db_tlf01.remote_nsp_type.arr, db_tlf01.remote_nsp_type.len);
   memcpy(pte_tlf01.kek, db_tlf01.kek.arr, db_tlf01.kek.len);
   
   memcpy(pte_tlf01.credit_limit, db_tlf01.credit_limit.arr, db_tlf01.credit_limit.len);
   memcpy(pte_tlf01.forwarding_institution_id, db_tlf01.forwarding_institution_id.arr, db_tlf01.forwarding_institution_id.len);
   memcpy(pte_tlf01.acquiring_id, db_tlf01.acquiring_id.arr, db_tlf01.acquiring_id.len);
   memcpy(pte_tlf01.outstanding_balance, db_tlf01.outstanding_balance.arr, db_tlf01.outstanding_balance.len);
   memcpy(pte_tlf01.nfi_name, db_tlf01.nfi_name.arr, db_tlf01.nfi_name.len);
   memcpy(pte_tlf01.nfi_seq_nbr, db_tlf01.nfi_seq_nbr.arr, db_tlf01.nfi_seq_nbr.len);
   memcpy(pte_tlf01.nfi_start_date, db_tlf01.nfi_start_date.arr, db_tlf01.nfi_start_date.len);
   memcpy(pte_tlf01.nfi_end_date, db_tlf01.nfi_end_date.arr, db_tlf01.nfi_end_date.len);
   memcpy(pte_tlf01.resp_source, db_tlf01.resp_source.arr, db_tlf01.resp_source.len);
   memcpy(pte_tlf01.origin, db_tlf01.origin.arr, db_tlf01.origin.len);
   memcpy(pte_tlf01.auth_1, db_tlf01.auth_1.arr, db_tlf01.auth_1.len);
   memcpy(pte_tlf01.auth_2, db_tlf01.auth_2.arr, db_tlf01.auth_2.len);
   memcpy(pte_tlf01.update_mask, db_tlf01.update_mask.arr, db_tlf01.update_mask.len);

   memcpy(pte_tlf01.type_of_data, db_tlf01.type_of_data.arr, db_tlf01.type_of_data.len);
   memcpy(pte_tlf01.down_payment, db_tlf01.down_payment.arr, db_tlf01.down_payment.len);
   memcpy(pte_tlf01.period, db_tlf01.period.arr, db_tlf01.period.len);
   memcpy(pte_tlf01.interest_rate, db_tlf01.interest_rate.arr, db_tlf01.interest_rate.len);
   memcpy(pte_tlf01.total_interest, db_tlf01.total_interest.arr, db_tlf01.total_interest.len);
   memcpy(pte_tlf01.redemption_amount, db_tlf01.redemption_amount.arr, db_tlf01.redemption_amount.len);
   memcpy(pte_tlf01.vehicle_number, db_tlf01.vehicle_number.arr, db_tlf01.vehicle_number.len);
  
   memcpy(pte_tlf01.profile, db_tlf01.profile.arr, db_tlf01.profile.len);
   memcpy(pte_tlf01.nbr_of_prod_codes, db_tlf01.nbr_of_prod_codes.arr, db_tlf01.nbr_of_prod_codes.len);
  
   memcpy(pte_tlf01.product1_code,	db_tlf01.product1_code.arr,	db_tlf01.product1_code.len);
   memcpy(pte_tlf01.product1_quantity,	db_tlf01.product1_quantity.arr,	db_tlf01.product1_quantity.len);
   memcpy(pte_tlf01.product1_amount,	db_tlf01.product1_amount.arr,	db_tlf01.product1_amount.len);   
   memcpy(pte_tlf01.product2_code,	db_tlf01.product2_code.arr,	db_tlf01.product2_code.len);
   memcpy(pte_tlf01.product2_quantity,	db_tlf01.product2_quantity.arr,	db_tlf01.product2_quantity.len);
   memcpy(pte_tlf01.product2_amount,	db_tlf01.product2_amount.arr,	db_tlf01.product2_amount.len);
   memcpy(pte_tlf01.product3_code,	db_tlf01.product3_code.arr,	db_tlf01.product3_code.len);
   memcpy(pte_tlf01.product3_quantity,	db_tlf01.product3_quantity.arr,	db_tlf01.product3_quantity.len);
   memcpy(pte_tlf01.product3_amount,	db_tlf01.product3_amount.arr,	db_tlf01.product3_amount.len);
   memcpy(pte_tlf01.product4_code,	db_tlf01.product4_code.arr,	db_tlf01.product4_code.len);
   memcpy(pte_tlf01.product4_quantity,	db_tlf01.product4_quantity.arr,	db_tlf01.product4_quantity.len);
   memcpy(pte_tlf01.product4_amount,	db_tlf01.product4_amount.arr,	db_tlf01.product4_amount.len);
   memcpy(pte_tlf01.product5_code,	db_tlf01.product5_code.arr,	db_tlf01.product5_code.len);
   memcpy(pte_tlf01.product5_quantity,	db_tlf01.product5_quantity.arr,	db_tlf01.product5_quantity.len);
   memcpy(pte_tlf01.product5_amount,	db_tlf01.product5_amount.arr,	db_tlf01.product5_amount.len);
   memcpy(pte_tlf01.product6_code,	db_tlf01.product6_code.arr,	db_tlf01.product6_code.len);
   memcpy(pte_tlf01.product6_quantity,	db_tlf01.product6_quantity.arr,	db_tlf01.product6_quantity.len);
   memcpy(pte_tlf01.product6_amount,	db_tlf01.product6_amount.arr,	db_tlf01.product6_amount.len);
   memcpy(pte_tlf01.product7_code,	db_tlf01.product7_code.arr,	db_tlf01.product7_code.len);
   memcpy(pte_tlf01.product7_quantity,	db_tlf01.product7_quantity.arr,	db_tlf01.product7_quantity.len);
   memcpy(pte_tlf01.product7_amount,	db_tlf01.product7_amount.arr,	db_tlf01.product7_amount.len);
   memcpy(pte_tlf01.product8_code,	db_tlf01.product8_code.arr,	db_tlf01.product8_code.len);
   memcpy(pte_tlf01.product8_quantity,	db_tlf01.product8_quantity.arr,	db_tlf01.product8_quantity.len);
   memcpy(pte_tlf01.product8_amount,	db_tlf01.product8_amount.arr,	db_tlf01.product8_amount.len);
   memcpy(pte_tlf01.product9_code,	db_tlf01.product9_code.arr,	db_tlf01.product9_code.len);
   memcpy(pte_tlf01.product9_quantity,	db_tlf01.product9_quantity.arr,	db_tlf01.product9_quantity.len);
   memcpy(pte_tlf01.product9_amount,	db_tlf01.product9_amount.arr,	db_tlf01.product9_amount.len);
   memcpy(pte_tlf01.product10_code,	db_tlf01.product10_code.arr,	db_tlf01.product10_code.len);
   memcpy(pte_tlf01.product10_quantity,	db_tlf01.product10_quantity.arr,db_tlf01.product10_quantity.len);
   memcpy(pte_tlf01.product10_amount,	db_tlf01.product10_amount.arr,	db_tlf01.product10_amount.len);
   memcpy(pte_tlf01.product11_code,	db_tlf01.product11_code.arr,	db_tlf01.product11_code.len);
   memcpy(pte_tlf01.product11_quantity,	db_tlf01.product11_quantity.arr,db_tlf01.product11_quantity.len);
   memcpy(pte_tlf01.product11_amount,	db_tlf01.product11_amount.arr,	db_tlf01.product11_amount.len);
   memcpy(pte_tlf01.product12_code,	db_tlf01.product12_code.arr,	db_tlf01.product12_code.len);
   memcpy(pte_tlf01.product12_quantity,	db_tlf01.product12_quantity.arr,db_tlf01.product12_quantity.len);
   memcpy(pte_tlf01.product12_amount,	db_tlf01.product12_amount.arr,	db_tlf01.product12_amount.len);
   memcpy(pte_tlf01.product13_code,	db_tlf01.product13_code.arr,	db_tlf01.product13_code.len);
   memcpy(pte_tlf01.product13_quantity,	db_tlf01.product13_quantity.arr,db_tlf01.product13_quantity.len);
   memcpy(pte_tlf01.product13_amount,	db_tlf01.product13_amount.arr,	db_tlf01.product13_amount.len);
   memcpy(pte_tlf01.product14_code,	db_tlf01.product14_code.arr,	db_tlf01.product14_code.len);
   memcpy(pte_tlf01.product14_quantity,	db_tlf01.product14_quantity.arr,db_tlf01.product14_quantity.len);
   memcpy(pte_tlf01.product14_amount,	db_tlf01.product14_amount.arr,	db_tlf01.product14_amount.len);
   memcpy(pte_tlf01.product15_code,	db_tlf01.product15_code.arr,	db_tlf01.product15_code.len);
   memcpy(pte_tlf01.product15_quantity,	db_tlf01.product15_quantity.arr,db_tlf01.product15_quantity.len);
   memcpy(pte_tlf01.product15_amount,	db_tlf01.product15_amount.arr,	db_tlf01.product15_amount.len);
   memcpy(pte_tlf01.product16_code,	db_tlf01.product16_code.arr,	db_tlf01.product16_code.len);
   memcpy(pte_tlf01.product16_quantity,	db_tlf01.product16_quantity.arr,db_tlf01.product16_quantity.len);
   memcpy(pte_tlf01.product16_amount,	db_tlf01.product16_amount.arr,	db_tlf01.product16_amount.len);
   memcpy(pte_tlf01.product17_code,	db_tlf01.product17_code.arr,	db_tlf01.product17_code.len);
   memcpy(pte_tlf01.product17_quantity,	db_tlf01.product17_quantity.arr,db_tlf01.product17_quantity.len);
   memcpy(pte_tlf01.product17_amount,	db_tlf01.product17_amount.arr,	db_tlf01.product17_amount.len);
   memcpy(pte_tlf01.product18_code,	db_tlf01.product18_code.arr,	db_tlf01.product18_code.len);
   memcpy(pte_tlf01.product18_quantity,	db_tlf01.product18_quantity.arr,db_tlf01.product18_quantity.len);
   memcpy(pte_tlf01.product18_amount,	db_tlf01.product18_amount.arr,	db_tlf01.product18_amount.len);
   memcpy(pte_tlf01.product19_code,	db_tlf01.product19_code.arr,	db_tlf01.product19_code.len);
   memcpy(pte_tlf01.product19_quantity,	db_tlf01.product19_quantity.arr,db_tlf01.product19_quantity.len);
   memcpy(pte_tlf01.product19_amount,	db_tlf01.product19_amount.arr,	db_tlf01.product19_amount.len);
   memcpy(pte_tlf01.product20_code,	db_tlf01.product20_code.arr,	db_tlf01.product20_code.len);
   memcpy(pte_tlf01.product20_quantity,	db_tlf01.product20_quantity.arr,db_tlf01.product20_quantity.len);
   memcpy(pte_tlf01.product20_amount,	db_tlf01.product20_amount.arr,	db_tlf01.product20_amount.len);
   memcpy(pte_tlf01.visa_merchant_id, db_tlf01.visa_merchant_id.arr, db_tlf01.visa_merchant_id.len);
   
   memcpy(pte_tlf01.cash_bonus, db_tlf01.cash_bonus.arr, db_tlf01.cash_bonus.len);
   memcpy(pte_tlf01.deferred_factor, db_tlf01.deferred_factor.arr, db_tlf01.deferred_factor.len);
   memcpy(pte_tlf01.deferred_term_length, db_tlf01.deferred_term_length.arr, db_tlf01.deferred_term_length.len);
   memcpy(pte_tlf01.currency_code, db_tlf01.currency_code.arr, db_tlf01.currency_code.len);
   memcpy(pte_tlf01.transmission_timestamp, db_tlf01.transmission_timestamp.arr, db_tlf01.transmission_timestamp.len);
   memcpy(pte_tlf01.tran_fee_amount, db_tlf01.tran_fee_amount.arr, db_tlf01.tran_fee_amount.len);
   memcpy(pte_tlf01.cvc_data, db_tlf01.cvc_data.arr, db_tlf01.cvc_data.len);

   memcpy(pte_tlf01.verify_mag_stripe, db_tlf01.verify_mag_stripe.arr, db_tlf01.verify_mag_stripe.len);
   memcpy(pte_tlf01.saf, db_tlf01.saf.arr, db_tlf01.saf.len);
   memcpy(pte_tlf01.security_response_code, db_tlf01.security_response_code.arr, db_tlf01.security_response_code.len);
   memcpy(pte_tlf01.service_code, db_tlf01.service_code.arr, db_tlf01.service_code.len);
   memcpy(pte_tlf01.source_pin_format, db_tlf01.source_pin_format.arr, db_tlf01.source_pin_format.len);
   memcpy(pte_tlf01.dest_pin_format, db_tlf01.dest_pin_format.arr, db_tlf01.dest_pin_format.len);
   memcpy(pte_tlf01.voice_auth, db_tlf01.voice_auth.arr, db_tlf01.voice_auth.len);

   memcpy(pte_tlf01.actual_amount, db_tlf01.actual_amount.arr, db_tlf01.actual_amount.len);
   memcpy(pte_tlf01.reversal_amount, db_tlf01.reversal_amount.arr, db_tlf01.reversal_amount.len);
  
   memcpy(pte_tlf01.voice_auth_text, db_tlf01.voice_auth_text.arr, db_tlf01.voice_auth_text.len);
   memcpy(pte_tlf01.operator_id, db_tlf01.operator_id.arr, db_tlf01.operator_id.len);
   memcpy(pte_tlf01.workstation, db_tlf01.workstation.arr, db_tlf01.workstation.len);
   memcpy(pte_tlf01.orig_auth_number, db_tlf01.orig_auth_number.arr, db_tlf01.orig_auth_number.len);
   memcpy(pte_tlf01.ticket_nbr, db_tlf01.ticket_nbr.arr, db_tlf01.ticket_nbr.len);
   memcpy(pte_tlf01.system_date, db_tlf01.system_date.arr, db_tlf01.system_date.len);
   memcpy(pte_tlf01.def_gross_amt, db_tlf01.def_gross_amt.arr, db_tlf01.def_gross_amt.len);
   memcpy(pte_tlf01.monthly_amort_amt, db_tlf01.monthly_amort_amt.arr, db_tlf01.monthly_amort_amt.len);
   
   
    if(0==strncmp(pte_tlf01.product7_code,"ONUS",4) && (Dcpimp_RT_Flag == 1 || Falcon_RT_Flag == 1))
    {
   
   		if ( db_error_statics_flag == true )
    	{
    		start_time = ptetime_get_time();
    	}

    	if(strlen(pte_tlf01.handler_queue)<=0)
    	{
			EXEC SQL SELECT *
			INTO :db_ftlf01
			FROM ftlf01
			WHERE TRAN_ID=:pte_tlf01.transaction_id AND SYS_DATE=:pte_tlf01.system_date AND 
				rownum	 = 1
			For Update NOWAIT;
		}
		else
		{
			EXEC SQL SELECT *
			INTO :db_ftlf01
			FROM ftlf01
			WHERE TRAN_ID=:pte_tlf01.transaction_id AND SYS_DATE=:pte_tlf01.system_date AND
			HANDLER_QUEUE=:pte_tlf01.handler_queue AND 
				rownum	 = 1
			For Update NOWAIT;
		}
		
		if ( db_error_statics_flag == true )
    	{
      		end_time = ptetime_get_time();
      		duration = end_time - start_time;
      		if(duration >= db_error_statics_value)
	  		{
	  			memset(DB_Tmr_Lgng_Buf,0x00,sizeof(DB_Tmr_Lgng_Buf));
				sprintf(DB_Tmr_Lgng_Buf,"Exceeded Query: TLF_DBF, ST1:%d,ST2:%d ,Data_Type : FTLF01 ,Fun_Name : db_to_tlf01 , Duration = %f",DB_MsgSubtype1,DB_MsgSubtype2,duration);
				Log_Db_Statics_And_Oracle_Db_Error_To_File(DB_Tmr_Lgng_Buf);
	  		}
   		 }
   		 
		if ( SQLCODE != 0 && SQLCODE != NULL_COLUMN_DATA )
   		{
       		/* Fetching of FTL01 table failed. So,memset it to 0.
			 * Irrespective of the whether FTLF01 is fetched or not, PTSN01 needs to fetched.
			 * So, Dont return from here. Instead just memset to 0 and continue further to fetch ptsn01
			 */

    		memset( &pte_ftlf01, 0, sizeof( pte_ftlf01 ) );
	
		}
		else
		{
			db_to_ftlf01 ();
		}
	
	}
	
	if(0==strncmp(pte_tlf01.product2_code,"stndin",6))
	{
			EXEC SQL SELECT *
			INTO :db_tlf01_stip
			FROM tlf01_stip
			WHERE TRANSACTION_ID=:pte_tlf01.transaction_id AND SYSTEM_DATE=:pte_tlf01.system_date AND
				rownum	 = 1
			For Update NOWAIT; 
			
		if ( db_error_statics_flag == true )
    	{
      		end_time = ptetime_get_time();
      		duration = end_time - start_time;
      		if(duration >= db_error_statics_value)
	  		{
	  			memset(DB_Tmr_Lgng_Buf,0x00,sizeof(DB_Tmr_Lgng_Buf));
				sprintf(DB_Tmr_Lgng_Buf,"Exceeded Query: TLF_DBF, ST1:%d,ST2:%d ,Data_Type : FTLF01 ,Fun_Name : db_to_tlf01 , Duration = %f",DB_MsgSubtype1,DB_MsgSubtype2,duration);
				Log_Db_Statics_And_Oracle_Db_Error_To_File(DB_Tmr_Lgng_Buf);
	  		}
    	}
		if ( SQLCODE != 0 && SQLCODE != NULL_COLUMN_DATA )
    	{
			/* if fetching from tlf01_stip fails. dont return from here. continue further.
			   */

		}
		else
		{
		
			memcpy(Local_kek, db_tlf01_stip.kek.arr, db_tlf01_stip.kek.len);
	
		}
	}	


	if(true==DBF_Check_is_Acquiring_Transaction(&pte_tlf01))
	{
	
	 	if ( db_error_statics_flag == true )
    	{
    		start_time = ptetime_get_time();
   		}

		EXEC SQL SELECT *
		INTO :db_ptsn01
		FROM ptsn01
		WHERE TRANSACTION_ID=:pte_tlf01.transaction_id AND SYSTEM_DATE=:pte_tlf01.system_date AND
			rownum	 = 1
		For Update NOWAIT;
		
		if ( db_error_statics_flag == true )
    	{
      		end_time = ptetime_get_time();
      		duration = end_time - start_time;
      		if(duration >= db_error_statics_value)
	  		{
	  			memset(DB_Tmr_Lgng_Buf,0x00,sizeof(DB_Tmr_Lgng_Buf));
				sprintf(DB_Tmr_Lgng_Buf,"Exceeded Query: TLF_DBF, ST1:%d,ST2:%d ,Data_Type : FTLF01 ,Fun_Name : db_to_tlf01 , Duration = %f",DB_MsgSubtype1,DB_MsgSubtype2,duration);
				Log_Db_Statics_And_Oracle_Db_Error_To_File(DB_Tmr_Lgng_Buf);
	  		}
    	}
		if ( SQLCODE != 0 && SQLCODE != NULL_COLUMN_DATA )
    	{
    		memset( &pte_ptsn01, 0, sizeof( pte_ptsn01 ) );
    		if(strcmp(FileMode, "DBF") == 0)
   			{
   				WriteTLF01TableIntoDBF(&pte_tlf01);
   			}
   			else
   			{
   				WriteTLF01TableIntoTSV(&pte_tlf01,&pte_ftlf01,&pte_ptsn01,&Local_kek);
   			}
			memset(er_buf,0x00,sizeof(er_buf));
			DB_rcode = dbcommon_oracle_to_pte_rcode( SQLCODE, ErrorMsg ) ;
			sprintf(er_buf,"In  db_to_tlf01 ,ST1:%d,ST2:%d",DB_MsgSubtype1,DB_MsgSubtype2);
			strcat(er_buf,ErrorMsg);
			Log_Db_Statics_And_Oracle_Db_Error_To_File(er_buf);
			return DB_rcode;
		}
		else
		{
			db_to_ptsn01 ();	
		}

   	}

  	//Write into the DBF file with all the tables together.
   	if(strcmp(FileMode, "DBF") == 0)
   	{
   		WriteTLF01TableIntoDBF(&pte_tlf01);
   	}
   	else
   	{
   		WriteTLF01TableIntoTSV(&pte_tlf01,&pte_ftlf01,&pte_ptsn01,&Local_kek);
   	}
  
}

/*************************************************************************************/
/*************************************************************************************/
BYTE db_get_tlf01_count( pCHAR TotalCount, pCHAR ErrorMsg, pCHAR open_date )
{
	int retval;
	char total_count[20];
	EXEC SQL BEGIN DECLARE SECTION;
		int	NumRowsReturned = 0;
	EXEC SQL END DECLARE SECTION;
	if ( db_error_statics_flag == true )
	{
	   start_time = ptetime_get_time();
	}
	EXEC SQL SELECT COUNT(*) INTO :NumRowsReturned FROM tlf01 
		WHERE SYSTEM_DATE = :open_date
		AND message_type IN ('0100','0120','0200','0220','0400','0401','0420','1100','1120','1200','1220','1400','1420')
		ORDER BY  transaction_id;
	
	if ( db_error_statics_flag == true )
	{
		end_time = ptetime_get_time();
		duration = end_time - start_time;
		if(duration >= db_error_statics_value)
		{
			memset(DB_Tmr_Lgng_Buf,0x00,sizeof(DB_Tmr_Lgng_Buf));
			sprintf(DB_Tmr_Lgng_Buf,"Exceeded Query: %s, ST1:%d,ST2:%d ,Data_Type : TLF01 ,Fun_Name : db_get_tlf01_counts , Duration = %f",AppName,DB_MsgSubtype1,DB_MsgSubtype2,duration);
			Log_Db_Statics_And_Oracle_Db_Error_To_File(DB_Tmr_Lgng_Buf);
		}
	} 
	if ( SQLCODE != 0 )
	{
		memset(er_buf,0x00,sizeof(er_buf));
		sprintf(er_buf,"In db_get_tlf01_counts,ST1:%d,ST2:%d",DB_MsgSubtype1,DB_MsgSubtype2);
		DB_rcode = dbcommon_oracle_to_pte_rcode( SQLCODE, ErrorMsg );
		strcat(er_buf,ErrorMsg);
		Log_Db_Statics_And_Oracle_Db_Error_To_File(er_buf);
		return DB_rcode;
	}
	else
	{
		itoa(NumRowsReturned, TotalCount, 10);
		return PTEMSG_OK;
	}
}

/*************************************************************************************/
/*************************************************************************************/
BYTE db_get_tlf01_list( pCHAR ErrorMsg, pCHAR open_date )
{
   double start_time = 0;
   double end_time   = 0;
   double duration   = 0;
   int	count  = 0;
   int  retval = 0;
   EXEC SQL BEGIN DECLARE SECTION;

   char batch_nbr[7] = {0};
   char device_id[9] = {0};
  
   char release_date[9] = {0};
   char release_time[7] = {0};
 
   EXEC SQL END DECLARE SECTION;
	count = 0;

  /* retval = WriteSQL01_Table( &Sql01 );
   if ( retval < 0 )
   {
      sprintf( ErrorMsg,
              "Select TLF01 GUI List - Err writing to SQL01 in memory: %d",
               retval );
      dbf_log_message(2,2,ErrorMsg,"db_get_tlf01_list");
   }*/
	if ( db_error_statics_flag == true )
	{
	   start_time = ptetime_get_time();
	}
      EXEC SQL DECLARE tlf01_cursor CURSOR FOR
      SELECT *
      FROM tlf01
	  WHERE SYSTEM_DATE = :open_date
	  AND message_type IN ('0100','0120','0200','0220','0400','0401','0420','1100','1120','1200','1220','1400','1420')
      ORDER BY  time_hhmmss DESC;

	if ( db_error_statics_flag == true )
	{
		end_time = ptetime_get_time();
		duration = end_time - start_time;
		if(duration >= db_error_statics_value)
		{
			memset(DB_Tmr_Lgng_Buf,0x00,sizeof(DB_Tmr_Lgng_Buf));
			sprintf(DB_Tmr_Lgng_Buf,"Exceeded Query: %s, ST1:%d,ST2:%d ,Data_Type : TLF01 ,Fun_Name : db_get_tlf01_list_CURSOR , Duration = %f",AppName,DB_MsgSubtype1,DB_MsgSubtype2,duration);
			Log_Db_Statics_And_Oracle_Db_Error_To_File(DB_Tmr_Lgng_Buf);
		}
	} 
   EXEC SQL WHENEVER SQLERROR goto sql_error;

   EXEC SQL OPEN  tlf01_cursor;


   EXEC SQL WHENEVER SQLERROR goto sql_error2;
   EXEC SQL WHENEVER NOTFOUND DO break;

   while(1)
   {
      memset(&db_tlf01, 0x00, sizeof(db_tlf01));
	  if ( db_error_statics_flag == true )
	  {
	   	start_time = ptetime_get_time();
	  }
      EXEC SQL FETCH tlf01_cursor
      INTO :db_tlf01;
		if ( db_error_statics_flag == true )
		{
			end_time = ptetime_get_time();
			duration = end_time - start_time;
			if(duration >= db_error_statics_value)
			{
				memset(DB_Tmr_Lgng_Buf,0x00,sizeof(DB_Tmr_Lgng_Buf));
				sprintf(DB_Tmr_Lgng_Buf,"Exceeded Query: %s, ST1:%d,ST2:%d ,Data_Type : TLF01 ,Fun_Name : db_get_tlf01_list_FETCH , Duration = %f",AppName,DB_MsgSubtype1,DB_MsgSubtype2,duration);
				Log_Db_Statics_And_Oracle_Db_Error_To_File(DB_Tmr_Lgng_Buf);
			}
		} 
      sql_error2:
      if ( SQLCODE != 0 && SQLCODE != NULL_COLUMN_DATA )
      {
         SQL_CODE = SQLCODE;
         EXEC SQL CLOSE tlf01_cursor;

		memset(er_buf,0x00,sizeof(er_buf));
		sprintf(er_buf,"In db_get_tlf01_list,ST1:%d,ST2:%d_1",DB_MsgSubtype1,DB_MsgSubtype2);
		DB_rcode = dbcommon_oracle_to_pte_rcode( SQLCODE, ErrorMsg );
		strcat(er_buf,ErrorMsg);
		Log_Db_Statics_And_Oracle_Db_Error_To_File(er_buf);
		return DB_rcode;
      }
      

      db_to_tlf01();
      count ++;
   }
   printf("\n\nTotal records found %d\n\n",count);
  
   EXEC SQL CLOSE tlf01_cursor;


   sql_error:
   if ( SQLCODE != 0 && SQLCODE != NULL_COLUMN_DATA )
   {
		memset(er_buf,0x00,sizeof(er_buf));
		sprintf(er_buf,"In db_get_tlf01_list,ST1:%d,ST2:%d_2",DB_MsgSubtype1,DB_MsgSubtype2);
		DB_rcode = dbcommon_oracle_to_pte_rcode( SQLCODE, ErrorMsg );
		strcat(er_buf,ErrorMsg);
		Log_Db_Statics_And_Oracle_Db_Error_To_File(er_buf);
		return DB_rcode;
   }
   return PTEMSG_OK;
}



/*************************************************************************************/

