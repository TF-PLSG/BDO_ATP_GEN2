#include <stdlib.h>
#include <stdio.h>
#include <string.h>

#ifdef WIN32
   #include <sqlproto.h>
#endif

#include <math.h>
#include <time.h>
#include <sys/timeb.h>
#include <ctype.h>

#include "basictyp.h"
#include "pte.h"
#include "pteipc.h"
#include "ptemsg.h"
#include "ptetimer.h"
#include "app_info.h"
#include "equitdb.h"
#include "dc_dbstruct.h"
#include "nc_dbstruct.h"
#include "tx_database.h"
#include "dbcommon.h"
#include "txutils.h"
#include "ptetime.h"
#include "timings.h"
#include "ntutils.h"
#include "memmnger.h"

/* Function prototypes */
extern void format_date(pCHAR temp);
void genutil_bin_to_ascii (BYTE bstring[], INT blen, pCHAR astr, INT astr_len);

/* Oracle error codes */
#define NULL_COLUMN_DATA                -1405
#define NO_DATA_FOUND                   1403
#define NOT_CONNECTED_TO_DB             -3114
#define NOT_LOGGED_INTO_DB              -1012
#define TNS_PACKET_WRITER_FAILED        -12571
#define SHUTDOWN_OR_STARTUP_IN_PROGRESS -1033
#define VIEW_ERRORS  			-4063
#define UNIQUE_CONSTRAINT    5

extern  INT CashBonusWinner;

#ifdef _DEBUG
   #define PRINT( X ) printf( X )
#else
   #define PRINT( X )
#endif

extern CHAR app_name[];
SQL01  Sql01;
INT    rtnval;

EXEC SQL INCLUDE sqlca;

typedef struct
{
   WORD len;
   BYTE pin_data[100];
}RAWPINDATA;

typedef struct
{
   WORD len;
   BYTE pin_data[300];

}RAWEMVDATA;

/* Database Timing Measurements */
extern TIMINGS_LIST  TimingStats;
extern INT           DB_Timing_Flag; /* True = Do DB Timing Stats, False = don't do */


EXEC SQL BEGIN DECLARE SECTION;

   /* error code variable */
   long    SQLCODE;
   long    SQL_CODE;


EXEC SQL TYPE RAWPINDATA is VARRAW(5000);
EXEC SQL TYPE RAWEMVDATA is VARRAW(5000);
/*********/
/* TLF01 */
/*********/
struct
{
    char transaction_id                     [21]; 
    char entry_type                         ;
    char tpdu_id                            [16];
    char issuer_id                          [21];
    char acquirer_id                        [21];
    char tx_key                             ;
    char terminal_id                        [9];
    char terminal_type                      [3];
    char response_text                      [41];
    char card_num_len                       [3];
    char card_num                           [20];
    char exp_date                           [5];
    char total_amount                       [13];
    char add_amounts                        [25];
    char invoice_number                     [9];
    char orig_amount                        [13];
    char auth_number                        [7];
    char processing_code                    [7];
    char sys_trace_audit_num                [7];
    char orig_sys_trace_num                 [7];
    char pos_entry_mode                     [5];
    char nii                                [5];
    char pos_condition_code                 [3];
    char track1                             [77];
    char track2                             [38];
    char retrieval_ref_num                  [13];
    char orig_retrieval_ref_num             [13];
    char merchant_id                        [16];
    char orig_message                       [5];
    char settlement_total                   [17];
    char message_type                       [5];
    char card_holder_name                   [31];
    char general_status                     ;
    char originator_queue                   [17];
    char originator_info                    [33];
    char batch_number                       [7];
    char response_code                      [3];
    char date_yyyymmdd                      [9];
    char time_hhmmss                        [7];
    char num_sales                          [4];
    char sales_amount                       [13];
    char num_refunds                        [4];
    char refund_amount                      [13];
    char num_dbsales                        [4];
    char dbsales_amount                     [13];
    char num_dbrefunds                      [4];
    char dbrefund_amount                    [13];
    char pin_block                          [19];
    char tax_amount                         [13];
    char tip_amount                         [13];
    char tran_start_time                    [17];
    char host_start_time                    [17];
    char host_finish_time                   [17];
    char tran_finish_time                   [17];
    char settle_file_prefix                 [7];
    char resp_source_len                    [3];
    char visa_char_indicator                ;
    char visa_tran_id                       [16];
    char visa_validation_code               [5];
    char mcard_banknet_len                  [4];
    char mcard_banknet                      [51];
    char agent_id_len                       [4];
    char agent_id                           [12];
    char cvc                                ;
    char settlement_date                    [5];
    char category_code                      [5];
    char conversion_rate                    [10];
    char product_code                       [9];
    char odometer                           [8];
    char organization_id                    [5];
    char dynamic_keychange                  ;
   char source_key                          [49];
   char txn_cnt                            [4];
   char dcf01_retired_cwk                  [49];
   char dest_key                           [49];
   char ncf01_retired_cwk                  [49];
   char handler_queue        		       [8];
   char authorizing_host_queue		   	   [8];
   char max_net_consec_tmouts              [4];
   char max_active_txns                    [4];
   char forwarding_institution_id          [12];
   char remote_nsp_type                    [2];
   char kek                                [17]; 
   char acquiring_id                       [12];
   char outstanding_balance                [13]; 
   char credit_limit                       [13];
   char nfi_name                           [11];
   char nfi_seq_nbr                        [7];
   char nfi_start_date                     [9];
   char nfi_end_date                       [9];
   char resp_source                        [26];
   char origin                             [3];
   char auth_1                             [3];
   char auth_2                             [3];
   char update_mask                        [2];
   char type_of_data                       [3];
   char down_payment                       [13];
   char period                             [3];
   char interest_rate                      [5];
   char total_interest                     [13];
   char redemption_amount                  [13];
   char vehicle_number                     [9];
   char profile                                    [3];
   char nbr_of_prod_codes                          [3];
   char product1_code                              [7];
   char product1_quantity                          [3];
   char product1_amount                            [13];
   char product2_code                              [7];
   char product2_quantity                          [3];
   char product2_amount                            [13];
   char product3_code                              [7];
   char product3_quantity                          [3];
   char product3_amount                            [13];
   char product4_code                              [7];
   char product4_quantity                          [3];
   char product4_amount                            [13];
   char product5_code                              [7];
   char product5_quantity                          [3];
   char product5_amount                            [13];
   char product6_code                              [7];
   char product6_quantity                          [3];
   char product6_amount                            [13];
   char product7_code                              [7];
   char product7_quantity                          [3];
   char product7_amount                            [13];
   char product8_code                              [7];
   char product8_quantity                          [3];
   char product8_amount                            [13];
   char product9_code                              [7];
   char product9_quantity                          [3];
   char product9_amount                            [13];
   char product10_code                              [7];
   char product10_quantity                          [3];
   char product10_amount                            [13];
   char product11_code                              [7];
   char product11_quantity                          [3];
   char product11_amount                            [13];
   char product12_code                              [7];
   char product12_quantity                          [3];
   char product12_amount                            [13];
   char product13_code                              [7];
   char product13_quantity                          [3];
   char product13_amount                            [13];
   char product14_code                              [7];
   char product14_quantity                          [3];
   char product14_amount                            [13];
   char product15_code                              [7];
   char product15_quantity                          [3];
   char product15_amount                            [13];
   char product16_code                              [7];
   char product16_quantity                          [3];
   char product16_amount                            [13];
   char product17_code                              [7];
   char product17_quantity                          [3];
   char product17_amount                            [13];
   char product18_code                              [7];
   char product18_quantity                          [3];
   char product18_amount                            [13];
   char product19_code                              [7];
   char product19_quantity                          [3];
   char product19_amount                            [13];
   char product20_code                              [7];
   char product20_quantity                          [3];
   char product20_amount                            [13];
   char visa_merchant_id                            [16];
   char cash_bonus                                  [2];  /* added 01-29-99 by IG */
   char deferred_factor                             [8];  /* added 01-29-99 by IG */
   char deferred_term_length                        [4];  /* added 01-29-99 by IG */
   char currency_code                               [4];  /* added 01-29-99 by IG */
   char transmission_timestamp                      [11]; /* added 01-29-99 by IG */
   char tran_fee_amount                             [9];  /* added 01-29-99 by IG */
   char cvc_data                                    [4];  /* added 01-29-99 by IG */
   char verify_mag_stripe                           [2];  /* added 02-09-99 by IG */
   char saf                                         [2];  /* added 02-09-99 by IG */
   char security_response_code                      [3];  /* added 02-09-99 by IG */
   char service_code                                [4];  /* added 02-09-99 by IG */
   char source_pin_format                           [3];  /* added 02-09-99 by IG */
   char dest_pin_format                             [3];  /* added 02-09-99 by IG */
   char voice_auth                                  [2];  /* added 02-09-99 by IG */
   char actual_amount                               [13]; /* AP IG, Equitable 02-10-99 */
   char reversal_amount                             [13]; /* AP IG, Equitable 02-10-99 */
   char voice_auth_text                             [241]; /* IG 02-22-99 */ 
   char operator_id                                 [21];  /* IA 03-09-99 */
   char workstation                                 [21];  /* IA 03-16-99 */
   char orig_auth_number                            [7];   /* IA 04-08-99 */
   char ticket_nbr                                  [16];
   char system_date                                 [9];
   char def_gross_amt                               [13];
   char monthly_amort_amt                           [13];

}pte_tlf01;

struct
{
    varchar transaction_id                     [21]; 
    varchar entry_type                         [1];
    varchar tpdu_id                            [16];
    varchar issuer_id                          [21];
    varchar acquirer_id                        [21];
    varchar tx_key                             [1];
    varchar terminal_id                        [9];
    varchar terminal_type                      [3];
    varchar response_text                      [41];
    varchar card_num_len                       [3];
    varchar card_num                           [20];
    varchar exp_date                           [5];
    varchar total_amount                       [13];
    varchar add_amounts                        [25];
    varchar invoice_number                     [9];
    varchar orig_amount                        [13];
    varchar auth_number                        [7];
    varchar processing_code                    [7];
    varchar sys_trace_audit_num                [7];
    varchar orig_sys_trace_num                 [7];
    varchar pos_entry_mode                     [5];
    varchar nii                                [5];
    varchar pos_condition_code                 [3];
    varchar track1                             [77];
    varchar track2                             [38];
    varchar retrieval_ref_num                  [13];
    varchar orig_retrieval_ref_num             [13];
    varchar merchant_id                        [16];
    varchar orig_message                       [5];
    varchar settlement_total                   [17];
    varchar message_type                       [5];
    varchar card_holder_name                   [31];
    varchar general_status                     [1];
    varchar originator_queue                   [17];
    varchar originator_info                    [33];
    varchar batch_number                       [7];
    varchar response_code                      [3];
    varchar date_yyyymmdd                      [9];
    varchar time_hhmmss                        [7];
    varchar num_sales                          [4];
    varchar sales_amount                       [13];
    varchar num_refunds                        [4];
    varchar refund_amount                      [13];
    varchar num_dbsales                        [4];
    varchar dbsales_amount                     [13];
    varchar num_dbrefunds                      [4];
    varchar dbrefund_amount                    [13];
    varchar pin_block                          [19];
    varchar tax_amount                         [13];
    varchar tip_amount                         [13];
    varchar tran_start_time                    [17];
    varchar host_start_time                    [17];
    varchar host_finish_time                   [17];
    varchar tran_finish_time                   [17];
    varchar settle_file_prefix                 [7];
    varchar resp_source_len                    [3];
    varchar visa_char_indicator                [1];
    varchar visa_tran_id                       [16];
    varchar visa_validation_code               [5];
    varchar mcard_banknet_len                  [4];
    varchar mcard_banknet                      [51];
    varchar agent_id_len                       [4];
    varchar agent_id                           [12];
    varchar cvc                                [1];
    varchar settlement_date                    [5];
    varchar category_code                      [5];
    varchar conversion_rate                    [10];
    varchar product_code                       [9];
    varchar odometer                           [8];
    varchar organization_id                    [5];
    varchar dynamic_keychange                  [1];
   varchar source_key                         [49];
   varchar txn_cnt                            [4];
   varchar dcf01_retired_cwk                  [49];
   varchar dest_key                           [49];
   varchar ncf01_retired_cwk                  [49];
   varchar handler_queue        		      [8];
   varchar authorizing_host_queue		   	  [8];
   varchar max_net_consec_tmouts              [4];
   varchar max_active_txns                    [4];
   varchar forwarding_institution_id          [12];
   varchar remote_nsp_type                    [2];
   varchar kek                                [17];
   varchar acquiring_id                       [12];
   varchar outstanding_balance                [13];
   varchar credit_limit                       [13];
   varchar nfi_name                           [11];
   varchar nfi_seq_nbr                        [7];
   varchar nfi_start_date                     [9];
   varchar nfi_end_date                       [9];
   varchar resp_source                        [26];
   varchar origin                             [3];
   varchar auth_1                             [3];
   varchar auth_2                             [3];
   varchar update_mask                        [2];
   varchar type_of_data                       [3];
   varchar down_payment                       [13];
   varchar period                             [3];
   varchar interest_rate                      [5];
   varchar total_interest                     [13];
   varchar redemption_amount                  [13];
   varchar vehicle_number                     [9];
   varchar profile                                    [3];
   varchar nbr_of_prod_codes                          [3];
   varchar product1_code                              [7];
   varchar product1_quantity                          [3];
   varchar product1_amount                            [13];
   varchar product2_code                              [7];
   varchar product2_quantity                          [3];
   varchar product2_amount                            [13];
   varchar product3_code                              [7];
   varchar product3_quantity                          [3];
   varchar product3_amount                            [13];
   varchar product4_code                              [7];
   varchar product4_quantity                          [3];
   varchar product4_amount                            [13];
   varchar product5_code                              [7];
   varchar product5_quantity                          [3];
   varchar product5_amount                            [13];
   varchar product6_code                              [7];
   varchar product6_quantity                          [3];
   varchar product6_amount                            [13];
   varchar product7_code                              [7];
   varchar product7_quantity                          [3];
   varchar product7_amount                            [13];
   varchar product8_code                              [7];
   varchar product8_quantity                          [3];
   varchar product8_amount                            [13];
   varchar product9_code                              [7];
   varchar product9_quantity                          [3];
   varchar product9_amount                            [13];
   varchar product10_code                              [7];
   varchar product10_quantity                          [3];
   varchar product10_amount                            [13];
   varchar product11_code                              [7];
   varchar product11_quantity                          [3];
   varchar product11_amount                            [13];
   varchar product12_code                              [7];
   varchar product12_quantity                          [3];
   varchar product12_amount                            [13];
   varchar product13_code                              [7];
   varchar product13_quantity                          [3];
   varchar product13_amount                            [13];
   varchar product14_code                              [7];
   varchar product14_quantity                          [3];
   varchar product14_amount                            [13];
   varchar product15_code                              [7];
   varchar product15_quantity                          [3];
   varchar product15_amount                            [13];
   varchar product16_code                              [7];
   varchar product16_quantity                          [3];
   varchar product16_amount                            [13];
   varchar product17_code                              [7];
   varchar product17_quantity                          [3];
   varchar product17_amount                            [13];
   varchar product18_code                              [7];
   varchar product18_quantity                          [3];
   varchar product18_amount                            [13];
   varchar product19_code                              [7];
   varchar product19_quantity                          [3];
   varchar product19_amount                            [13];
   varchar product20_code                              [7];
   varchar product20_quantity                          [3];
   varchar product20_amount                            [13];
   varchar visa_merchant_id                            [16];
   varchar cash_bonus                                  [2];  /* added 01-29-99 by IG */
   varchar deferred_factor                             [8];  /* added 01-29-99 by IG */
   varchar deferred_term_length                        [4];  /* added 01-29-99 by IG */
   varchar currency_code                               [4];  /* added 01-29-99 by IG */
   varchar transmission_timestamp                      [11]; /* added 01-29-99 by IG */
   varchar tran_fee_amount                             [9];  /* added 01-29-99 by IG */
   varchar cvc_data                                    [4];  /* added 01-29-99 by IG */
   varchar verify_mag_stripe                           [2];  /* added 02-09-99 by IG */
   varchar saf                                         [2];  /* added 02-09-99 by IG */
   varchar security_response_code                      [3];  /* added 02-09-99 by IG */
   varchar service_code                                [4];  /* added 02-09-99 by IG */
   varchar source_pin_format                           [3];  /* added 02-09-99 by IG */
   varchar dest_pin_format                             [3];  /* added 02-09-99 by IG */
   varchar voice_auth                                  [2];  /* added 02-09-99 by IG */
   varchar actual_amount                               [13]; /* AP IG, Equitable 02-10-99 */
   varchar reversal_amount                             [13]; /* AP IG, Equitable 02-10-99 */
   varchar voice_auth_text                             [241]; /* IG 02-22-99 */
   varchar operator_id                                 [21];  /* IA 03-09-99 */
   varchar workstation                                 [21];  /* IA 03-16-99 */
   varchar orig_auth_number                            [7];   /* IA 04-08-99 */
   varchar ticket_nbr                                  [16];
   varchar system_date                                 [9];
   varchar def_gross_amt                               [13];
   varchar monthly_amort_amt                           [13];
}db_tlf01;

/*********/
/* BCH01 */
/*********/
struct
{
   char  device_id                                 [9];
   char  batch_nbr                                 [7];
   char  merchant_id                               [16];
   char  total_credit_cnt                          [5];
   char  total_credit_amt                          [13];
   char  total_credit_refund_cnt                   [5];
   char  total_credit_refund_amt                   [13];
   char  total_debit_cnt                           [5];
   char  total_debit_amt                           [13];
   char  total_debit_refund_cnt                    [5];
   char  total_debit_refund_amt                    [13];
   char  total_void_credit_cnt                     [5];
   char  total_void_credit_amt                     [13];
   char  total_void_credit_refund_cnt              [5];
   char  total_void_credit_refund_amt              [13];
   char  open_date                                 [9];
   char  open_time                                 [7];
   char  release_date                              [9];
   char  release_time                              [7];
   char  batch_status                              [2];      /*R-released;C-closed;A-active*/
   char  visa_merchant_id                          [16];

}pte_bch01;

struct
{
   varchar  device_id                                 [9];
   varchar  batch_nbr                                 [7];
   varchar  merchant_id                               [16];
   varchar  total_credit_cnt                          [5];
   varchar  total_credit_amt                          [13];
   varchar  total_credit_refund_cnt                   [5];
   varchar  total_credit_refund_amt                   [13];
   varchar  total_debit_cnt                           [5];
   varchar  total_debit_amt                           [13];
   varchar  total_debit_refund_cnt                    [5];
   varchar  total_debit_refund_amt                    [13];
   varchar  total_void_credit_cnt                     [5];
   varchar  total_void_credit_amt                     [13];
   varchar  total_void_credit_refund_cnt              [5];
   varchar  total_void_credit_refund_amt              [13];
   varchar  open_date                                 [9];
   varchar  open_time                                 [7];
   varchar  release_date                              [9];
   varchar  release_time                              [7];
   varchar  batch_status                              [2];      /*R-released;C-closed;A-active*/
   varchar  visa_merchant_id                          [16];

}db_bch01;
/*********/
/* BCH10 */
/*********/
struct
{
   char  device_id                                 [9];
   char  batch_nbr                                 [7];
   char  retrieval_ref_num                         [13];
   char  merchant_id                               [16];
   char  processing_code                           [7];
   char  tran_amount                               [13];
   char  response_code                             [3];
   char  auth_number                               [7];
   char  tran_date                                 [9];
   char  tran_time                                 [7];
   char  transaction_id                            [21];
   char  message_type                              [5];
   char  card_nbr                                  [20];
   char  invoice_nbr                               [9];
   char  settle_file_prefix                        [7];
   char  product_code                              [9];
   char  odometer                                  [8];
   char  sys_trace_audit_num                       [7];
   char  tx_key                                    ;
   char  bin_type                                  ;
   char type_of_data                               [3];
   char down_payment                               [13];
   char period                                     [3];
   char interest_rate                              [5];
   char total_interest                             [13];
   char redemption_amount                          [13];
   char vehicle_number                             [9];
   char pos_entry_mode                             [5];
   char profile                                    [3];
   char nbr_of_prod_codes                          [3];
   char product1_code                              [7];
   char product1_quantity                          [3];
   char product1_amount                            [13];
   char product2_code                              [7];
   char product2_quantity                          [3];
   char product2_amount                            [13];
   char product3_code                              [7];
   char product3_quantity                          [3];
   char product3_amount                            [13];
   char product4_code                              [7];
   char product4_quantity                          [3];
   char product4_amount                            [13];
   char product5_code                              [7];
   char product5_quantity                          [3];
   char product5_amount                            [13];
   char product6_code                              [7];
   char product6_quantity                          [3];
   char product6_amount                            [13];
   char product7_code                              [7];
   char product7_quantity                          [3];
   char product7_amount                            [13];
   char product8_code                              [7];
   char product8_quantity                          [3];
   char product8_amount                            [13];
   char product9_code                              [7];
   char product9_quantity                          [3];
   char product9_amount                            [13];
   char product10_code                              [7];
   char product10_quantity                          [3];
   char product10_amount                            [13];
   char product11_code                              [7];
   char product11_quantity                          [3];
   char product11_amount                            [13];
   char product12_code                              [7];
   char product12_quantity                          [3];
   char product12_amount                            [13];
   char product13_code                              [7];
   char product13_quantity                          [3];
   char product13_amount                            [13];
   char product14_code                              [7];
   char product14_quantity                          [3];
   char product14_amount                            [13];
   char product15_code                              [7];
   char product15_quantity                          [3];
   char product15_amount                            [13];
   char product16_code                              [7];
   char product16_quantity                          [3];
   char product16_amount                            [13];
   char product17_code                              [7];
   char product17_quantity                          [3];
   char product17_amount                            [13];
   char product18_code                              [7];
   char product18_quantity                          [3];
   char product18_amount                            [13];
   char product19_code                              [7];
   char product19_quantity                          [3];
   char product19_amount                            [13];
   char product20_code                              [7];
   char product20_quantity                          [3];
   char product20_amount                            [13];
   char aportionment_flag                           [2];
   char exp_date                                    [5];
   char open_date                                   [9];
   char open_time                                   [7];
   char cash_bonus                                  [2];
   char transmission_timestamp                      [11];
   char mcard_banknet                               [51];
   char ticket_nbr                                  [16];
   char def_gross_amt                               [13];
   char term                                        [4];

}pte_bch10;

struct
{
   varchar  device_id                                 [9];
   varchar  batch_nbr                                 [7];
   varchar  retrieval_ref_num                         [13];
   varchar  merchant_id                               [16];
   varchar  processing_code                           [7];
   varchar  tran_amount                               [13];
   varchar  response_code                             [3];
   varchar  auth_number                               [7];
   varchar  tran_date                                 [9];
   varchar  tran_time                                 [7];
   varchar  transaction_id                            [21];
   varchar  message_type                              [5];
   varchar  card_nbr                                  [20];
   varchar  invoice_nbr                               [9];
   varchar  settle_file_prefix                        [7];
   varchar  product_code                              [9];
   varchar  odometer                                  [8];
   varchar  sys_trace_audit_num                       [7];
   varchar  tx_key                                    [1];
   varchar  bin_type                                  [1];
   varchar type_of_data                               [3];
   varchar down_payment                               [13];
   varchar period                                     [3];
   varchar interest_rate                              [5];
   varchar total_interest                             [13];
   varchar redemption_amount                          [13];
   varchar vehicle_number                             [9];
   varchar pos_entry_mode                             [5];
   varchar profile                                    [3];
   varchar nbr_of_prod_codes                          [3];
   varchar product1_code                              [7];
   varchar product1_quantity                          [3];
   varchar product1_amount                            [13];
   varchar product2_code                              [7];
   varchar product2_quantity                          [3];
   varchar product2_amount                            [13];
   varchar product3_code                              [7];
   varchar product3_quantity                          [3];
   varchar product3_amount                            [13];
   varchar product4_code                              [7];
   varchar product4_quantity                          [3];
   varchar product4_amount                            [13];
   varchar product5_code                              [7];
   varchar product5_quantity                          [3];
   varchar product5_amount                            [13];
   varchar product6_code                              [7];
   varchar product6_quantity                          [3];
   varchar product6_amount                            [13];
   varchar product7_code                              [7];
   varchar product7_quantity                          [3];
   varchar product7_amount                            [13];
   varchar product8_code                              [7];
   varchar product8_quantity                          [3];
   varchar product8_amount                            [13];
   varchar product9_code                              [7];
   varchar product9_quantity                          [3];
   varchar product9_amount                            [13];
   varchar product10_code                              [7];
   varchar product10_quantity                          [3];
   varchar product10_amount                            [13];
   varchar product11_code                              [7];
   varchar product11_quantity                          [3];
   varchar product11_amount                            [13];
   varchar product12_code                              [7];
   varchar product12_quantity                          [3];
   varchar product12_amount                            [13];
   varchar product13_code                              [7];
   varchar product13_quantity                          [3];
   varchar product13_amount                            [13];
   varchar product14_code                              [7];
   varchar product14_quantity                          [3];
   varchar product14_amount                            [13];
   varchar product15_code                              [7];
   varchar product15_quantity                          [3];
   varchar product15_amount                            [13];
   varchar product16_code                              [7];
   varchar product16_quantity                          [3];
   varchar product16_amount                            [13];
   varchar product17_code                              [7];
   varchar product17_quantity                          [3];
   varchar product17_amount                            [13];
   varchar product18_code                              [7];
   varchar product18_quantity                          [3];
   varchar product18_amount                            [13];
   varchar product19_code                              [7];
   varchar product19_quantity                          [3];
   varchar product19_amount                            [13];
   varchar product20_code                              [7];
   varchar product20_quantity                          [3];
   varchar product20_amount                            [13];
   varchar aportionment_flag                           [2];
   varchar exp_date                                    [5];
   varchar open_date                                   [9];
   varchar open_time                                   [7];
   varchar cash_bonus                                  [2];
   varchar transmission_timestamp                      [11];
   varchar mcard_banknet                               [51];
   varchar ticket_nbr                                  [16];
   varchar def_gross_amt                               [13];
   varchar term                                        [4];

}db_bch10;

/*********/
/* BCH20 */
/*********/
/* 0100 transaction records, similar to bch10 */
struct
{
   char  device_id                                 [9];
   char  batch_nbr                                 [7];
   char  retrieval_ref_num                         [13];
   char  merchant_id                               [16];
   char  processing_code                           [7];
   char  tran_amount                               [13];
   char  response_code                             [3];
   char  auth_number                               [7];
   char  tran_date                                 [9];
   char  tran_time                                 [7];
   char  transaction_id                            [21];
   char  message_type                              [5];
   char  card_nbr                                  [20];
   char  invoice_nbr                               [9];
   char  settle_file_prefix                        [7];
   char  product_code                              [9];
   char  odometer                                  [8];
   char  sys_trace_audit_num                       [7];
   char  tx_key                                    ;
   char  bin_type                                  ;
   char type_of_data                               [3];
   char down_payment                               [13];
   char period                                     [3];
   char interest_rate                              [5];
   char total_interest                             [13];
   char redemption_amount                          [13];
   char vehicle_number                             [9];
   char pos_entry_mode                             [5];
   char profile                                    [3];
   char nbr_of_prod_codes                          [3];
   char product1_code                              [7];
   char product1_quantity                          [3];
   char product1_amount                            [13];
   char product2_code                              [7];
   char product2_quantity                          [3];
   char product2_amount                            [13];
   char product3_code                              [7];
   char product3_quantity                          [3];
   char product3_amount                            [13];
   char product4_code                              [7];
   char product4_quantity                          [3];
   char product4_amount                            [13];
   char product5_code                              [7];
   char product5_quantity                          [3];
   char product5_amount                            [13];
   char product6_code                              [7];
   char product6_quantity                          [3];
   char product6_amount                            [13];
   char product7_code                              [7];
   char product7_quantity                          [3];
   char product7_amount                            [13];
   char product8_code                              [7];
   char product8_quantity                          [3];
   char product8_amount                            [13];
   char product9_code                              [7];
   char product9_quantity                          [3];
   char product9_amount                            [13];
   char product10_code                              [7];
   char product10_quantity                          [3];
   char product10_amount                            [13];
   char product11_code                              [7];
   char product11_quantity                          [3];
   char product11_amount                            [13];
   char product12_code                              [7];
   char product12_quantity                          [3];
   char product12_amount                            [13];
   char product13_code                              [7];
   char product13_quantity                          [3];
   char product13_amount                            [13];
   char product14_code                              [7];
   char product14_quantity                          [3];
   char product14_amount                            [13];
   char product15_code                              [7];
   char product15_quantity                          [3];
   char product15_amount                            [13];
   char product16_code                              [7];
   char product16_quantity                          [3];
   char product16_amount                            [13];
   char product17_code                              [7];
   char product17_quantity                          [3];
   char product17_amount                            [13];
   char product18_code                              [7];
   char product18_quantity                          [3];
   char product18_amount                            [13];
   char product19_code                              [7];
   char product19_quantity                          [3];
   char product19_amount                            [13];
   char product20_code                              [7];
   char product20_quantity                          [3];
   char product20_amount                            [13];
   char aportionment_flag                           [2];
   char exp_date                                    [5];
   char open_date                                   [9];
   char open_time                                   [7];
   char cash_bonus                                  [2];
   char transmission_timestamp                      [11];
   char mcard_banknet                               [51];
   char  processed                                 [2];
   char ticket_nbr									[16];
   char def_gross_amt                               [13];
   char term                                        [4];

}pte_bch20;

struct
{
   varchar  device_id                                 [9];
   varchar  batch_nbr                                 [7];
   varchar  retrieval_ref_num                         [13];
   varchar  merchant_id                               [16];
   varchar  processing_code                           [7];
   varchar  tran_amount                               [13];
   varchar  response_code                             [3];
   varchar  auth_number                               [7];
   varchar  tran_date                                 [9];
   varchar  tran_time                                 [7];
   varchar  transaction_id                            [21];
   varchar  message_type                              [5];
   varchar  card_nbr                                  [20];
   varchar  invoice_nbr                               [9];
   varchar  settle_file_prefix                        [7];
   varchar  product_code                              [9];
   varchar  odometer                                  [8];
   varchar  sys_trace_audit_num                       [7];
   varchar  tx_key                                    [1];
   varchar  bin_type                                  [1];
   varchar type_of_data                               [3];
   varchar down_payment                               [13];
   varchar period                                     [3];
   varchar interest_rate                              [5];
   varchar total_interest                             [13];
   varchar redemption_amount                          [13];
   varchar vehicle_number                             [9];
   varchar pos_entry_mode                             [5];
   varchar profile                                    [3];
   varchar nbr_of_prod_codes                          [3];
   varchar product1_code                              [7];
   varchar product1_quantity                          [3];
   varchar product1_amount                            [13];
   varchar product2_code                              [7];
   varchar product2_quantity                          [3];
   varchar product2_amount                            [13];
   varchar product3_code                              [7];
   varchar product3_quantity                          [3];
   varchar product3_amount                            [13];
   varchar product4_code                              [7];
   varchar product4_quantity                          [3];
   varchar product4_amount                            [13];
   varchar product5_code                              [7];
   varchar product5_quantity                          [3];
   varchar product5_amount                            [13];
   varchar product6_code                              [7];
   varchar product6_quantity                          [3];
   varchar product6_amount                            [13];
   varchar product7_code                              [7];
   varchar product7_quantity                          [3];
   varchar product7_amount                            [13];
   varchar product8_code                              [7];
   varchar product8_quantity                          [3];
   varchar product8_amount                            [13];
   varchar product9_code                              [7];
   varchar product9_quantity                          [3];
   varchar product9_amount                            [13];
   varchar product10_code                              [7];
   varchar product10_quantity                          [3];
   varchar product10_amount                            [13];
   varchar product11_code                              [7];
   varchar product11_quantity                          [3];
   varchar product11_amount                            [13];
   varchar product12_code                              [7];
   varchar product12_quantity                          [3];
   varchar product12_amount                            [13];
   varchar product13_code                              [7];
   varchar product13_quantity                          [3];
   varchar product13_amount                            [13];
   varchar product14_code                              [7];
   varchar product14_quantity                          [3];
   varchar product14_amount                            [13];
   varchar product15_code                              [7];
   varchar product15_quantity                          [3];
   varchar product15_amount                            [13];
   varchar product16_code                              [7];
   varchar product16_quantity                          [3];
   varchar product16_amount                            [13];
   varchar product17_code                              [7];
   varchar product17_quantity                          [3];
   varchar product17_amount                            [13];
   varchar product18_code                              [7];
   varchar product18_quantity                          [3];
   varchar product18_amount                            [13];
   varchar product19_code                              [7];
   varchar product19_quantity                          [3];
   varchar product19_amount                            [13];
   varchar product20_code                              [7];
   varchar product20_quantity                          [3];
   varchar product20_amount                            [13];
   varchar aportionment_flag                           [2];
   varchar exp_date                                    [5];
   varchar open_date                                   [9];
   varchar open_time                                   [7];
   varchar cash_bonus                                  [2];
   varchar transmission_timestamp                      [11];
   varchar mcard_banknet                               [51];
   varchar  processed                                  [2];
   varchar ticket_nbr                                  [16];
   varchar def_gross_amt                               [13];
   varchar term                                        [4];

}db_bch20;
/*********/
/* ACF01 */
/*********/
struct
{
  char  account_type                              [3];
  char  account_nbr                               [20];
  char  status                                    [3];
  char  date_added                                [9];
  char  maint_date                                [9];
  char  changed_by                                [21];
  char  credit_limit                              [13];
  char  available                                 [13];
  char  outstanding                               [13];
  char  ledger_balance                            [13];
  char  cash_limit                                [13]; 
  char  cash_available                            [13]; 
  char  cash_outstanding                          [13]; 

}pte_acf01;

struct
{
  varchar  account_type                              [3];
  varchar  account_nbr                               [20];
  varchar  status                                    [3];
  varchar  date_added                                [9];
  varchar  maint_date                                [9];
  varchar  changed_by                                [21];
  varchar  credit_limit                              [13];
  varchar  available                                 [13];
  varchar  outstanding                               [13];
  varchar  ledger_balance                            [13];
  varchar  cash_limit                                [13]; 
  varchar  cash_available                            [13]; 
  varchar  cash_outstanding                          [13]; 

}db_acf01;
/*********/
/* CCF03p */
/*********/

struct
{
      char  card_type                                 [2];
      char  card_nbr                                  [20];
      char  primary_acct_nbr                          [20];
      char  daily_amt_usage                           [13];
      char  julian_date                               [8];
      char  peso_julian_date                          [8];
      char  dollar_julian_date                        [8];
      char  peso_usage1_nbr_usage                          [4];
      char  peso_usage1_amt_usage                          [13];
      char  peso_usage2_nbr_usage                          [4];
      char  peso_usage2_amt_usage                          [13];
      char  peso_usage3_nbr_usage                          [4];
      char  peso_usage3_amt_usage                          [13];
      char  peso_usage4_nbr_usage                          [4];
      char  peso_usage4_amt_usage                          [13];
      char  peso_usage5_nbr_usage                          [4];
      char  peso_usage5_amt_usage                          [13];
      char  peso_usage6_nbr_usage                          [4];
      char  peso_usage6_amt_usage                          [13];
      char  peso_usage7_nbr_usage                          [4];
      char  peso_usage7_amt_usage                          [13];
      char  peso_usage8_nbr_usage                          [4];
      char  peso_usage8_amt_usage                          [13];
      char  peso_usage9_nbr_usage                          [4];
      char  peso_usage9_amt_usage                          [13];
      char  peso_usage10_nbr_usage                         [4];
      char  peso_usage10_amt_usage                         [13];
      char  peso_usage11_nbr_usage                         [4];
      char  peso_usage11_amt_usage                         [13];
      char  peso_usage12_nbr_usage                         [4];
      char  peso_usage12_amt_usage                         [13];
      char  peso_usage13_nbr_usage                         [4];
      char  peso_usage13_amt_usage                         [13];
      char  peso_usage14_nbr_usage                         [4];
      char  peso_usage14_amt_usage                         [13];
      char  dollar_usage1_nbr_usage                          [4];
      char  dollar_usage1_amt_usage                          [13];
      char  dollar_usage2_nbr_usage                          [4];
      char  dollar_usage2_amt_usage                          [13];
      char  dollar_usage3_nbr_usage                          [4];
      char  dollar_usage3_amt_usage                          [13];
      char  dollar_usage4_nbr_usage                          [4];
      char  dollar_usage4_amt_usage                          [13];
      char  dollar_usage5_nbr_usage                          [4];
      char  dollar_usage5_amt_usage                          [13];
      char  dollar_usage6_nbr_usage                          [4];
      char  dollar_usage6_amt_usage                          [13];
      char  dollar_usage7_nbr_usage                          [4];
      char  dollar_usage7_amt_usage                          [13];
      char  dollar_usage8_nbr_usage                          [4];
      char  dollar_usage8_amt_usage                          [13];
      char  dollar_usage9_nbr_usage                          [4];
      char  dollar_usage9_amt_usage                          [13];
      char  dollar_usage10_nbr_usage                         [4];
      char  dollar_usage10_amt_usage                         [13];
      char  dollar_usage11_nbr_usage                         [4];
      char  dollar_usage11_amt_usage                         [13];
      char  dollar_usage12_nbr_usage                         [4];
      char  dollar_usage12_amt_usage                         [13];
      char  dollar_usage13_nbr_usage                         [4];
      char  dollar_usage13_amt_usage                         [13];
      char  dollar_usage14_nbr_usage                         [4];
      char  dollar_usage14_amt_usage                         [13];
      char  failed_pin_attempts                       [2];
      char  date_added                                [9];
      char  last_maint                                [9];
      char  status                                    [3];
      char  mcc1_code                                 [5];
      char  mcc1_usage                                [4];
      char  mcc2_code                                 [5];
      char  mcc2_usage                                [4];
      char  mcc3_code                                 [5];
      char  mcc3_usage                                [4];
      char  mcc4_code                                 [5];
      char  mcc4_usage                                [4];
      char  mcc5_code                                 [5];
      char  mcc5_usage                                [4];
      char  mcc6_code                                 [5];
      char  mcc6_usage                                [4];
      char  mcc7_code                                 [5];
      char  mcc7_usage                                [4];
      char  mcc8_code                                 [5];
      char  mcc8_usage                                [4];
      char  mcc9_code                                 [5];
      char  mcc9_usage                                [4];
      char  mcc10_code                                [5];
      char  mcc10_usage                               [4];
      char  mcc11_code                                [5];
      char  mcc11_usage                               [4];
      char  mcc12_code                                [5];
      char  mcc12_usage                               [4];
      char  mcc13_code                                [5];
      char  mcc13_usage                               [4];
      char  mcc14_code                                [5];
      char  mcc14_usage                               [4];
      char  mcc15_code                                [5];
      char  mcc15_usage                               [4];
      char  mcc16_code                                [5];
      char  mcc16_usage                               [4];
      char  mcc17_code                                [5];
      char  mcc17_usage                               [4];
      char  mcc18_code                                [5];
      char  mcc18_usage                               [4];
      char  mcc19_code                                [5];
      char  mcc19_usage                               [4];
      char  mcc20_code                                [5];
      char  mcc20_usage                               [4];
      char  repeat1_merchant_id                       [16];
      char  repeat1_nbr_uses                          [4];
      char  repeat2_merchant_id                       [16];
      char  repeat2_nbr_uses                          [4];
      char  repeat3_merchant_id                       [16];
      char  repeat3_nbr_uses                          [4];
      char  repeat4_merchant_id                       [16];
      char  repeat4_nbr_uses                          [4];
      char  repeat5_merchant_id                       [16];
      char  repeat5_nbr_uses                          [4];
      char  repeat6_merchant_id                       [16];
      char  repeat6_nbr_uses                          [4];
      char  repeat7_merchant_id                       [16];
      char  repeat7_nbr_uses                          [4];
      char  repeat8_merchant_id                       [16];
      char  repeat8_nbr_uses                          [4];
      char  repeat9_merchant_id                       [16];
      char  repeat9_nbr_uses                          [4];
      char  repeat10_merchant_id                      [16];
      char  repeat10_nbr_uses                         [4];
      char  repeat11_merchant_id                      [16];
      char  repeat11_nbr_uses                         [4];
      char  repeat12_merchant_id                      [16];
      char  repeat12_nbr_uses                         [4];
      char  repeat13_merchant_id                      [16];
      char  repeat13_nbr_uses                         [4];
      char  repeat14_merchant_id                      [16];
      char  repeat14_nbr_uses                         [4];
      char  repeat15_merchant_id                      [16];
      char  repeat15_nbr_uses                         [4];
      char  repeat16_merchant_id                      [16];
      char  repeat16_nbr_uses                         [4];
      char  repeat17_merchant_id                      [16];
      char  repeat17_nbr_uses                         [4];
      char  repeat18_merchant_id                      [16];
      char  repeat18_nbr_uses                         [4];
      char  repeat19_merchant_id                      [16];
      char  repeat19_nbr_uses                         [4];
      char  repeat20_merchant_id                      [16];
      char  repeat20_nbr_uses                         [4];

   }pte_ccf03p;

   struct
   {
      varchar  card_type                                 [2];
      varchar  card_nbr                                  [20];
      varchar  primary_acct_nbr                          [20];
      varchar  daily_amt_usage                           [13];
      varchar  julian_date                               [8];
      varchar  peso_julian_date                          [8];
      varchar  dollar_julian_date                        [8];
      varchar  peso_usage1_nbr_usage                          [4];
      varchar  peso_usage1_amt_usage                          [13];
      varchar  peso_usage2_nbr_usage                          [4];
      varchar  peso_usage2_amt_usage                          [13];
      varchar  peso_usage3_nbr_usage                          [4];
      varchar  peso_usage3_amt_usage                          [13];
      varchar  peso_usage4_nbr_usage                          [4];
      varchar  peso_usage4_amt_usage                          [13];
      varchar  peso_usage5_nbr_usage                          [4];
      varchar  peso_usage5_amt_usage                          [13];
      varchar  peso_usage6_nbr_usage                          [4];
      varchar  peso_usage6_amt_usage                          [13];
      varchar  peso_usage7_nbr_usage                          [4];
      varchar  peso_usage7_amt_usage                          [13];
      varchar  peso_usage8_nbr_usage                          [4];
      varchar  peso_usage8_amt_usage                          [13];
      varchar  peso_usage9_nbr_usage                          [4];
      varchar  peso_usage9_amt_usage                          [13];
      varchar  peso_usage10_nbr_usage                         [4];
      varchar  peso_usage10_amt_usage                         [13];
      varchar  peso_usage11_nbr_usage                         [4];
      varchar  peso_usage11_amt_usage                         [13];
      varchar  peso_usage12_nbr_usage                         [4];
      varchar  peso_usage12_amt_usage                         [13];
      varchar  peso_usage13_nbr_usage                         [4];
      varchar  peso_usage13_amt_usage                         [13];
      varchar  peso_usage14_nbr_usage                         [4];
      varchar  peso_usage14_amt_usage                         [13];
      varchar  dollar_usage1_nbr_usage                          [4];
      varchar  dollar_usage1_amt_usage                          [13];
      varchar  dollar_usage2_nbr_usage                          [4];
      varchar  dollar_usage2_amt_usage                          [13];
      varchar  dollar_usage3_nbr_usage                          [4];
      varchar  dollar_usage3_amt_usage                          [13];
      varchar  dollar_usage4_nbr_usage                          [4];
      varchar  dollar_usage4_amt_usage                          [13];
      varchar  dollar_usage5_nbr_usage                          [4];
      varchar  dollar_usage5_amt_usage                          [13];
      varchar  dollar_usage6_nbr_usage                          [4];
      varchar  dollar_usage6_amt_usage                          [13];
      varchar  dollar_usage7_nbr_usage                          [4];
      varchar  dollar_usage7_amt_usage                          [13];
      varchar  dollar_usage8_nbr_usage                          [4];
      varchar  dollar_usage8_amt_usage                          [13];
      varchar  dollar_usage9_nbr_usage                          [4];
      varchar  dollar_usage9_amt_usage                          [13];
      varchar  dollar_usage10_nbr_usage                         [4];
      varchar  dollar_usage10_amt_usage                         [13];
      varchar  dollar_usage11_nbr_usage                         [4];
      varchar  dollar_usage11_amt_usage                         [13];
      varchar  dollar_usage12_nbr_usage                         [4];
      varchar  dollar_usage12_amt_usage                         [13];
      varchar  dollar_usage13_nbr_usage                         [4];
      varchar  dollar_usage13_amt_usage                         [13];
      varchar  dollar_usage14_nbr_usage                         [4];
      varchar  dollar_usage14_amt_usage                         [13];
      varchar  failed_pin_attempts                       [2];
      varchar  date_added                                [9];
      varchar  last_maint                                [9];
      varchar  status                                    [3];
      varchar  mcc1_code                                 [5];
      varchar  mcc1_usage                                [4];
      varchar  mcc2_code                                 [5];
      varchar  mcc2_usage                                [4];
      varchar  mcc3_code                                 [5];
      varchar  mcc3_usage                                [4];
      varchar  mcc4_code                                 [5];
      varchar  mcc4_usage                                [4];
      varchar  mcc5_code                                 [5];
      varchar  mcc5_usage                                [4];
      varchar  mcc6_code                                 [5];
      varchar  mcc6_usage                                [4];
      varchar  mcc7_code                                 [5];
      varchar  mcc7_usage                                [4];
      varchar  mcc8_code                                 [5];
      varchar  mcc8_usage                                [4];
      varchar  mcc9_code                                 [5];
      varchar  mcc9_usage                                [4];
      varchar  mcc10_code                                [5];
      varchar  mcc10_usage                               [4];
      varchar  mcc11_code                                [5];
      varchar  mcc11_usage                               [4];
      varchar  mcc12_code                                [5];
      varchar  mcc12_usage                               [4];
      varchar  mcc13_code                                [5];
      varchar  mcc13_usage                               [4];
      varchar  mcc14_code                                [5];
      varchar  mcc14_usage                               [4];
      varchar  mcc15_code                                [5];
      varchar  mcc15_usage                               [4];
      varchar  mcc16_code                                [5];
      varchar  mcc16_usage                               [4];
      varchar  mcc17_code                                [5];
      varchar  mcc17_usage                               [4];
      varchar  mcc18_code                                [5];
      varchar  mcc18_usage                               [4];
      varchar  mcc19_code                                [5];
      varchar  mcc19_usage                               [4];
      varchar  mcc20_code                                [5];
      varchar  mcc20_usage                               [4];
      varchar  repeat1_merchant_id                       [16];
      varchar  repeat1_nbr_uses                          [4];
      varchar  repeat2_merchant_id                       [16];
      varchar  repeat2_nbr_uses                          [4];
      varchar  repeat3_merchant_id                       [16];
      varchar  repeat3_nbr_uses                          [4];
      varchar  repeat4_merchant_id                       [16];
      varchar  repeat4_nbr_uses                          [4];
      varchar  repeat5_merchant_id                       [16];
      varchar  repeat5_nbr_uses                          [4];
      varchar  repeat6_merchant_id                       [16];
      varchar  repeat6_nbr_uses                          [4];
      varchar  repeat7_merchant_id                       [16];
      varchar  repeat7_nbr_uses                          [4];
      varchar  repeat8_merchant_id                       [16];
      varchar  repeat8_nbr_uses                          [4];
      varchar  repeat9_merchant_id                       [16];
      varchar  repeat9_nbr_uses                          [4];
      varchar  repeat10_merchant_id                      [16];
      varchar  repeat10_nbr_uses                         [4];
      varchar  repeat11_merchant_id                      [16];
      varchar  repeat11_nbr_uses                         [4];
      varchar  repeat12_merchant_id                      [16];
      varchar  repeat12_nbr_uses                         [4];
      varchar  repeat13_merchant_id                      [16];
      varchar  repeat13_nbr_uses                         [4];
      varchar  repeat14_merchant_id                      [16];
      varchar  repeat14_nbr_uses                         [4];
      varchar  repeat15_merchant_id                      [16];
      varchar  repeat15_nbr_uses                         [4];
      varchar  repeat16_merchant_id                      [16];
      varchar  repeat16_nbr_uses                         [4];
      varchar  repeat17_merchant_id                      [16];
      varchar  repeat17_nbr_uses                         [4];
      varchar  repeat18_merchant_id                      [16];
      varchar  repeat18_nbr_uses                         [4];
      varchar  repeat19_merchant_id                      [16];
      varchar  repeat19_nbr_uses                         [4];
      varchar  repeat20_merchant_id                      [16];
      varchar  repeat20_nbr_uses                         [4];

   }db_ccf03p;
/*********/
/* CCF02p */
/*********/
   struct
   {
      char  card_type                                 [2];
      char  card_nbr                                  [20];

      char  primary_acct_nbr                          [20];
      char  caf_profile_id                            [5];
      char  status                                    [3];
      char  pin_offset                                [9];
      char  date_added                                [9];
      char  maint_date                                [9];
      char  changed_by                                [21];
      char  card_class                                [2];
      char  expire_date                               [5];
      char  effect_date                               [9];
      char  percent_deposit                           [3];
      char  percent_avail_allowed                     [3];
      char  credit_line                               [13];
      char  outstanding_auths                         [13];
      char  allowed                                   [17];
      char  currency_code                             [4];
      char  country_code                              [4];
      char  peso_saving_acct                          [13]; 
      char  peso_current_acct                         [13]; 
      char  dollar_saving_acct                        [13]; 
      char  dollar_current_acct                       [13]; 
      char  product_codes                             [21]; 
      char  cash_bonus_eligible                       [2];  
      char  visa_purchase_card                        [2];
      char  related_acct_type_1                       [3];
      char  related_acct_nbr_1                        [20];
      char  related_acct_type_2                       [3];
      char  related_acct_nbr_2                        [20];
      char  related_acct_type_3                       [3];
      char  related_acct_nbr_3                        [20];
      char  related_acct_type_4                       [3];
      char  related_acct_nbr_4                        [20];
      char  related_acct_type_5                       [3];
      char  related_acct_nbr_5                        [20];
      char  related_acct_type_6                       [3];
      char  related_acct_nbr_6                        [20];
      char  related_acct_type_7                       [3];
      char  related_acct_nbr_7                        [20];
      char  related_acct_type_8                       [3];
      char  related_acct_nbr_8                        [20];
      char  related_acct_type_9                       [3];
      char  related_acct_nbr_9                        [20];
      char  related_acct_type_10                      [3];
      char  related_acct_nbr_10                       [20];

      char  pin_verification_override                 [2];
      char  pin                                       [51];
      char  pvki                                      [3] ;     /* Modified by SDG on Feb 17 */
      char  add_on_rate                               [6];
      char  add_on_term                               [4];
      char  peso_tran_limit                           [13];
      char  dollar_tran_limit                         [13];
   }pte_ccf02p;

   struct
   {
      varchar  card_type                                 [2];
      varchar  card_nbr                                  [20];

      varchar  primary_acct_nbr                          [20];
      varchar  caf_profile_id                            [5];
      varchar  status                                    [3];
      varchar  pin_offset                                [9];
      varchar  date_added                                [9];
      varchar  maint_date                                [9];
      varchar  changed_by                                [21];
      varchar  card_class                                [2];
      varchar  expire_date                               [5];
      varchar  effect_date                               [9];
      varchar  percent_deposit                           [3];
      varchar  percent_avail_allowed                     [3];
      varchar  credit_line                               [13];
      varchar  outstanding_auths                         [13];
      varchar  allowed                                   [17];
      varchar  currency_code                             [4];
      varchar  country_code                              [4];
      varchar  peso_saving_acct                          [13]; 
      varchar  peso_current_acct                         [13]; 
      varchar  dollar_saving_acct                        [13]; 
      varchar  dollar_current_acct                       [13]; 
      varchar  product_codes                             [21]; 
      varchar  cash_bonus_eligible                       [2];  
      varchar  visa_purchase_card                        [2];
      varchar  related_acct_type_1                       [3];
      varchar  related_acct_nbr_1                        [20];
      varchar  related_acct_type_2                       [3];
      varchar  related_acct_nbr_2                        [20];
      varchar  related_acct_type_3                       [3];
      varchar  related_acct_nbr_3                        [20];
      varchar  related_acct_type_4                       [3];
      varchar  related_acct_nbr_4                        [20];
      varchar  related_acct_type_5                       [3];
      varchar  related_acct_nbr_5                        [20];
      varchar  related_acct_type_6                       [3];
      varchar  related_acct_nbr_6                        [20];
      varchar  related_acct_type_7                       [3];
      varchar  related_acct_nbr_7                        [20];
      varchar  related_acct_type_8                       [3];
      varchar  related_acct_nbr_8                        [20];
      varchar  related_acct_type_9                       [3];
      varchar  related_acct_nbr_9                        [20];
      varchar  related_acct_type_10                      [3];
      varchar  related_acct_nbr_10                       [20];

      varchar  pin_verification_override                 [2];
      varchar  pin										[51];
      varchar pvki                                       [3];
      varchar  add_on_rate                               [6];
      varchar  add_on_term                               [4];
      varchar  peso_tran_limit                           [13];
      varchar  dollar_tran_limit                         [13];

   }db_ccf02p;
/*********/
/* TLF01_STIP */
/*********/
struct
{
    char transaction_id                     [21]; 

    char entry_type                         ;
    char tpdu_id                            [16];
    char issuer_id                          [21];
    char acquirer_id                        [21];
    char tx_key                             ;
    char terminal_id                        [9];
    char terminal_type                      [3];
    char response_text                      [41];
    char card_num_len                       [3];
    char card_num                           [20];
    char exp_date                           [5];
    char total_amount                       [13];
    char add_amounts                        [25];
    char invoice_number                     [9];
    char orig_amount                        [13];
    char auth_number                        [7];
    char processing_code                    [7];
    char sys_trace_audit_num                [7];
    char orig_sys_trace_num                 [7];
    char pos_entry_mode                     [5];
    char nii                                [5];
    char pos_condition_code                 [3];
    char track1                             [77];
    char track2                             [38];
    char retrieval_ref_num                  [13];
    char orig_retrieval_ref_num             [13];
    char merchant_id                        [16];
    char orig_message                       [5];
    char settlement_total                   [17];
    char message_type                       [5];
    char card_holder_name                   [31];
    char general_status                     ;
    char originator_queue                   [17];
    char originator_info                    [33];
    char batch_number                       [7];
    char response_code                      [3];
    char date_yyyymmdd                      [9];
    char time_hhmmss                        [7];
    char num_sales                          [4];
    char sales_amount                       [13];
    char num_refunds                        [4];
    char refund_amount                      [13];
    char num_dbsales                        [4];
    char dbsales_amount                     [13];
    char num_dbrefunds                      [4];
    char dbrefund_amount                    [13];
    char pin_block                          [19];
    char tax_amount                         [13];
    char tip_amount                         [13];
    char tran_start_time                    [17];
    char host_start_time                    [17];
    char host_finish_time                   [17];
    char tran_finish_time                   [17];
    char settle_file_prefix                 [7];
    char resp_source_len                    [3];
    char visa_char_indicator                ;
    char visa_tran_id                       [16];
    char visa_validation_code               [5];
    char mcard_banknet_len                  [4];
    char mcard_banknet                      [51];
    char agent_id_len                       [4];
    char agent_id                           [12];
    char cvc                                ;
    char settlement_date                    [5];

    char category_code                      [5];
    char conversion_rate                    [10];
    char product_code                       [9];
    char odometer                           [8];
    char organization_id                    [5];
    char dynamic_keychange                  ;

   char source_key                          [49];
   char txn_cnt                            [4];
   char dcf01_retired_cwk                  [49];
   char dest_key                           [49];
   char ncf01_retired_cwk                  [49];
   char handler_queue        		       [8];
   char authorizing_host_queue		   	   [8];
   char max_net_consec_tmouts              [4];
   char max_active_txns                    [4];
   char forwarding_institution_id          [12];
   char remote_nsp_type                    [2];
   char kek                                [17]; 
   char acquiring_id                       [12];
   char outstanding_balance                [13]; 
   char credit_limit                       [13];
   char nfi_name                           [11];
   char nfi_seq_nbr                        [7];
   char nfi_start_date                     [9];
   char nfi_end_date                       [9];
   char resp_source                        [26];

   char origin                             [3];
   char auth_1                             [3];
   char auth_2                             [3];
   char update_mask                        [2];
   char type_of_data                       [3];
   char down_payment                       [13];
   char period                             [3];
   char interest_rate                      [5];
   char total_interest                     [13];
   char redemption_amount                  [13];
   char vehicle_number                     [9];

   char profile                                    [3];
   char nbr_of_prod_codes                          [3];
   
   char product1_code                              [7];
   char product1_quantity                          [3];
   char product1_amount                            [13];
   char product2_code                              [7];
   char product2_quantity                          [3];
   char product2_amount                            [13];
   char product3_code                              [7];
   char product3_quantity                          [3];
   char product3_amount                            [13];
   char product4_code                              [7];
   char product4_quantity                          [3];
   char product4_amount                            [13];
   char product5_code                              [7];
   char product5_quantity                          [3];
   char product5_amount                            [13];
   char product6_code                              [7];
   char product6_quantity                          [3];
   char product6_amount                            [13];
   char product7_code                              [7];
   char product7_quantity                          [3];
   char product7_amount                            [13];
   char product8_code                              [7];
   char product8_quantity                          [3];
   char product8_amount                            [13];
   char product9_code                              [7];
   char product9_quantity                          [3];
   char product9_amount                            [13];
   char product10_code                              [7];
   char product10_quantity                          [3];
   char product10_amount                            [13];
   char product11_code                              [7];
   char product11_quantity                          [3];
   char product11_amount                            [13];
   char product12_code                              [7];
   char product12_quantity                          [3];
   char product12_amount                            [13];
   char product13_code                              [7];
   char product13_quantity                          [3];
   char product13_amount                            [13];
   char product14_code                              [7];
   char product14_quantity                          [3];
   char product14_amount                            [13];
   char product15_code                              [7];
   char product15_quantity                          [3];
   char product15_amount                            [13];
   char product16_code                              [7];
   char product16_quantity                          [3];
   char product16_amount                            [13];
   char product17_code                              [7];
   char product17_quantity                          [3];
   char product17_amount                            [13];
   char product18_code                              [7];
   char product18_quantity                          [3];
   char product18_amount                            [13];
   char product19_code                              [7];
   char product19_quantity                          [3];
   char product19_amount                            [13];
   char product20_code                              [7];
   char product20_quantity                          [3];
   char product20_amount                            [13];
   char visa_merchant_id                            [16];
   char cash_bonus                                  [2];  
   char deferred_factor                             [8]; 
   char deferred_term_length                        [4]; 
   char currency_code                               [4];  
   char transmission_timestamp                      [11]; 
   char tran_fee_amount                             [9];  
   char cvc_data                                    [4];  

   char verify_mag_stripe                           [2];  
   char saf                                         [2];  
   char security_response_code                      [3];  
   char service_code                                [4];  
   char source_pin_format                           [3];  
   char dest_pin_format                             [3];  
   char voice_auth                                  [2]; 
   char actual_amount                               [13]; 
   char reversal_amount                             [13]; 
   char voice_auth_text                             [241]; 
   char operator_id                                 [21];  
   char workstation                                 [21];  
   char orig_auth_number                            [7];  
   char ticket_nbr									[16];
   char system_date                                 [9];
   char def_gross_amt                               [13];
   char monthly_amort_amt                           [13];
}pte_tlf01_stip;

struct
{
    varchar transaction_id                     [21]; 

    varchar entry_type                         [1];
    varchar tpdu_id                            [16];
    varchar issuer_id                          [21];
    varchar acquirer_id                        [21];
    varchar tx_key                             [1];
    varchar terminal_id                        [9];
    varchar terminal_type                      [3];
    varchar response_text                      [41];
    varchar card_num_len                       [3];
    varchar card_num                           [20];
    varchar exp_date                           [5];
    varchar total_amount                       [13];
    varchar add_amounts                        [25];
    varchar invoice_number                     [9];
    varchar orig_amount                        [13];
    varchar auth_number                        [7];
    varchar processing_code                    [7];
    varchar sys_trace_audit_num                [7];
    varchar orig_sys_trace_num                 [7];
    varchar pos_entry_mode                     [5];
    varchar nii                                [5];
    varchar pos_condition_code                 [3];
    varchar track1                             [77];
    varchar track2                             [38];
    varchar retrieval_ref_num                  [13];
    varchar orig_retrieval_ref_num             [13];
    varchar merchant_id                        [16];
    varchar orig_message                       [5];
    varchar settlement_total                   [17];
    varchar message_type                       [5];
    varchar card_holder_name                   [31];
    varchar general_status                     [1];
    varchar originator_queue                   [17];
    varchar originator_info                    [33];
    varchar batch_number                       [7];
    varchar response_code                      [3];
    varchar date_yyyymmdd                      [9];
    varchar time_hhmmss                        [7];
    varchar num_sales                          [4];
    varchar sales_amount                       [13];
    varchar num_refunds                        [4];
    varchar refund_amount                      [13];
    varchar num_dbsales                        [4];
    varchar dbsales_amount                     [13];
    varchar num_dbrefunds                      [4];
    varchar dbrefund_amount                    [13];
    varchar pin_block                          [19];
    varchar tax_amount                         [13];
    varchar tip_amount                         [13];
    varchar tran_start_time                    [17];
    varchar host_start_time                    [17];
    varchar host_finish_time                   [17];
    varchar tran_finish_time                   [17];
    varchar settle_file_prefix                 [7];
    varchar resp_source_len                    [3];
    varchar visa_char_indicator                [1];
    varchar visa_tran_id                       [16];
    varchar visa_validation_code               [5];
    varchar mcard_banknet_len                  [4];
    varchar mcard_banknet                      [51];
    varchar agent_id_len                       [4];
    varchar agent_id                           [12];
    varchar cvc                                [1];
    varchar settlement_date                    [5];

    varchar category_code                      [5];
    varchar conversion_rate                    [10];
    varchar product_code                       [9];
    varchar odometer                           [8];
    varchar organization_id                    [5];
    varchar dynamic_keychange                  [1];

   varchar source_key                         [49];
   varchar txn_cnt                            [4];
   varchar dcf01_retired_cwk                  [49];
   varchar dest_key                           [49];
   varchar ncf01_retired_cwk                  [49];
   varchar handler_queue        		      [8];
   varchar authorizing_host_queue		   	  [8];
   varchar max_net_consec_tmouts              [4];
   varchar max_active_txns                    [4];
   varchar forwarding_institution_id          [12];
   varchar remote_nsp_type                    [2];
   varchar kek                                [17];
   varchar acquiring_id                       [12];
   varchar outstanding_balance                [13];
   varchar credit_limit                       [13];
   varchar nfi_name                           [11];
   varchar nfi_seq_nbr                        [7];
   varchar nfi_start_date                     [9];
   varchar nfi_end_date                       [9];
   varchar resp_source                        [26];
   varchar origin                             [3];
   varchar auth_1                             [3];
   varchar auth_2                             [3];
   varchar update_mask                        [2];
   varchar type_of_data                       [3];
   varchar down_payment                       [13];
   varchar period                             [3];
   varchar interest_rate                      [5];
   varchar total_interest                     [13];
   varchar redemption_amount                  [13];
   varchar vehicle_number                     [9];

   varchar profile                                    [3];
   varchar nbr_of_prod_codes                          [3];
   
   varchar product1_code                              [7];
   varchar product1_quantity                          [3];
   varchar product1_amount                            [13];
   varchar product2_code                              [7];
   varchar product2_quantity                          [3];
   varchar product2_amount                            [13];
   varchar product3_code                              [7];
   varchar product3_quantity                          [3];
   varchar product3_amount                            [13];
   varchar product4_code                              [7];
   varchar product4_quantity                          [3];
   varchar product4_amount                            [13];
   varchar product5_code                              [7];
   varchar product5_quantity                          [3];
   varchar product5_amount                            [13];
   varchar product6_code                              [7];
   varchar product6_quantity                          [3];
   varchar product6_amount                            [13];
   varchar product7_code                              [7];
   varchar product7_quantity                          [3];
   varchar product7_amount                            [13];
   varchar product8_code                              [7];
   varchar product8_quantity                          [3];
   varchar product8_amount                            [13];
   varchar product9_code                              [7];
   varchar product9_quantity                          [3];
   varchar product9_amount                            [13];
   varchar product10_code                              [7];
   varchar product10_quantity                          [3];
   varchar product10_amount                            [13];
   varchar product11_code                              [7];
   varchar product11_quantity                          [3];
   varchar product11_amount                            [13];
   varchar product12_code                              [7];
   varchar product12_quantity                          [3];
   varchar product12_amount                            [13];
   varchar product13_code                              [7];
   varchar product13_quantity                          [3];
   varchar product13_amount                            [13];
   varchar product14_code                              [7];
   varchar product14_quantity                          [3];
   varchar product14_amount                            [13];
   varchar product15_code                              [7];
   varchar product15_quantity                          [3];
   varchar product15_amount                            [13];
   varchar product16_code                              [7];
   varchar product16_quantity                          [3];
   varchar product16_amount                            [13];
   varchar product17_code                              [7];
   varchar product17_quantity                          [3];
   varchar product17_amount                            [13];
   varchar product18_code                              [7];
   varchar product18_quantity                          [3];
   varchar product18_amount                            [13];
   varchar product19_code                              [7];
   varchar product19_quantity                          [3];
   varchar product19_amount                            [13];
   varchar product20_code                              [7];
   varchar product20_quantity                          [3];
   varchar product20_amount                            [13];
   varchar visa_merchant_id                            [16];
   varchar cash_bonus                                  [2];  
   varchar deferred_factor                             [8];  
   varchar deferred_term_length                        [4];  
   varchar currency_code                               [4];  
   varchar transmission_timestamp                      [11]; 
   varchar tran_fee_amount                             [9];  
   varchar cvc_data                                    [4];  
   varchar verify_mag_stripe                           [2];  
   varchar saf                                         [2];  
   varchar security_response_code                      [3];  
   varchar service_code                                [4];  
   varchar source_pin_format                           [3];  
   varchar dest_pin_format                             [3];  
   varchar voice_auth                                  [2];  
   varchar actual_amount                               [13]; 
   varchar reversal_amount                             [13]; 
   varchar voice_auth_text                             [241]; 
   varchar operator_id                                 [21];  
   varchar workstation                                 [21];  
   varchar orig_auth_number                            [7];   
   varchar ticket_nbr									[16];
   varchar system_date                                 [9];
   varchar def_gross_amt                               [13];
   varchar monthly_amort_amt                           [13];
}db_tlf01_stip;
/*********/
/* BCH11 */
/*********/
struct
{
   char  device_id                                 [9];
   char  batch_nbr                                 [7];
   char  retrieval_ref_num                         [13];

   char  merchant_id                               [16];
   char  processing_code                           [7];
   char  tran_amount                               [13];
   char  response_code                             [3];
   char  auth_number                               [7];
   char  tran_date                                 [9];
   char  tran_time                                 [7];
   char  transaction_id                            [21];
   char  message_type                              [5];
   char  card_nbr                                  [20];
   char  invoice_nbr                               [9];
   char  settle_file_prefix                        [7];
   char  product_code                              [9];
   char  odometer                                  [8];
   char  sys_trace_audit_num                       [7];
   char  tx_key                                    ;
   char  bin_type                                  ;
   char type_of_data                               [3];
   char down_payment                               [13];
   char period                                     [3];
   char interest_rate                              [5];
   char total_interest                             [13];
   char redemption_amount                          [13];
   char vehicle_number                             [9];
   char pos_entry_mode                             [5];
   char profile                                    [3];
   char nbr_of_prod_codes                          [3];
   
   char product1_code                              [7];
   char product1_quantity                          [3];
   char product1_amount                            [13];
   char product2_code                              [7];
   char product2_quantity                          [3];
   char product2_amount                            [13];
   char product3_code                              [7];
   char product3_quantity                          [3];
   char product3_amount                            [13];
   char product4_code                              [7];
   char product4_quantity                          [3];
   char product4_amount                            [13];
   char product5_code                              [7];
   char product5_quantity                          [3];
   char product5_amount                            [13];
   char product6_code                              [7];
   char product6_quantity                          [3];
   char product6_amount                            [13];
   char product7_code                              [7];
   char product7_quantity                          [3];
   char product7_amount                            [13];
   char product8_code                              [7];
   char product8_quantity                          [3];
   char product8_amount                            [13];
   char product9_code                              [7];
   char product9_quantity                          [3];
   char product9_amount                            [13];
   char product10_code                              [7];
   char product10_quantity                          [3];
   char product10_amount                            [13];
   char product11_code                              [7];
   char product11_quantity                          [3];
   char product11_amount                            [13];
   char product12_code                              [7];
   char product12_quantity                          [3];
   char product12_amount                            [13];
   char product13_code                              [7];
   char product13_quantity                          [3];
   char product13_amount                            [13];
   char product14_code                              [7];
   char product14_quantity                          [3];
   char product14_amount                            [13];
   char product15_code                              [7];
   char product15_quantity                          [3];
   char product15_amount                            [13];
   char product16_code                              [7];
   char product16_quantity                          [3];
   char product16_amount                            [13];
   char product17_code                              [7];
   char product17_quantity                          [3];
   char product17_amount                            [13];
   char product18_code                              [7];
   char product18_quantity                          [3];
   char product18_amount                            [13];
   char product19_code                              [7];
   char product19_quantity                          [3];
   char product19_amount                            [13];
   char product20_code                              [7];
   char product20_quantity                          [3];
   char product20_amount                            [13];
   char aportionment_flag                           [2];
   char exp_date                                    [5];
   char open_date                                   [9];
   char open_time                                   [7];
   char cash_bonus                                  [2];
   char transmission_timestamp                      [11];
   char mcard_banknet                               [51];
   char ticket_nbr                                  [16];
   char def_gross_amt                               [13];
   char term                                        [4];

}pte_bch11;

struct
{
   varchar  device_id                                 [9];
   varchar  batch_nbr                                 [7];
   varchar  retrieval_ref_num                         [13];

   varchar  merchant_id                               [16];
   varchar  processing_code                           [7];
   varchar  tran_amount                               [13];
   varchar  response_code                             [3];
   varchar  auth_number                               [7];
   varchar  tran_date                                 [9];
   varchar  tran_time                                 [7];
   varchar  transaction_id                            [21];
   varchar  message_type                              [5];
   varchar  card_nbr                                  [20];
   varchar  invoice_nbr                               [9];
   varchar  settle_file_prefix                        [7];
   varchar  product_code                              [9];
   varchar  odometer                                  [8];
   varchar  sys_trace_audit_num                       [7];
   varchar  tx_key                                    [1];
   varchar  bin_type                                  [1];
   varchar type_of_data                               [3];
   varchar down_payment                               [13];
   varchar period                                     [3];
   varchar interest_rate                              [5];
   varchar total_interest                             [13];
   varchar redemption_amount                          [13];
   varchar vehicle_number                             [9];
   varchar pos_entry_mode                             [5];
   varchar profile                                    [3];
   varchar nbr_of_prod_codes                          [3];
   
   varchar product1_code                              [7];
   varchar product1_quantity                          [3];
   varchar product1_amount                            [13];
   varchar product2_code                              [7];
   varchar product2_quantity                          [3];
   varchar product2_amount                            [13];
   varchar product3_code                              [7];
   varchar product3_quantity                          [3];
   varchar product3_amount                            [13];
   varchar product4_code                              [7];
   varchar product4_quantity                          [3];
   varchar product4_amount                            [13];
   varchar product5_code                              [7];
   varchar product5_quantity                          [3];
   varchar product5_amount                            [13];
   varchar product6_code                              [7];
   varchar product6_quantity                          [3];
   varchar product6_amount                            [13];
   varchar product7_code                              [7];
   varchar product7_quantity                          [3];
   varchar product7_amount                            [13];
   varchar product8_code                              [7];
   varchar product8_quantity                          [3];
   varchar product8_amount                            [13];
   varchar product9_code                              [7];
   varchar product9_quantity                          [3];
   varchar product9_amount                            [13];
   varchar product10_code                              [7];
   varchar product10_quantity                          [3];
   varchar product10_amount                            [13];
   varchar product11_code                              [7];
   varchar product11_quantity                          [3];
   varchar product11_amount                            [13];
   varchar product12_code                              [7];
   varchar product12_quantity                          [3];
   varchar product12_amount                            [13];
   varchar product13_code                              [7];
   varchar product13_quantity                          [3];
   varchar product13_amount                            [13];
   varchar product14_code                              [7];
   varchar product14_quantity                          [3];
   varchar product14_amount                            [13];
   varchar product15_code                              [7];
   varchar product15_quantity                          [3];
   varchar product15_amount                            [13];
   varchar product16_code                              [7];
   varchar product16_quantity                          [3];
   varchar product16_amount                            [13];
   varchar product17_code                              [7];
   varchar product17_quantity                          [3];
   varchar product17_amount                            [13];
   varchar product18_code                              [7];
   varchar product18_quantity                          [3];
   varchar product18_amount                            [13];
   varchar product19_code                              [7];
   varchar product19_quantity                          [3];
   varchar product19_amount                            [13];
   varchar product20_code                              [7];
   varchar product20_quantity                          [3];
   varchar product20_amount                            [13];

   varchar aportionment_flag                           [2];
   varchar exp_date                                    [5];
   varchar open_date                                   [9];
   varchar open_time                                   [7];
   varchar cash_bonus                                  [2];
   varchar transmission_timestamp                      [11];
   varchar mcard_banknet                               [51];
   varchar ticket_nbr								   [16];
   varchar def_gross_amt                               [13];
   varchar term                                        [4];
}db_bch11;

/*********/
/* UCF01 */
/*********/
  /* user control file 01 */

   struct
   {
      char  name                                    [51];
      char  password                                [51];
      char  date_added                              [9];
      char  group_id                                [16];
      char  subsystem_name_1                        [31];
      char  action_1                                [6];
      char  subsystem_name_2                        [31];
      char  action_2                                [6];
      char  subsystem_name_3                        [31];
      char  action_3                                [6];
      char  subsystem_name_4                        [31];
      char  action_4                                [6];
      char  subsystem_name_5                        [31];
      char  action_5                                [6];
      char  subsystem_name_6                        [31];
      char  action_6                                [6];
      char  subsystem_name_7                        [31];
      char  action_7                                [6];
      char  subsystem_name_8                        [31];
      char  action_8                                [6];
      char  subsystem_name_9                        [31];
      char  action_9                                [6];
      char  subsystem_name_10                       [31];
      char  action_10                               [6];
      char  subsystem_name_11                       [31];
      char  action_11                               [6];
      char  subsystem_name_12                       [31];
      char  action_12                               [6];
      char  subsystem_name_13                       [31];
      char  action_13                               [6];
      char  subsystem_name_14                       [31];
      char  action_14                               [6];
      char  subsystem_name_15                       [31];
      char  action_15                               [6];
      char  subsystem_name_16                       [31];
      char  action_16                               [6];
      char  subsystem_name_17                       [31];
      char  action_17                               [6];
      char  subsystem_name_18                       [31];
      char  action_18                               [6];
      char  subsystem_name_19                       [31];
      char  action_19                               [6];
      char  subsystem_name_20                       [31];
      char  action_20                               [6];
      char  terminals_1                             [21];
      char  terminals_2                             [21];
      char  terminals_3                             [21];
      char  terminals_4                             [21];
      char  terminals_5                             [21];
      char  terminals_6                             [21];
      char  terminals_7                             [21];
      char  terminals_8                             [21];
      char  terminals_9                             [21];
      char  terminals_10                            [21];
      char password_1				   [51];
      char password_2				   [51];    
      char password_3				   [51];
      char password_4				   [51];
      char accountstatus				   [11];  
      char password_modified_date 			   [9];
      char user_info_1				   [11];         
      char user_info_2				   [11];         
      char user_info_3				   [11];        
      char user_info_4				   [11];    
      char user_info_5				   [11];    
      char user_info_6				   [11];    
      char user_info_7				   [11];    
      char ekey					   [51];		 
      char dekey					   [51];
      char  buffer                                  [501];
   } pte_ucf01; 

   struct
   {
      varchar  name                                    [51];
      varchar  password                                [51];
      varchar  date_added                              [9];
      varchar  group_id                                [16];
      varchar  subsystem_name_1                        [31];
      varchar  action_1                                [6];
      varchar  subsystem_name_2                        [31];
      varchar  action_2                                [6];
      varchar  subsystem_name_3                        [31];
      varchar  action_3                                [6];
      varchar  subsystem_name_4                        [31];
      varchar  action_4                                [6];
      varchar  subsystem_name_5                        [31];
      varchar  action_5                                [6];
      varchar  subsystem_name_6                        [31];
      varchar  action_6                                [6];
      varchar  subsystem_name_7                        [31];
      varchar  action_7                                [6];
      varchar  subsystem_name_8                        [31];
      varchar  action_8                                [6];
      varchar  subsystem_name_9                        [31];
      varchar  action_9                                [6];
      varchar  subsystem_name_10                       [31];
      varchar  action_10                               [6];
      varchar  subsystem_name_11                       [31];
      varchar  action_11                               [6];
      varchar  subsystem_name_12                       [31];
      varchar  action_12                               [6];
      varchar  subsystem_name_13                       [31];
      varchar  action_13                               [6];
      varchar  subsystem_name_14                       [31];
      varchar  action_14                               [6];
      varchar  subsystem_name_15                       [31];
      varchar  action_15                               [6];
      varchar  terminals_1                             [21];
      varchar  terminals_2                             [21];
      varchar  terminals_3                             [21];
      varchar  terminals_4                             [21];
      varchar  terminals_5                             [21];
      varchar  terminals_6                             [21];
      varchar  terminals_7                             [21];
      varchar  terminals_8                             [21];
      varchar  terminals_9                             [21];
      varchar  terminals_10                            [21];
      /* New fields of UCF01 in ATPGen2*/
      varchar password_1				      [51];
      varchar password_2				      [51];    
      varchar password_3				      [51];
      varchar password_4				      [51];
      varchar accountstatus				      [11];  
      varchar password_modified_date		      [9];
      varchar user_info_1				      [11];         
      varchar user_info_2				      [11];         
      varchar user_info_3				      [11];        
      varchar user_info_4				      [11];    
      varchar user_info_5				      [11];    
      varchar user_info_6				      [11];    
      varchar user_info_7				      [11];    
      varchar ekey					      [51];		 
      varchar dekey					      [51];
      varchar  subsystem_name_16                       [31];
      varchar  action_16                               [6];
      varchar  subsystem_name_17                       [31];
      varchar  action_17                               [6];
      varchar  subsystem_name_18                       [31];
      varchar  action_18                               [6];
      varchar  subsystem_name_19                       [31];
      varchar  action_19                               [6];
      varchar  subsystem_name_20                       [31];
      varchar  action_20                               [6];
      varchar  buffer                                  [501];
   } db_ucf01;
/*********/
/* UCF02 */
/*********/

   /* user control file 02 */

   struct
   {
      char  group_id                                [16];
      char  date_added                              [9];
      char  subsystem_name_1                        [31];
      char  action_1                                [6];
      char  subsystem_name_2                        [31];
      char  action_2                                [6];
      char  subsystem_name_3                        [31];
      char  action_3                                [6];
      char  subsystem_name_4                        [31];
      char  action_4                                [6];
      char  subsystem_name_5                        [31];
      char  action_5                                [6];
      char  subsystem_name_6                        [31];
      char  action_6                                [6];
      char  subsystem_name_7                        [31];
      char  action_7                                [6];
      char  subsystem_name_8                        [31];
      char  action_8                                [6];
      char  subsystem_name_9                        [31];
      char  action_9                                [6];
      char  subsystem_name_10                       [31];
      char  action_10                               [6];
      char  subsystem_name_11                       [31];
      char  action_11                               [6];
      char  subsystem_name_12                       [31];
      char  action_12                               [6];
      char  subsystem_name_13                       [31];
      char  action_13                               [6];
      char  subsystem_name_14                       [31];
      char  action_14                               [6];
      char  subsystem_name_15                       [31];
      char  action_15                               [6];
      char  subsystem_name_16                        [31];
      char  action_16                                [6];
      char  subsystem_name_17                        [31];
      char  action_17                                [6];
      char  subsystem_name_18                        [31];
      char  action_18                                [6];
      char  subsystem_name_19                        [31];
      char  action_19                                [6];
      char  subsystem_name_20                       [31];
      char  action_20                               [6];
      char  terminals_1                             [21];
      char  terminals_2                             [21];
      char  terminals_3                             [21];
      char  terminals_4                             [21];
      char  terminals_5                             [21];
      char  terminals_6                             [21];
      char  terminals_7                             [21];
      char  terminals_8                             [21];
      char  terminals_9                             [21];
      char  terminals_10                            [21];
      char  buffer                                  [501];
   }pte_ucf02;

   struct
   {
      varchar  group_id                                [16];
      varchar  date_added                              [9];
      varchar  subsystem_name_1                        [31];
      varchar  action_1                                [6];
      varchar  subsystem_name_2                        [31];
      varchar  action_2                                [6];
      varchar  subsystem_name_3                        [31];
      varchar  action_3                                [6];
      varchar  subsystem_name_4                        [31];
      varchar  action_4                                [6];
      varchar  subsystem_name_5                        [31];
      varchar  action_5                                [6];
      varchar  subsystem_name_6                        [31];
      varchar  action_6                                [6];
      varchar  subsystem_name_7                        [31];
      varchar  action_7                                [6];
      varchar  subsystem_name_8                        [31];
      varchar  action_8                                [6];
      varchar  subsystem_name_9                        [31];
      varchar  action_9                                [6];
      varchar  subsystem_name_10                       [31];
      varchar  action_10                               [6];
      varchar  subsystem_name_11                       [31];
      varchar  action_11                               [6];
      varchar  subsystem_name_12                       [31];
      varchar  action_12                               [6];
      varchar  subsystem_name_13                       [31];
      varchar  action_13                               [6];
      varchar  subsystem_name_14                       [31];
      varchar  action_14                               [6];
      varchar  subsystem_name_15                       [31];
      varchar  action_15                               [6];
      varchar  terminals_1                             [21];
      varchar  terminals_2                             [21];
      varchar  terminals_3                             [21];
      varchar  terminals_4                             [21];
      varchar  terminals_5                             [21];
      varchar  terminals_6                             [21];
      varchar  terminals_7                             [21];
      varchar  terminals_8                             [21];
      varchar  terminals_9                             [21];
      varchar  terminals_10                            [21];
      varchar  subsystem_name_16                       [31];
      varchar  action_16                               [6];
      varchar  subsystem_name_17                       [31];
      varchar  action_17                               [6];
      varchar  subsystem_name_18                       [31];
      varchar  action_18                               [6];
      varchar  subsystem_name_19                       [31];
      varchar  action_19                               [6];
      varchar  subsystem_name_20                       [31];
      varchar  action_20                               [6];
      varchar  buffer                                  [501];
   } db_ucf02;
/*********/
/* ATP01 */
/*********/
/* atp configuration file */
struct
{
   char  site_name                                 [31];
   char  tlf_log_date                              [9];
   char  subsystem_name_1                          [31];
   char  subsystem_name_2                          [31];
   char  subsystem_name_3                          [31];
   char  subsystem_name_4                          [31];
   char  subsystem_name_5                          [31];
   char  subsystem_name_6                          [31];
   char  subsystem_name_7                          [31];
   char  subsystem_name_8                          [31];
   char  subsystem_name_9                          [31];
   char  subsystem_name_10                         [31];
   char  subsystem_name_11                         [31];
   char  subsystem_name_12                         [31];
   char  subsystem_name_13                         [31];
   char  subsystem_name_14                         [31];
   char  subsystem_name_15                         [31];
/*New fields for additional sub systems*/
   char  subsystem_name_16                         [31];
   char  subsystem_name_17                         [31];
   char  subsystem_name_18                         [31];
   char  subsystem_name_19                         [31];
   char  subsystem_name_20                         [31];
}pte_atp01;

struct
{
   varchar  site_name                                 [31];
   varchar  tlf_log_date                              [9];
   varchar  subsystem_name_1                          [31];
   varchar  subsystem_name_2                          [31];
   varchar  subsystem_name_3                          [31];
   varchar  subsystem_name_4                          [31];
   varchar  subsystem_name_5                          [31];
   varchar  subsystem_name_6                          [31];
   varchar  subsystem_name_7                          [31];
   varchar  subsystem_name_8                          [31];
   varchar  subsystem_name_9                          [31];
   varchar  subsystem_name_10                         [31];
   varchar  subsystem_name_11                         [31];
   varchar  subsystem_name_12                         [31];
   varchar  subsystem_name_13                         [31];
   varchar  subsystem_name_14                         [31];
   varchar  subsystem_name_15                         [31];
   varchar  subsystem_name_16                         [31];
   varchar  subsystem_name_17                         [31];
   varchar  subsystem_name_18                         [31];
   varchar  subsystem_name_19                         [31];
   varchar  subsystem_name_20                         [31];
}db_atp01;

/*********/
/* ATP02 */
/*********/
   struct
   {
      char  workstation_id                            [21];
      char  workstation_status                        [3];
   }pte_atp02;

   struct
   {
      varchar  workstation_id                            [21];
      varchar  workstation_status                        [3];
   }db_atp02;
/*********/
/* PAF01 */
/*********/
   struct
   {
      char  primary_acct_nbr                          [20];
      char  name_dba                                  [31];
      char  address1                                  [31];
      char  address2                                  [31];
      char  city                                      [21];
      char  state                                     [4];
      char  zip_code                                  [11];
      char  home_phone                                [18];
      char  work_phone                                [18];
      char  status                                    [3];
      char  caf_profile_id                            [5];
      char  type                                      [2];
      char  corp_acct_nbr                             [11];
      char  block_status                              [5]; 
      char  account_name                              [31];
      char  past_due_amount                           [13]; 
      char  min_pay_code                              [2];
	  char	Credit_limit							  [11];  /* Added for FALCON*/
	  char	Custr_nbr								  [13];
	  char	APP_Source								  [11];  
	  char	COMP_Name								  [31];
   }pte_paf01;

   struct
   {
      varchar  primary_acct_nbr                          [20];
      varchar  name_dba                                  [31];
      varchar  address1                                  [31];
      varchar  address2                                  [31];
      varchar  city                                      [21];
      varchar  state                                     [4];
      varchar  zip_code                                  [11];
      varchar  home_phone                                [18];
      varchar  work_phone                                [18];
      varchar  status                                    [3];
      varchar  caf_profile_id                            [5];
      varchar  type                                      [2];
      varchar  corp_acct_nbr                             [11];
      varchar  block_status                              [5]; 
      varchar  account_name                              [31];
      varchar  past_due_amount                           [13]; 
      varchar  min_pay_code                              [2];  
	  varchar	Credit_limit							  [11];  /* Added for FALCON*/
	  varchar	Custr_nbr								  [13];
	  varchar	APP_Source								  [11];  
	  varchar	COMP_Name								  [31];
   }db_paf01;

 /*********/
/* OMC01 */
/*********/
struct
{
	char	merchant_id				[16];
	char	card_nbr				[20];
	char	max_repeat				[11];
	char	repeated				[11];
	char	expiry_date				[9];
	char	peso_amt_limit			[13];
	char	usd_amt_limit			[13];

}pte_omc01;

struct
{
	varchar	merchant_id				[16];
	varchar	card_nbr				[20];
	varchar	max_repeat				[11];
	varchar	repeated				[11];
	varchar	expiry_date				[9];
	varchar	peso_amt_limit			[13];
	varchar	usd_amt_limit			[13];

}db_omc01;

 /*********/
/* NCF01 */
/*********/
 struct
 {
   char network_id                                 [11];
   char network_type                               [2];

   char  name                                      [30];
   char  status                                    [2];
   char  totals_ind                                [2];
   char  statistics_ind                            [2];
   char  acquirer_inst_id_code                     [12];
   char  forwarding_inst_id_code                   [12];
   char  receiving_inst_id_code                    [12];
   char  remote_nsp_type                           [2];
   char  pin_type                                  [2];
   char  encr_type                                 [2];
   char  pad_char                                  [2];
   char  cwk                                       [49];
   char  kek                                       [17];
   char  retired_cwk                               [49];
   char  auto_logon                                [2];
   char  echo_interval                             [4];
   char  max_consecutive_timeouts                  [4];
   char  max_active_txns                           [4];
   char  que_name                                  [12];
   char  local_nsp_type                            [8];
   char  request_timer                             [4];
   char  idle_line_timer                           [4];
   char  advice_repeat_counter                     [3];
   char  admin_message_timer                       [4];
   char  store_forward_processing                  [2];
   char  currency_code_purchase                    [4];
   char  currency_code_cash                        [4];
   char  country_code                              [4];
   char  station_id1                               [7];
   char  station_id2                               [7];
   char  prev_src_station                          [7];
   char  tpdu_id                                   [16];
   
   char  identifier1                               [7];
   char  identifier2                               [7];
   char  identifier3                               [7];
   char  identifier4                               [7];
   char  identifier5                               [7];
   char  identifier6                               [7];
   char  identifier7                               [7];
   char  identifier8                               [7];
   char  identifier9                               [7];
   char  identifier10                              [7];
   
   char  processing_code1                          [7];
   char  processing_code2                          [7];
   char  processing_code3                          [7];
   char  processing_code4                          [7];
   char  processing_code5                          [7];
   char  processing_code6                          [7];
   char  processing_code7                          [7];
   char  processing_code8                          [7];
   char  processing_code9                          [7];
   char  processing_code10                         [7];
   char  processing_code11                         [7];
   char  processing_code12                         [7];
   char  processing_code13                         [7];
   char  processing_code14                         [7];
   char  processing_code15                         [7];
   char  processing_code16                         [7];
   char  processing_code17                         [7];
   char  processing_code18                         [7];
   char  processing_code19                         [7];
   char  processing_code20                         [7];
   char  zmk                                       [49];
   char  neg_access_code                           [7];
      
} pte_ncf01;

struct
 {
   varchar network_id                              [11];
   varchar network_type                            [2];

   varchar  name                                   [30];
   varchar  status                                 [2];
   varchar  totals_ind                             [2];
   varchar  statistics_ind                         [2];
   varchar  acquirer_inst_id_code                  [12];
   varchar  forwarding_inst_id_code                [12];
   varchar  receiving_inst_id_code                 [12];
   varchar  remote_nsp_type                        [2];
   varchar  pin_type                               [2];
   varchar  encr_type                              [2];
   varchar  pad_char                               [2];
   varchar  cwk                                    [49];
   varchar  kek                                    [17];
   varchar  retired_cwk                            [49];
   varchar  auto_logon                             [2];
   varchar  echo_interval                          [4];
   varchar  max_consecutive_timeouts               [4];
   varchar  max_active_txns                        [4];
   varchar  que_name                               [12];
   varchar  local_nsp_type                         [8];
   varchar  request_timer                          [4];
   varchar  idle_line_timer                        [4];
   varchar  advice_repeat_counter                  [3];
   varchar  admin_message_timer                    [4];
   varchar  store_forward_processing               [2];
   varchar  currency_code_purchase                 [4];
   varchar  currency_code_cash                     [4];
   varchar  country_code                           [4];
   varchar  station_id1                            [7];
   varchar  station_id2                            [7];
   varchar  prev_src_station                       [7];
   varchar  tpdu_id                                [16];
   
   varchar  identifier1                            [7];
   varchar  identifier2                            [7];
   varchar  identifier3                            [7];
   varchar  identifier4                            [7];
   varchar  identifier5                            [7];
   varchar  identifier6                            [7];
   varchar  identifier7                            [7];
   varchar  identifier8                            [7];
   varchar  identifier9                            [7];
   varchar  identifier10                           [7];
   
   varchar  processing_code1                       [7];
   varchar  processing_code2                       [7];
   varchar  processing_code3                       [7];
   varchar  processing_code4                       [7];
   varchar  processing_code5                       [7];
   varchar  processing_code6                       [7];
   varchar  processing_code7                       [7];
   varchar  processing_code8                       [7];
   varchar  processing_code9                       [7];
   varchar  processing_code10                      [7];
   varchar  processing_code11                      [7];
   varchar  processing_code12                      [7];
   varchar  processing_code13                      [7];
   varchar  processing_code14                      [7];
   varchar  processing_code15                      [7];
   varchar  processing_code16                      [7];
   varchar  processing_code17                      [7];
   varchar  processing_code18                      [7];
   varchar  processing_code19                      [7];
   varchar  processing_code20                      [7];
   varchar  zmk                                    [49];
   varchar  neg_access_code                        [7];

} db_ncf01;

EXEC SQL END DECLARE SECTION;
/*************************************************************************************/
/*************************************************************************************/
void tlf01_to_db( pTLF01 tlf01_ptr )
{
   memset( &pte_tlf01, 0x00, sizeof(pte_tlf01));
   memcpy( &pte_tlf01, tlf01_ptr, sizeof(pte_tlf01));
   memset( &pte_tlf01.track1,    0x00, sizeof(pte_tlf01.track1)   );
   memset( &pte_tlf01.track2,    0x00, sizeof(pte_tlf01.track2)   );
   memset( &pte_tlf01.cvc_data,  0x00, sizeof(pte_tlf01.cvc_data) );
   memset( &pte_tlf01.pin_block, 0x00, sizeof(pte_tlf01.pin_block));

   /* Unix implements unsigned chars greater than 127 by wrapping around zero.
    * That causes the tx_key in the database to not be accurate.  So for tx_keys
    * above 127, subtract 100.  This puts the request tx_key, not the response
    * tx_key, into the database.
    */
   if ( tlf01_ptr->tx_key > 127 )
      pte_tlf01.tx_key -= 100;
}
/*************************************************************************************/
void tlf01_stip_to_db( pTLF01 tlf01_ptr )
{
   memcpy( &pte_tlf01_stip, tlf01_ptr, sizeof(pte_tlf01_stip));
   memset( &pte_tlf01_stip.track1,    0x00, sizeof(pte_tlf01_stip.track1)   );
   memset( &pte_tlf01_stip.track2,    0x00, sizeof(pte_tlf01_stip.track2)   );
   memset( &pte_tlf01_stip.cvc_data,  0x00, sizeof(pte_tlf01_stip.cvc_data) );
   memset( &pte_tlf01_stip.pin_block, 0x00, sizeof(pte_tlf01_stip.pin_block));

   /* Unix implements unsigned chars greater than 127 by wrapping around zero.
    * That causes the tx_key in the database to not be accurate.  So for tx_keys
    * above 127, subtract 100.  This puts the request tx_key, not the response
    * tx_key, into the database.
    */
   if ( tlf01_ptr->tx_key > 127 )
      pte_tlf01_stip.tx_key -= 100;
}
/*************************************************************************************/
/*************************************************************************************/
void bch01_to_db( pBCH01 bch01_ptr )
{
  memcpy (&pte_bch01, bch01_ptr, sizeof(pte_bch01));
}

/*************************************************************************************/
/*************************************************************************************/
void bch10_to_db( pBCH10 bch10_ptr )
{
   memcpy (&pte_bch10, bch10_ptr, sizeof(pte_bch10));

   /* Unix implements unsigned chars greater than 127 by wrapping around zero.
    * That causes the tx_key in the database to not be accurate.  So for tx_keys
    * above 127, subtract 100.  This puts the request tx_key, not the response
    * tx_key, into the database.
    */
   if ( bch10_ptr->tx_key > 127 )
      pte_bch10.tx_key -= 100;
}
/*************************************************************************************/
/*************************************************************************************/
void bch11_to_db( pBCH11 bch11_ptr )
{
  memcpy (&pte_bch11, bch11_ptr, sizeof(pte_bch11));
}
/*************************************************************************************/
/*************************************************************************************/

void bch20_to_db( pBCH20 bch20_ptr )
{
   memcpy (&pte_bch20, bch20_ptr, sizeof(pte_bch20));

   /* Unix implements unsigned chars greater than 127 by wrapping around zero.
    * That causes the tx_key in the database to not be accurate.  So for tx_keys
    * above 127, subtract 100.  This puts the request tx_key, not the response
    * tx_key, into the database.
    */
   if ( bch20_ptr->tx_key > 127 )
      pte_bch20.tx_key -= 100;
}

/*************************************************************************************/
/*************************************************************************************/
void ccf02p_to_db( pCCF02P ccf02p_ptr )
{
  memcpy (&pte_ccf02p, ccf02p_ptr, sizeof(pte_ccf02p));
}

/*************************************************************************************/
/*************************************************************************************/
void ccf03p_to_db( pCCF03 ccf03p_ptr )
{
  memcpy (&pte_ccf03p, ccf03p_ptr, sizeof(pte_ccf03p));
}
/*************************************************************************************/
/*************************************************************************************/
void ucf01_to_db( pUCF01 ucf01_ptr )
{
  memcpy (&pte_ucf01, ucf01_ptr, sizeof(pte_ucf01));
}
/*************************************************************************************/
/*************************************************************************************/
void ucf02_to_db( pUCF02 ucf02_ptr )
{
  memcpy (&pte_ucf02, ucf02_ptr, sizeof(pte_ucf02));
}
/*************************************************************************************/
/*************************************************************************************/
void atp01_to_db( pATP01 atp01_ptr )
{
  memcpy (&pte_atp01, atp01_ptr, sizeof(pte_atp01));
}
/*************************************************************************************/
/*************************************************************************************/
void atp02_to_db( pATP02 atp02_ptr )
{
  memcpy (&pte_atp02, atp02_ptr, sizeof(pte_atp02));
}
/*************************************************************************************/
/*************************************************************************************/
void acf01_to_db( pACF01 acf01_ptr )
{
  memcpy (&pte_acf01, acf01_ptr, sizeof(pte_acf01));
}
/*************************************************************************************/
/*************************************************************************************/
void paf01_to_db( pPAF01 paf01_ptr )
{
  memcpy (&pte_paf01, paf01_ptr, sizeof(pte_paf01));
}
/*************************************************************************************/
/*************************************************************************************/
void omc01_to_db( pOMC01 omc01_ptr )
{
  memcpy (&pte_omc01, omc01_ptr, sizeof(pte_omc01));
}
/*************************************************************************************/
/*************************************************************************************/
void ncf01_to_db( pNCF01 ncf01_ptr )
{
  memcpy (&pte_ncf01, ncf01_ptr, sizeof(pte_ncf01));
}
/*************************************************************************************/
/*************************************************************************************/
/* convert oracle return codes to  pte result codes                                  */
/*************************************************************************************/
BYTE DBTest_oracle_to_pte_rcode ( LONG oracle_rcode, pCHAR ErrorMsg )
{
   switch (oracle_rcode)
   {
      case NO_DATA_FOUND:
         sprintf(ErrorMsg,"Errorcode:- %l -The Specified row was not found",oracle_rcode);
         return (PTEMSG_NOT_FOUND);

      case NOT_CONNECTED_TO_DB:
      case NOT_LOGGED_INTO_DB:
      case TNS_PACKET_WRITER_FAILED:
      case SHUTDOWN_OR_STARTUP_IN_PROGRESS:
         sprintf (ErrorMsg,"Errorcode:- %l -Not Connected to Database",oracle_rcode);
         return (PTEMSG_NOT_CONNECTED_TO_DB);
	   case VIEW_ERRORS: /* View errors, Enc /DEC due to fuction not exist*/
		 sprintf (ErrorMsg, "ErrCode- %l- Encryption key not set!! Pl generate ENC key using 'Dual Control' user Menu",oracle_rcode);
		 return (PTEMSG_DATABASE_ERROR);
      default:
         sprintf(ErrorMsg, "Errorcode:- %l- % .70s",oracle_rcode,sqlca.sqlerrm.sqlerrmc);
         return (PTEMSG_DATABASE_ERROR);
   }
}
/*************************************************************************************/
/*************************************************************************************/
BYTE db_insert_tlf01( pTLF01 tlf01_ptr, pCHAR ErrorMsg )
{
   EXEC SQL BEGIN DECLARE SECTION;
      char date[9];
      char yymmdd[25];
   EXEC SQL END DECLARE SECTION;
   
   tlf01_to_db( tlf01_ptr );
   if (strlen(pte_tlf01.date_yyyymmdd) < 8 )
   {
      PRINT("Entered datecheck loop\n");
      memset( date,   0x00, sizeof(date)   );
      memset( yymmdd, 0x00, sizeof(yymmdd) );
      format_date(yymmdd);
      strncpy(date, yymmdd, 4);
      strcat(date, pte_tlf01.date_yyyymmdd);
      strncpy(pte_tlf01.date_yyyymmdd, date, sizeof(date));
   }
   
   /* Log the query into shared memory. */
   memset( &Sql01, 0x00, sizeof(SQL01) );
   strcpy( Sql01.appname, app_name );
   strcpy( Sql01.sqltext, "INSERT INTO tlf01 ... " );

   rtnval = WriteSQL01_Table( &Sql01 );
   if ( rtnval < 0 )
   {
      sprintf( ErrorMsg,
              "Insert TLF01 - Err writing to SQL01 in memory: %d",
               rtnval );
      LogEvent( ErrorMsg, WARN_MSG );
   }


   EXEC SQL INSERT INTO tlf01
     (   transaction_id,
         entry_type,
         tpdu_id,
         issuer_id,
         acquirer_id,
         tx_key,
         terminal_id,
         terminal_type,
         response_text,
         card_num_len,
         card_num,
         exp_date,
         total_amount,
         add_amounts,
         invoice_number,
         orig_amount,
         auth_number,
         processing_code,
         sys_trace_audit_num,
         orig_sys_trace_num,
         pos_entry_mode,
         nii,
         pos_condition_code,
         track1,
         track2,
         retrieval_ref_num,
         orig_retrieval_ref_num,
         merchant_id,
         orig_message,
         settlement_total,
         message_type,
         card_holder_name,
         general_status,
         originator_queue,
         originator_info,
         batch_number,
         response_code,
         date_yyyymmdd,
         time_hhmmss,
         num_sales,
         sales_amount,
         num_refunds,
         refund_amount,
         num_dbsales,
         dbsales_amount,
         num_dbrefunds,
         dbrefund_amount,
         pin_block,
         tax_amount,
         tip_amount,
         tran_start_time,
         host_start_time,
         host_finish_time,
         tran_finish_time,
         settle_file_prefix,
         resp_source_len,
         visa_char_indicator,
         visa_tran_id,
         visa_validation_code,
         mcard_banknet_len,
         mcard_banknet,
         agent_id_len,
         agent_id,
         cvc,
         settlement_date,
         category_code,
         conversion_rate,
         product_code,
         odometer,
         organization_id,
         dynamic_keychange,
	      txn_cnt,
         source_key,                         
         dcf01_retired_cwk,                  
         dest_key,                          
         ncf01_retired_cwk,                                                 
	      handler_queue,        		          
	      authorizing_host_queue,		   	    
         max_net_consec_tmouts,              
         max_active_txns,                    
         remote_nsp_type,
         kek,  
         credit_limit,
         forwarding_institution_id,          
         acquiring_id,                                             
         outstanding_balance,
         nfi_name,                           
         nfi_seq_nbr,                     
         nfi_start_date,            
         nfi_end_date,          
         resp_source,
         origin,
         auth_1,
         auth_2,                      
         update_mask,
         type_of_data,   
         down_payment,         
         period,                 
         interest_rate,               
         total_interest,               
         redemption_amount,             
         vehicle_number,
         profile,nbr_of_prod_codes , product1_code ,product1_quantity,
        product1_amount, product2_code, product2_quantity, product2_amount, product3_code, product3_quantity,
        product3_amount, product4_code, product4_quantity, product4_amount, product5_code, product5_quantity,
        product5_amount, product6_code, product6_quantity, product6_amount, product7_code, product7_quantity,
        product7_amount, product8_code, product8_quantity, product8_amount, product9_code, product9_quantity,
        product9_amount, product10_code, product10_quantity, product10_amount, product11_code, product11_quantity,
        product11_amount, product12_code, product12_quantity, product12_amount, product13_code, product13_quantity,
        product13_amount, product14_code, product14_quantity, product14_amount, product15_code, product15_quantity,          
        product15_amount, product16_code, product16_quantity, product16_amount, product17_code, product17_quantity,
        product17_amount, product18_code, product18_quantity, product18_amount, product19_code, product19_quantity,
        product19_amount, product20_code, product20_quantity, product20_amount,visa_merchant_id, 
		cash_bonus, deferred_factor, deferred_term_length, currency_code,transmission_timestamp, tran_fee_amount, cvc_data,
		verify_mag_stripe, saf, security_response_code, service_code, source_pin_format, dest_pin_format, voice_auth,
		actual_amount, reversal_amount, voice_auth_text, operator_id, workstation, orig_auth_number,
        ticket_nbr, system_date, def_gross_amt, monthly_amort_amt
     )               
   VALUES(  :pte_tlf01.transaction_id,
         :pte_tlf01.entry_type,
         :pte_tlf01.tpdu_id,
         :pte_tlf01.issuer_id,
         :pte_tlf01.acquirer_id,
         :pte_tlf01.tx_key,
         :pte_tlf01.terminal_id,
         :pte_tlf01.terminal_type,
         :pte_tlf01.response_text,
         :pte_tlf01.card_num_len,
         :pte_tlf01.card_num,
         :pte_tlf01.exp_date,
         :pte_tlf01.total_amount,
         :pte_tlf01.add_amounts,
         :pte_tlf01.invoice_number,
         :pte_tlf01.orig_amount,
         :pte_tlf01.auth_number,
         :pte_tlf01.processing_code,
         :pte_tlf01.sys_trace_audit_num,
         :pte_tlf01.orig_sys_trace_num,
         :pte_tlf01.pos_entry_mode,
         :pte_tlf01.nii,
         :pte_tlf01.pos_condition_code,
         :pte_tlf01.track1,
         :pte_tlf01.track2,
         :pte_tlf01.retrieval_ref_num,
         :pte_tlf01.orig_retrieval_ref_num,
         :pte_tlf01.merchant_id,
         :pte_tlf01.orig_message,
         :pte_tlf01.settlement_total,
         :pte_tlf01.message_type,
         :pte_tlf01.card_holder_name,
         :pte_tlf01.general_status,
         :pte_tlf01.originator_queue,
         :pte_tlf01.originator_info,
         :pte_tlf01.batch_number,
         :pte_tlf01.response_code,
         :pte_tlf01.date_yyyymmdd,
         :pte_tlf01.time_hhmmss,
         :pte_tlf01.num_sales,
         :pte_tlf01.sales_amount,
         :pte_tlf01.num_refunds,
         :pte_tlf01.refund_amount,
         :pte_tlf01.num_dbsales,
         :pte_tlf01.dbsales_amount,
         :pte_tlf01.num_dbrefunds,
         :pte_tlf01.dbrefund_amount,
         :pte_tlf01.pin_block,
         :pte_tlf01.tax_amount,
         :pte_tlf01.tip_amount,
         :pte_tlf01.tran_start_time,
         :pte_tlf01.host_start_time,
         :pte_tlf01.host_finish_time,
         :pte_tlf01.tran_finish_time,
         :pte_tlf01.settle_file_prefix,
         :pte_tlf01.resp_source_len,
         :pte_tlf01.visa_char_indicator,
         :pte_tlf01.visa_tran_id,
         :pte_tlf01.visa_validation_code,
         :pte_tlf01.mcard_banknet_len,
         :pte_tlf01.mcard_banknet,
         :pte_tlf01.agent_id_len,
         :pte_tlf01.agent_id,
         :pte_tlf01.cvc,
         :pte_tlf01.settlement_date,
         :pte_tlf01.category_code,
         :pte_tlf01.conversion_rate,
         :pte_tlf01.product_code,
         :pte_tlf01.odometer,
         :pte_tlf01.organization_id,
         :pte_tlf01.dynamic_keychange,
         :pte_tlf01.txn_cnt,               
	      :pte_tlf01.source_key,                         
         :pte_tlf01.dcf01_retired_cwk,                  
         :pte_tlf01.dest_key,                          
         :pte_tlf01.ncf01_retired_cwk,                                                 
	      :pte_tlf01.handler_queue,        		          
	      :pte_tlf01.authorizing_host_queue,		   	    
         :pte_tlf01.max_net_consec_tmouts,              
         :pte_tlf01.max_active_txns,                    
         :pte_tlf01.remote_nsp_type,
         :pte_tlf01.kek,
         :pte_tlf01.credit_limit,
         :pte_tlf01.forwarding_institution_id,          
         :pte_tlf01.acquiring_id,                                             
         :pte_tlf01.outstanding_balance,
         :pte_tlf01.nfi_name,                           
         :pte_tlf01.nfi_seq_nbr,                     
         :pte_tlf01.nfi_start_date,            
         :pte_tlf01.nfi_end_date,           
         :pte_tlf01.resp_source,
         :pte_tlf01.origin,
         :pte_tlf01.auth_1,
         :pte_tlf01.auth_2,                      
         :pte_tlf01.update_mask,
         :pte_tlf01.type_of_data,   
         :pte_tlf01.down_payment,         
         :pte_tlf01.period,                 
         :pte_tlf01.interest_rate,               
         :pte_tlf01.total_interest,                                  
         :pte_tlf01.redemption_amount,             
         :pte_tlf01.vehicle_number,
         :pte_tlf01.profile, :pte_tlf01.nbr_of_prod_codes,          
         :pte_tlf01.product1_code, :pte_tlf01.product1_quantity, :pte_tlf01.product1_amount, :pte_tlf01.product2_code,             
         :pte_tlf01.product2_quantity, :pte_tlf01.product2_amount, :pte_tlf01.product3_code, :pte_tlf01.product3_quantity,            
         :pte_tlf01.product3_amount, :pte_tlf01.product4_code, :pte_tlf01.product4_quantity, :pte_tlf01.product4_amount,                  
         :pte_tlf01.product5_code, :pte_tlf01.product5_quantity, :pte_tlf01.product5_amount, :pte_tlf01.product6_code,             
         :pte_tlf01.product6_quantity, :pte_tlf01.product6_amount, :pte_tlf01.product7_code, :pte_tlf01.product7_quantity,          
         :pte_tlf01.product7_amount, :pte_tlf01.product8_code, :pte_tlf01.product8_quantity, :pte_tlf01.product8_amount,
         :pte_tlf01.product9_code, :pte_tlf01.product9_quantity, :pte_tlf01.product9_amount, :pte_tlf01.product10_code,
         :pte_tlf01.product10_quantity, :pte_tlf01.product10_amount, :pte_tlf01.product11_code, :pte_tlf01.product11_quantity, 
         :pte_tlf01.product11_amount, :pte_tlf01.product12_code, :pte_tlf01.product12_quantity, :pte_tlf01.product12_amount,
         :pte_tlf01.product13_code, :pte_tlf01. product13_quantity, :pte_tlf01.product13_amount,:pte_tlf01.product14_code, 
         :pte_tlf01.product14_quantity, :pte_tlf01.product14_amount, :pte_tlf01.product15_code, :pte_tlf01.product15_quantity,
         :pte_tlf01.product15_amount, :pte_tlf01.product16_code, :pte_tlf01.product16_quantity, :pte_tlf01.product16_amount,    
         :pte_tlf01.product17_code, :pte_tlf01.product17_quantity, :pte_tlf01.product17_amount, :pte_tlf01.product18_code,
         :pte_tlf01.product18_quantity, :pte_tlf01.product18_amount, :pte_tlf01.product19_code, :pte_tlf01.product19_quantity,
         :pte_tlf01.product19_amount, :pte_tlf01.product20_code, :pte_tlf01.product20_quantity, :pte_tlf01.product20_amount,
         :pte_tlf01.visa_merchant_id,
		 :pte_tlf01.cash_bonus,
		 :pte_tlf01.deferred_factor,
		 :pte_tlf01.deferred_term_length,
		 :pte_tlf01.currency_code,
		 :pte_tlf01.transmission_timestamp,
		 :pte_tlf01.tran_fee_amount,
		 :pte_tlf01.cvc_data,
		 :pte_tlf01.verify_mag_stripe,
		 :pte_tlf01.saf,
		 :pte_tlf01.security_response_code,
		 :pte_tlf01.service_code,
		 :pte_tlf01.source_pin_format,
		 :pte_tlf01.dest_pin_format,
		 :pte_tlf01.voice_auth,
         :pte_tlf01.actual_amount,
		 :pte_tlf01.reversal_amount, 
		 :pte_tlf01.voice_auth_text,
		 :pte_tlf01.operator_id,
		 :pte_tlf01.workstation,
		 :pte_tlf01.orig_auth_number,
		 :pte_tlf01.ticket_nbr,
         :pte_tlf01.system_date,
       :pte_tlf01.def_gross_amt,
       :pte_tlf01.monthly_amort_amt
      );

   if ( SQLCODE != 0 )
      return( DBTest_oracle_to_pte_rcode( SQLCODE, ErrorMsg ) );

   return PTEMSG_OK;
}
BYTE db_update_tlf01( pTLF01 tlf01_ptr, pCHAR ErrorMsg )
{
   tlf01_to_db( tlf01_ptr );

   /* Log the query into shared memory. */
   sprintf( Sql01.sqltext,
           "SELECT * INTO :db_tlf01 FROM tlf01 "
           "WHERE transaction_id = %s For Update NOWAIT",
            pte_tlf01.transaction_id );

   rtnval = WriteSQL01_Table( &Sql01 );
   if ( rtnval < 0 )
   {
      sprintf( ErrorMsg,
              "Select TLF01 NOWAIT Update - Err writing to SQL01 in memory: %d",
               rtnval );
      LogEvent( ErrorMsg, WARN_MSG );
   }

   /* Make sure we can access the record before attempting to update it. */
   EXEC SQL
      SELECT *
      INTO  :db_tlf01
      FROM   TLF01
      WHERE  transaction_id = :pte_tlf01.transaction_id
      For Update NOWAIT;

   if (SQLCODE != 0 && SQLCODE != NULL_COLUMN_DATA && SQLCODE != NO_DATA_FOUND)
   {
      /* Record is inaccessible. Return with error. */
      return( DBTest_oracle_to_pte_rcode(SQLCODE, ErrorMsg) );
   }

   /* Log the query into shared memory. */
   sprintf( Sql01.sqltext,
           "UPDATE tlf01 SET ... "
           "WHERE transaction_id = %s",
            pte_tlf01.transaction_id );

   rtnval = WriteSQL01_Table( &Sql01 );
   if ( rtnval < 0 )
   {
      sprintf( ErrorMsg,
              "Update TLF01 - Err writing to SQL01 in memory: %d",
               rtnval );
      LogEvent( ErrorMsg, WARN_MSG );
   }

   EXEC SQL UPDATE tlf01
   SET   tpdu_id                   = :pte_tlf01.tpdu_id,
         acquirer_id               = :pte_tlf01.acquirer_id,
         card_holder_name          = :pte_tlf01.card_holder_name,
         host_start_time           = :pte_tlf01.host_start_time,
         host_finish_time          = :pte_tlf01.host_finish_time,
         visa_char_indicator       = :pte_tlf01.visa_char_indicator,
         visa_tran_id              = :pte_tlf01.visa_tran_id,
         visa_validation_code      = :pte_tlf01.visa_validation_code,
         mcard_banknet_len         = :pte_tlf01.mcard_banknet_len,
         mcard_banknet             = :pte_tlf01.mcard_banknet,
         ncf01_retired_cwk         = :pte_tlf01.ncf01_retired_cwk,
         authorizing_host_queue    = :pte_tlf01.authorizing_host_queue,
         auth_1                    = :pte_tlf01.auth_1,
         auth_2                    = :pte_tlf01.auth_2,
         response_code             = :pte_tlf01.response_code,
         response_text             = :pte_tlf01.response_text,
         nbr_of_prod_codes         = :pte_tlf01.nbr_of_prod_codes,          
         product1_code             = :pte_tlf01.product1_code,             
         product1_quantity         = :pte_tlf01.product1_quantity,            
         product1_amount           = :pte_tlf01.product1_amount,                  
         product2_code             = :pte_tlf01.product2_code,             
         product2_quantity         = :pte_tlf01.product2_quantity,             
         product2_amount           = :pte_tlf01.product2_amount, 
         product3_code             = :pte_tlf01.product3_code,             
         product3_quantity         = :pte_tlf01.product3_quantity,            
         product3_amount           = :pte_tlf01.product3_amount,    
         product4_code             = :pte_tlf01.product4_code,             
         product4_quantity         = :pte_tlf01.product4_quantity,            
         product4_amount           = :pte_tlf01.product4_amount,                  
         product5_code             = :pte_tlf01.product5_code,             
         product5_quantity         = :pte_tlf01.product5_quantity,             
         product5_amount           = :pte_tlf01.product5_amount,                        
         product6_code             = :pte_tlf01.product6_code,             
         product6_quantity         = :pte_tlf01.product6_quantity,             
         product6_amount           = :pte_tlf01.product6_amount,  
         product7_code             = :pte_tlf01.product7_code,             
         product7_quantity         = :pte_tlf01.product7_quantity,            
         product7_amount           = :pte_tlf01.product7_amount,                  
         product8_code             = :pte_tlf01.product8_code,             
         product8_quantity         = :pte_tlf01.product8_quantity,             
         product8_amount           = :pte_tlf01.product8_amount, 
         product9_code             = :pte_tlf01.product9_code,             
         product9_quantity         = :pte_tlf01.product9_quantity,            
         product9_amount           = :pte_tlf01.product9_amount,                  
         product10_code            = :pte_tlf01.product10_code,             
         product10_quantity        = :pte_tlf01.product10_quantity,             
         product10_amount          = :pte_tlf01.product10_amount,   
         product11_code            = :pte_tlf01.product11_code,             
         product11_quantity        = :pte_tlf01.product11_quantity,            
         product11_amount          = :pte_tlf01.product11_amount,                  
         product12_code            = :pte_tlf01.product12_code,             
         product12_quantity        = :pte_tlf01.product12_quantity,             
         product12_amount          = :pte_tlf01.product12_amount, 
         product13_code            = :pte_tlf01.product13_code,             
         product13_quantity        = :pte_tlf01.product13_quantity,            
         product13_amount          = :pte_tlf01.product13_amount,                  
         product14_code            = :pte_tlf01.product14_code,             
         product14_quantity        = :pte_tlf01.product14_quantity,             
         product14_amount          = :pte_tlf01.product14_amount, 
         product15_code            = :pte_tlf01.product15_code,             
         product15_quantity        = :pte_tlf01.product15_quantity,            
         product15_amount          = :pte_tlf01.product15_amount,                  
         product16_code            = :pte_tlf01.product16_code,             
         product16_quantity        = :pte_tlf01.product16_quantity,             
         product16_amount          = :pte_tlf01.product16_amount, 
         product17_code            = :pte_tlf01.product17_code,             
         product17_quantity        = :pte_tlf01.product17_quantity,            
         product17_amount          = :pte_tlf01.product17_amount,                  
         product18_code            = :pte_tlf01.product18_code,             
         product18_quantity        = :pte_tlf01.product18_quantity,             
         product18_amount          = :pte_tlf01.product18_amount, 
         product19_code            = :pte_tlf01.product19_code,             
         product19_quantity        = :pte_tlf01.product19_quantity,            
         product19_amount          = :pte_tlf01.product19_amount,                  
         product20_code            = :pte_tlf01.product20_code,             
         product20_quantity        = :pte_tlf01.product20_quantity,             
         product20_amount          = :pte_tlf01.product20_amount
   WHERE transaction_id = :pte_tlf01.transaction_id;

   if ( SQLCODE != 0 )
      return( DBTest_oracle_to_pte_rcode( SQLCODE, ErrorMsg ) );

   return PTEMSG_OK;
}

/*************************************************************************************/
BYTE db_insert_tlf01_stip( pTLF01 tlf01_ptr, pCHAR ErrorMsg )
{
   EXEC SQL BEGIN DECLARE SECTION;
      char date[9];
      char yymmdd[25];
   EXEC SQL END DECLARE SECTION;
   
   tlf01_stip_to_db( tlf01_ptr );
   if (strlen(pte_tlf01_stip.date_yyyymmdd) < 8 )
   {
      PRINT("Entered datecheck loop\n");
      memset( date,   0x00, sizeof(date)   );
      memset( yymmdd, 0x00, sizeof(yymmdd) );
      format_date(yymmdd);
      strncpy(date, yymmdd, 4);
      strcat(date, pte_tlf01_stip.date_yyyymmdd);
      strncpy(pte_tlf01_stip.date_yyyymmdd, date, sizeof(date));
   }
   
   /* Log the query into shared memory. */
   memset( &Sql01, 0x00, sizeof(SQL01) );
   strcpy( Sql01.appname, app_name );
   strcpy( Sql01.sqltext, "INSERT INTO tlf01_stip ... " );

   rtnval = WriteSQL01_Table( &Sql01 );
   if ( rtnval < 0 )
   {
      sprintf( ErrorMsg,
              "Insert TLF01_STIP - Err writing to SQL01 in memory: %d",
               rtnval );
      LogEvent( ErrorMsg, WARN_MSG );
   }

   EXEC SQL INSERT INTO tlf01_stip
     (   transaction_id,
         entry_type,
         tpdu_id,
         issuer_id,
         acquirer_id,
         tx_key,
         terminal_id,
         terminal_type,
         response_text,
         card_num_len,
         card_num,
         exp_date,
         total_amount,
         add_amounts,
         invoice_number,
         orig_amount,
         auth_number,
         processing_code,
         sys_trace_audit_num,
         orig_sys_trace_num,
         pos_entry_mode,
         nii,
         pos_condition_code,
         track1,
         track2,
         retrieval_ref_num,
         orig_retrieval_ref_num,
         merchant_id,
         orig_message,
         settlement_total,
         message_type,
         card_holder_name,
         general_status,
         originator_queue,
         originator_info,
         batch_number,
         response_code,
         date_yyyymmdd,
         time_hhmmss,
         num_sales,
         sales_amount,
         num_refunds,
         refund_amount,
         num_dbsales,
         dbsales_amount,
         num_dbrefunds,
         dbrefund_amount,
         pin_block,
         tax_amount,
         tip_amount,
         tran_start_time,
         host_start_time,
         host_finish_time,
         tran_finish_time,
         settle_file_prefix,
         resp_source_len,
         visa_char_indicator,
         visa_tran_id,
         visa_validation_code,
         mcard_banknet_len,
         mcard_banknet,
         agent_id_len,
         agent_id,
         cvc,
         settlement_date,
         category_code,
         conversion_rate,
         product_code,
         odometer,
         organization_id,
         dynamic_keychange,
	      txn_cnt,
         source_key,                         
         dcf01_retired_cwk,                  
         dest_key,                          
         ncf01_retired_cwk,                                                 
	      handler_queue,        		          
	      authorizing_host_queue,		   	    
         max_net_consec_tmouts,              
         max_active_txns,                    
         remote_nsp_type,
         kek,  
         credit_limit,
         forwarding_institution_id,          
         acquiring_id,                                             
         outstanding_balance,
         nfi_name,                           
         nfi_seq_nbr,                     
         nfi_start_date,            
         nfi_end_date,          
         resp_source,
         origin,
         auth_1,
         auth_2,                      
         update_mask,
         type_of_data,   
         down_payment,         
         period,                 
         interest_rate,               
         total_interest,               
         redemption_amount,             
         vehicle_number,
         profile,nbr_of_prod_codes , product1_code ,product1_quantity,
        product1_amount, product2_code, product2_quantity, product2_amount, product3_code, product3_quantity,
        product3_amount, product4_code, product4_quantity, product4_amount, product5_code, product5_quantity,
        product5_amount, product6_code, product6_quantity, product6_amount, product7_code, product7_quantity,
        product7_amount, product8_code, product8_quantity, product8_amount, product9_code, product9_quantity,
        product9_amount, product10_code, product10_quantity, product10_amount, product11_code, product11_quantity,
        product11_amount, product12_code, product12_quantity, product12_amount, product13_code, product13_quantity,
        product13_amount, product14_code, product14_quantity, product14_amount, product15_code, product15_quantity,          
        product15_amount, product16_code, product16_quantity, product16_amount, product17_code, product17_quantity,
        product17_amount, product18_code, product18_quantity, product18_amount, product19_code, product19_quantity,
        product19_amount, product20_code, product20_quantity, product20_amount,visa_merchant_id, 
		cash_bonus, deferred_factor, deferred_term_length, currency_code,transmission_timestamp, tran_fee_amount, cvc_data,
		verify_mag_stripe, saf, security_response_code, service_code, source_pin_format, dest_pin_format, voice_auth,
		actual_amount, reversal_amount, voice_auth_text, operator_id, workstation, orig_auth_number,
        ticket_nbr, system_date, def_gross_amt, monthly_amort_amt
     )               
   VALUES(  :pte_tlf01_stip.transaction_id,
         :pte_tlf01_stip.entry_type,
         :pte_tlf01_stip.tpdu_id,
         :pte_tlf01_stip.issuer_id,
         :pte_tlf01_stip.acquirer_id,
         :pte_tlf01_stip.tx_key,
         :pte_tlf01_stip.terminal_id,
         :pte_tlf01_stip.terminal_type,
         :pte_tlf01_stip.response_text,
         :pte_tlf01_stip.card_num_len,
         :pte_tlf01_stip.card_num,
         :pte_tlf01_stip.exp_date,
         :pte_tlf01_stip.total_amount,
         :pte_tlf01_stip.add_amounts,
         :pte_tlf01_stip.invoice_number,
         :pte_tlf01_stip.orig_amount,
         :pte_tlf01_stip.auth_number,
         :pte_tlf01_stip.processing_code,
         :pte_tlf01_stip.sys_trace_audit_num,
         :pte_tlf01_stip.orig_sys_trace_num,
         :pte_tlf01_stip.pos_entry_mode,
         :pte_tlf01_stip.nii,
         :pte_tlf01_stip.pos_condition_code,
         :pte_tlf01_stip.track1,
         :pte_tlf01_stip.track2,
         :pte_tlf01_stip.retrieval_ref_num,
         :pte_tlf01_stip.orig_retrieval_ref_num,
         :pte_tlf01_stip.merchant_id,
         :pte_tlf01_stip.orig_message,
         :pte_tlf01_stip.settlement_total,
         :pte_tlf01_stip.message_type,
         :pte_tlf01_stip.card_holder_name,
         :pte_tlf01_stip.general_status,
         :pte_tlf01_stip.originator_queue,
         :pte_tlf01_stip.originator_info,
         :pte_tlf01_stip.batch_number,
         :pte_tlf01_stip.response_code,
         :pte_tlf01_stip.date_yyyymmdd,
         :pte_tlf01_stip.time_hhmmss,
         :pte_tlf01_stip.num_sales,
         :pte_tlf01_stip.sales_amount,
         :pte_tlf01_stip.num_refunds,
         :pte_tlf01_stip.refund_amount,
         :pte_tlf01_stip.num_dbsales,
         :pte_tlf01_stip.dbsales_amount,
         :pte_tlf01_stip.num_dbrefunds,
         :pte_tlf01_stip.dbrefund_amount,
         :pte_tlf01_stip.pin_block,
         :pte_tlf01_stip.tax_amount,
         :pte_tlf01_stip.tip_amount,
         :pte_tlf01_stip.tran_start_time,
         :pte_tlf01_stip.host_start_time,
         :pte_tlf01_stip.host_finish_time,
         :pte_tlf01_stip.tran_finish_time,
         :pte_tlf01_stip.settle_file_prefix,
         :pte_tlf01_stip.resp_source_len,
         :pte_tlf01_stip.visa_char_indicator,
         :pte_tlf01_stip.visa_tran_id,
         :pte_tlf01_stip.visa_validation_code,
         :pte_tlf01_stip.mcard_banknet_len,
         :pte_tlf01_stip.mcard_banknet,
         :pte_tlf01_stip.agent_id_len,
         :pte_tlf01_stip.agent_id,
         :pte_tlf01_stip.cvc,
         :pte_tlf01_stip.settlement_date,
         :pte_tlf01_stip.category_code,
         :pte_tlf01_stip.conversion_rate,
         :pte_tlf01_stip.product_code,
         :pte_tlf01_stip.odometer,
         :pte_tlf01_stip.organization_id,
         :pte_tlf01_stip.dynamic_keychange,
         :pte_tlf01_stip.txn_cnt,               
	      :pte_tlf01_stip.source_key,                         
         :pte_tlf01_stip.dcf01_retired_cwk,                  
         :pte_tlf01_stip.dest_key,                          
         :pte_tlf01_stip.ncf01_retired_cwk,                                                 
	      :pte_tlf01_stip.handler_queue,        		          
	      :pte_tlf01_stip.authorizing_host_queue,		   	    
         :pte_tlf01_stip.max_net_consec_tmouts,              
         :pte_tlf01_stip.max_active_txns,                    
         :pte_tlf01_stip.remote_nsp_type,
         :pte_tlf01_stip.kek,
         :pte_tlf01_stip.credit_limit,
         :pte_tlf01_stip.forwarding_institution_id,          
         :pte_tlf01_stip.acquiring_id,                                             
         :pte_tlf01_stip.outstanding_balance,
         :pte_tlf01_stip.nfi_name,                           
         :pte_tlf01_stip.nfi_seq_nbr,                     
         :pte_tlf01_stip.nfi_start_date,            
         :pte_tlf01_stip.nfi_end_date,           
         :pte_tlf01_stip.resp_source,
         :pte_tlf01_stip.origin,
         :pte_tlf01_stip.auth_1,
         :pte_tlf01_stip.auth_2,                      
         :pte_tlf01_stip.update_mask,
         :pte_tlf01_stip.type_of_data,   
         :pte_tlf01_stip.down_payment,         
         :pte_tlf01_stip.period,                 
         :pte_tlf01_stip.interest_rate,               
         :pte_tlf01_stip.total_interest,                                  
         :pte_tlf01_stip.redemption_amount,             
         :pte_tlf01_stip.vehicle_number,
         :pte_tlf01_stip.profile, :pte_tlf01_stip.nbr_of_prod_codes,          
         :pte_tlf01_stip.product1_code, :pte_tlf01_stip.product1_quantity, :pte_tlf01_stip.product1_amount, :pte_tlf01_stip.product2_code,             
         :pte_tlf01_stip.product2_quantity, :pte_tlf01_stip.product2_amount, :pte_tlf01_stip.product3_code, :pte_tlf01_stip.product3_quantity,            
         :pte_tlf01_stip.product3_amount, :pte_tlf01_stip.product4_code, :pte_tlf01_stip.product4_quantity, :pte_tlf01_stip.product4_amount,                  
         :pte_tlf01_stip.product5_code, :pte_tlf01_stip.product5_quantity, :pte_tlf01_stip.product5_amount, :pte_tlf01_stip.product6_code,             
         :pte_tlf01_stip.product6_quantity, :pte_tlf01_stip.product6_amount, :pte_tlf01_stip.product7_code, :pte_tlf01_stip.product7_quantity,          
         :pte_tlf01_stip.product7_amount, :pte_tlf01_stip.product8_code, :pte_tlf01_stip.product8_quantity, :pte_tlf01_stip.product8_amount,
         :pte_tlf01_stip.product9_code, :pte_tlf01_stip.product9_quantity, :pte_tlf01_stip.product9_amount, :pte_tlf01_stip.product10_code,
         :pte_tlf01_stip.product10_quantity, :pte_tlf01_stip.product10_amount, :pte_tlf01_stip.product11_code, :pte_tlf01_stip.product11_quantity, 
         :pte_tlf01_stip.product11_amount, :pte_tlf01_stip.product12_code, :pte_tlf01_stip.product12_quantity, :pte_tlf01_stip.product12_amount,
         :pte_tlf01_stip.product13_code, :pte_tlf01_stip. product13_quantity, :pte_tlf01_stip.product13_amount,:pte_tlf01_stip.product14_code, 
         :pte_tlf01_stip.product14_quantity, :pte_tlf01_stip.product14_amount, :pte_tlf01_stip.product15_code, :pte_tlf01_stip.product15_quantity,
         :pte_tlf01_stip.product15_amount, :pte_tlf01_stip.product16_code, :pte_tlf01_stip.product16_quantity, :pte_tlf01_stip.product16_amount,    
         :pte_tlf01_stip.product17_code, :pte_tlf01_stip.product17_quantity, :pte_tlf01_stip.product17_amount, :pte_tlf01_stip.product18_code,
         :pte_tlf01_stip.product18_quantity, :pte_tlf01_stip.product18_amount, :pte_tlf01_stip.product19_code, :pte_tlf01_stip.product19_quantity,
         :pte_tlf01_stip.product19_amount, :pte_tlf01_stip.product20_code, :pte_tlf01_stip.product20_quantity, :pte_tlf01_stip.product20_amount,
         :pte_tlf01_stip.visa_merchant_id,
		 :pte_tlf01_stip.cash_bonus,
		 :pte_tlf01_stip.deferred_factor,
		 :pte_tlf01_stip.deferred_term_length,
		 :pte_tlf01_stip.currency_code,
		 :pte_tlf01_stip.transmission_timestamp,
		 :pte_tlf01_stip.tran_fee_amount,
		 :pte_tlf01_stip.cvc_data,
		 :pte_tlf01_stip.verify_mag_stripe,
		 :pte_tlf01_stip.saf,
		 :pte_tlf01_stip.security_response_code,
		 :pte_tlf01_stip.service_code,
		 :pte_tlf01_stip.source_pin_format,
		 :pte_tlf01_stip.dest_pin_format,
		 :pte_tlf01_stip.voice_auth,
         :pte_tlf01_stip.actual_amount,
		 :pte_tlf01_stip.reversal_amount, 
		 :pte_tlf01_stip.voice_auth_text,
		 :pte_tlf01_stip.operator_id,
		 :pte_tlf01_stip.workstation,
		 :pte_tlf01_stip.orig_auth_number,
		 :pte_tlf01_stip.ticket_nbr,
         :pte_tlf01_stip.system_date,
       :pte_tlf01_stip.def_gross_amt,
       :pte_tlf01_stip.monthly_amort_amt
      );

   if ( SQLCODE != 0 )
      return( DBTest_oracle_to_pte_rcode( SQLCODE, ErrorMsg ) );

   return PTEMSG_OK;
}
/******************************************************************************/
BYTE db_update_tlf01_stip( pTLF01 tlf01_ptr, pCHAR ErrorMsg )
{
   tlf01_to_db( tlf01_ptr );


   EXEC SQL UPDATE tlf01_stip
   SET    processing_code		   = :pte_tlf01.processing_code,
         response_code             = :pte_tlf01.response_code,
		 orig_amount			   = :pte_tlf01.orig_amount,
		 sys_trace_audit_num	   = :pte_tlf01.sys_trace_audit_num,
		 orig_sys_trace_num		   = :pte_tlf01.orig_sys_trace_num,
		 orig_retrieval_ref_num	   = :pte_tlf01.orig_retrieval_ref_num,
         nbr_of_prod_codes         = :pte_tlf01.nbr_of_prod_codes,          
         product1_code             = :pte_tlf01.product1_code,             
         product1_quantity         = :pte_tlf01.product1_quantity,            
         product1_amount           = :pte_tlf01.product1_amount,                  
         product2_code             = :pte_tlf01.product2_code,             
         product2_quantity         = :pte_tlf01.product2_quantity,             
         product2_amount           = :pte_tlf01.product2_amount 

   
/*   WHERE retrieval_ref_num = :pte_tlf01.retrieval_ref_num and card_num = :pte_tlf01.card_num ;*/
WHERE transaction_id = :pte_tlf01.transaction_id;

   if ( SQLCODE != 0 )
      return( DBTest_oracle_to_pte_rcode( SQLCODE, ErrorMsg ) );

   return PTEMSG_OK;
}/* End of db_update_tlf01_stip_void*/


/*************************************************************************************************/

BYTE db_insert_bch01( pBCH01 bch01_ptr, pCHAR ErrorMsg)
{
   bch01_to_db( bch01_ptr );

   /* Log the query into shared memory. */
   memset( &Sql01, 0x00, sizeof(SQL01) );
   strcpy( Sql01.appname, app_name );
   strcpy( Sql01.sqltext, "INSERT INTO bch01 ... " );

   rtnval = WriteSQL01_Table( &Sql01 );
   if ( rtnval < 0 )
   {
      sprintf( ErrorMsg,
              "Insert BCH01 - Err writing to SQL01 in memory: %d",
               rtnval );
      LogEvent( ErrorMsg, WARN_MSG );
   }

   EXEC SQL INSERT INTO bch01
      ( device_id, batch_nbr, merchant_id,total_credit_cnt,total_credit_amt, total_credit_refund_cnt, total_credit_refund_amt,
        total_debit_cnt, total_debit_amt, total_debit_refund_cnt, total_debit_refund_amt,
        total_void_credit_cnt,total_void_credit_amt, total_void_credit_refund_cnt,
        total_void_credit_refund_amt, open_date, open_time,
        release_date, release_time, batch_status,visa_merchant_id
      )
   VALUES(:pte_bch01.device_id, :pte_bch01.batch_nbr,
        :pte_bch01.merchant_id, :pte_bch01.total_credit_cnt, :pte_bch01.total_credit_amt,    
        :pte_bch01.total_credit_refund_cnt, :pte_bch01.total_credit_refund_amt, :pte_bch01.total_debit_cnt,
        :pte_bch01.total_debit_amt, :pte_bch01.total_debit_refund_cnt, :pte_bch01.total_debit_refund_amt,
        :pte_bch01.total_void_credit_cnt, :pte_bch01.total_void_credit_amt, 
        :pte_bch01.total_void_credit_refund_cnt, :pte_bch01.total_void_credit_refund_amt,
        :pte_bch01.open_date, :pte_bch01.open_time, :pte_bch01.release_date,:pte_bch01.release_time,
        :pte_bch01.batch_status, :pte_bch01.visa_merchant_id
      );

   if ( SQLCODE != 0 )
      return( DBTest_oracle_to_pte_rcode( SQLCODE, ErrorMsg ) );

   return PTEMSG_OK;
}
/*************************************************************************************/
/*************************************************************************************/

BYTE db_update_bch01( pBCH01 bch01_ptr, pCHAR ErrorMsg )
{
   bch01_to_db( bch01_ptr );

   /* Log the query into shared memory. */
   memset( &Sql01, 0x00, sizeof(SQL01) );
   strcpy( Sql01.appname, app_name );
   sprintf( Sql01.sqltext,
           "SELECT * INTO :db_bch01 FROM bch01 "
           "WHERE device_id = %s AND batch_nbr = %s "
           "AND open_time = %s "
           "AND open_date = %s For Update NOWAIT",
            pte_bch01.device_id, pte_bch01.batch_nbr,
            pte_bch01.open_time, pte_bch01.open_date );

   rtnval = WriteSQL01_Table( &Sql01 );
   if ( rtnval < 0 )
   {
      sprintf( ErrorMsg,
              "Select BCH01 NOWAIT - Err writing to SQL01 in memory: %d",
               rtnval );
      LogEvent( ErrorMsg, WARN_MSG );
   }

   /* Make sure we can access the record before attempting to update it. */
   EXEC SQL
      SELECT *
      INTO  :db_bch01
      FROM   BCH01
      WHERE  device_id = :pte_bch01.device_id
        AND  batch_nbr = :pte_bch01.batch_nbr
        AND  open_time = :pte_bch01.open_time
        AND  open_date = :pte_bch01.open_date
      For Update NOWAIT;

   if (SQLCODE != 0 && SQLCODE != NULL_COLUMN_DATA && SQLCODE != NO_DATA_FOUND)
   {
      /* Record is inaccessible. Return with error. */
      return( DBTest_oracle_to_pte_rcode(SQLCODE, ErrorMsg) );
   }

   /* Log the query into shared memory. */
   memset( &Sql01, 0x00, sizeof(SQL01) );
   strcpy( Sql01.appname, app_name );
   sprintf( Sql01.sqltext,
           "UPDATE bch01 SET ... "
           "WHERE device_id = %s AND batch_nbr = %s "
           "AND open_time = %s "
           "AND open_date = %s",
            pte_bch01.device_id, pte_bch01.batch_nbr,
            pte_bch01.open_time, pte_bch01.open_date );

   rtnval = WriteSQL01_Table( &Sql01 );
   if ( rtnval < 0 )
   {
      sprintf( ErrorMsg,
              "Update BCH01 - Err writing to SQL01 in memory: %d",
               rtnval );
      LogEvent( ErrorMsg, WARN_MSG );
   }

   EXEC SQL UPDATE bch01 
   SET device_id                 = :pte_bch01.device_id,                              
       batch_nbr                 = :pte_bch01.batch_nbr,                 
       merchant_id               = :pte_bch01.merchant_id,
       total_credit_cnt          = :pte_bch01.total_credit_cnt,           
       total_credit_amt          = :pte_bch01.total_credit_amt,           
       total_credit_refund_cnt   = :pte_bch01.total_credit_refund_cnt,           
       total_credit_refund_amt   = :pte_bch01.total_credit_refund_amt,           
       total_debit_cnt           = :pte_bch01.total_debit_cnt,           
       total_debit_amt           = :pte_bch01.total_debit_amt,           
       total_debit_refund_cnt    = :pte_bch01.total_debit_refund_cnt,           
       total_debit_refund_amt    = :pte_bch01.total_debit_refund_amt, 
       total_void_credit_cnt          = :pte_bch01.total_void_credit_cnt,           
       total_void_credit_amt          = :pte_bch01.total_void_credit_amt,           
       total_void_credit_refund_cnt   = :pte_bch01.total_void_credit_refund_cnt,           
       total_void_credit_refund_amt   = :pte_bch01.total_void_credit_refund_amt,      
                 
       open_date                 = :pte_bch01.open_date,
       open_time                 = :pte_bch01.open_time,
       release_date              = :pte_bch01.release_date,
       release_time              = :pte_bch01.release_time,
       batch_status              = :pte_bch01.batch_status,
       visa_merchant_id          = :pte_bch01.visa_merchant_id

   WHERE device_id  = :pte_bch01.device_id AND batch_nbr = :pte_bch01.batch_nbr
      AND open_time = :pte_bch01.open_time AND open_date = :pte_bch01.open_date;
       
   if ( SQLCODE != 0 )
      return( DBTest_oracle_to_pte_rcode( SQLCODE, ErrorMsg ) );

   return PTEMSG_OK;
}
/*************************************************************************************/
/*************************************************************************************/

BYTE db_insert_bch10( pBCH10 bch10_ptr, pCHAR ErrorMsg)
{
   bch10_to_db( bch10_ptr );

   /* Log the query into shared memory. */
   memset( &Sql01, 0x00, sizeof(SQL01) );
   strcpy( Sql01.appname, app_name );
   strcpy( Sql01.sqltext, "INSERT INTO bch10 ... " );

   rtnval = WriteSQL01_Table( &Sql01 );
   if ( rtnval < 0 )
   {
      sprintf( ErrorMsg,
              "Insert BCH10 - Err writing to SQL01 in memory: %d",
               rtnval );
      LogEvent( ErrorMsg, WARN_MSG );
   }

 EXEC SQL INSERT INTO bch10
(  
	device_id,
	batch_nbr, 
	retrieval_ref_num,
	open_date,
	open_time,
	merchant_id,  
	transaction_id,
	tran_date,
	tran_time,   
	tran_amount, 
	processing_code,
	auth_number,   
	message_type,
	card_nbr,    
	invoice_nbr,   
	settle_file_prefix,    
	product_code,           
	sys_trace_audit_num,
	tx_key, 
	bin_type,
	pos_entry_mode,
	profile,
	response_code,
   exp_date,
	cash_bonus,
	transmission_timestamp,
	mcard_banknet,
	ticket_nbr,
	odometer,
   def_gross_amt,
   term,
   product2_code, /* Added for STIP value*/
   product20_code,
   product7_amount,product15_amount                                        
)

VALUES

(
	:pte_bch10.device_id,
	:pte_bch10.batch_nbr, 
	:pte_bch10.retrieval_ref_num,
	:pte_bch10.open_date,
	:pte_bch10.open_time,
	:pte_bch10.merchant_id,  
	:pte_bch10.transaction_id,
	:pte_bch10.tran_date,
	:pte_bch10.tran_time,   
	:pte_bch10.tran_amount, 
	:pte_bch10.processing_code,
	:pte_bch10.auth_number,   
	:pte_bch10.message_type,
	:pte_bch10.card_nbr,    
	:pte_bch10.invoice_nbr,   
	:pte_bch10.settle_file_prefix,    
	:pte_bch10.product_code,           
	:pte_bch10.sys_trace_audit_num,
	:pte_bch10.tx_key, 
	:pte_bch10.bin_type,
	:pte_bch10.pos_entry_mode,
	:pte_bch10.profile,
	:pte_bch10.response_code,
	:pte_bch10.exp_date,
	:pte_bch10.cash_bonus,
	:pte_bch10.transmission_timestamp,
	:pte_bch10.mcard_banknet,
	:pte_bch10.ticket_nbr,
   :pte_bch10.odometer,
   :pte_bch10.def_gross_amt,
   :pte_bch10.term,
   :pte_bch10.product2_code,
   :pte_bch10.product20_code,
   :pte_bch10.product7_amount,
   :pte_bch10.product15_amount
);

   if ( SQLCODE != 0 )
      return( DBTest_oracle_to_pte_rcode( SQLCODE, ErrorMsg ) );

   return PTEMSG_OK;
}
/*************************************************************************************/
/*************************************************************************************/
BYTE db_update_bch10( pBCH10 bch10_ptr, pCHAR ErrorMsg )
{
   /* update open date and time is not necessary */
   bch10_to_db( bch10_ptr );

   /* Log the query into shared memory. */
   memset( &Sql01, 0x00, sizeof(SQL01) );
   strcpy( Sql01.appname, app_name );
   sprintf( Sql01.sqltext,
           "SELECT * INTO :db_bch10 FROM bch10 "
           "WHERE device_id = %s AND batch_nbr = %s "
           "AND retrieval_ref_num = %s For Update NOWAIT",
            pte_bch10.device_id, pte_bch10.batch_nbr,
            pte_bch10.retrieval_ref_num );

   rtnval = WriteSQL01_Table( &Sql01 );
   if ( rtnval < 0 )
   {
      sprintf( ErrorMsg,
              "Select BCH10 NOWAIT - Err writing to SQL01 in memory: %d",
               rtnval );
      LogEvent( ErrorMsg, WARN_MSG );
   }

   /* Make sure we can access the record before attempting to update it. */
   EXEC SQL
      SELECT *
      INTO  :db_bch10
      FROM   BCH10
      WHERE  device_id = :pte_bch10.device_id
        AND  batch_nbr = :pte_bch10.batch_nbr
        AND  retrieval_ref_num = :pte_bch10.retrieval_ref_num
      For Update NOWAIT;

   if (SQLCODE != 0 && SQLCODE != NULL_COLUMN_DATA && SQLCODE != NO_DATA_FOUND)
   {
      /* Record is inaccessible. Return with error. */
      return( DBTest_oracle_to_pte_rcode(SQLCODE, ErrorMsg) );
   }

   /* Log the query into shared memory. */
   memset( &Sql01, 0x00, sizeof(SQL01) );
   strcpy( Sql01.appname, app_name );
   sprintf( Sql01.sqltext,
           "UPDATE bch10 "
           "WHERE device_id = %s AND batch_nbr = %s "
           "AND retrieval_ref_num = %s",
            pte_bch10.device_id, pte_bch10.batch_nbr,
            pte_bch10.retrieval_ref_num );

   rtnval = WriteSQL01_Table( &Sql01 );
   if ( rtnval < 0 )
   {
      sprintf( ErrorMsg,
              "Update BCH10 - Err writing to SQL01 in memory: %d",
               rtnval );
      LogEvent( ErrorMsg, WARN_MSG );
   }

   EXEC SQL UPDATE bch10 
   SET 
    device_id				= :pte_bch10.device_id,
	batch_nbr				= :pte_bch10.batch_nbr, 
	retrieval_ref_num		= :pte_bch10.retrieval_ref_num,

	merchant_id				= :pte_bch10.merchant_id,  
	transaction_id			= :pte_bch10.transaction_id,
	tran_date				= :pte_bch10.tran_date,
	tran_time				= :pte_bch10.tran_time,   
	tran_amount				= :pte_bch10.tran_amount, 

	processing_code			= :pte_bch10.processing_code,
	auth_number				= :pte_bch10.auth_number,   
	message_type			= :pte_bch10.message_type,
	card_nbr				= :pte_bch10.card_nbr,    
  
	invoice_nbr				= :pte_bch10.invoice_nbr,   
	settle_file_prefix		= :pte_bch10.settle_file_prefix,    
	product_code			= :pte_bch10.product_code,           

	sys_trace_audit_num		= :pte_bch10.sys_trace_audit_num,
	tx_key					= :pte_bch10.tx_key, 
	bin_type				= :pte_bch10.bin_type,

	pos_entry_mode			= :pte_bch10.pos_entry_mode,
	profile					= :pte_bch10.profile,

	exp_date				= :pte_bch10.exp_date,
	product2_code			= :pte_bch10.product2_code,
	product7_amount         = :pte_bch10.product7_amount      /*girija GB*/
	    

	WHERE device_id = :pte_bch10.device_id AND batch_nbr = :pte_bch10.batch_nbr AND
         retrieval_ref_num = :pte_bch10.retrieval_ref_num;
      
   if ( SQLCODE != 0 )
      return( DBTest_oracle_to_pte_rcode( SQLCODE, ErrorMsg ) );

   return PTEMSG_OK;
}
/*************************************************************************************/
/*************************************************************************************/
BYTE db_insert_bch11( pBCH11 bch11_ptr, pCHAR ErrorMsg)
{
   bch11_to_db( bch11_ptr );

   /* Log the query into shared memory. */
   memset( &Sql01, 0x00, sizeof(SQL01) );
   strcpy( Sql01.appname, app_name );
   strcpy( Sql01.sqltext, "INSERT INTO bch11 ... " );

   rtnval = WriteSQL01_Table( &Sql01 );
   if ( rtnval < 0 )
   {
      sprintf( ErrorMsg,
              "Insert BCH11 - Err writing to SQL01 in memory: %d",
               rtnval );
      LogEvent( ErrorMsg, WARN_MSG );
   }

 EXEC SQL INSERT INTO bch11
(  
	device_id,
	batch_nbr, 
	retrieval_ref_num,
	open_date,
	open_time,
	merchant_id,  
	transaction_id,
	tran_date,
	tran_time,   
	tran_amount, 
	processing_code,
	auth_number,   
	message_type,
	card_nbr,    
	invoice_nbr,   
	settle_file_prefix,    
	product_code,           
	sys_trace_audit_num,
	tx_key, 
	bin_type,
	pos_entry_mode,
	profile,
	response_code,
   exp_date,
	cash_bonus,
	transmission_timestamp,
	mcard_banknet,
	ticket_nbr,
	odometer,
   def_gross_amt,
   term,
   product2_code, /* Added for STIP value*/
   product20_code,
   product7_amount,product15_amount                                        
)

VALUES

(
	:pte_bch11.device_id,
	:pte_bch11.batch_nbr, 
	:pte_bch11.retrieval_ref_num,
	:pte_bch11.open_date,
	:pte_bch11.open_time,
	:pte_bch11.merchant_id,  
	:pte_bch11.transaction_id,
	:pte_bch11.tran_date,
	:pte_bch11.tran_time,   
	:pte_bch11.tran_amount, 
	:pte_bch11.processing_code,
	:pte_bch11.auth_number,   
	:pte_bch11.message_type,
	:pte_bch11.card_nbr,    
	:pte_bch11.invoice_nbr,   
	:pte_bch11.settle_file_prefix,    
	:pte_bch11.product_code,           
	:pte_bch11.sys_trace_audit_num,
	:pte_bch11.tx_key, 
	:pte_bch11.bin_type,
	:pte_bch11.pos_entry_mode,
	:pte_bch11.profile,
	:pte_bch11.response_code,
	:pte_bch11.exp_date,
	:pte_bch11.cash_bonus,
	:pte_bch11.transmission_timestamp,
	:pte_bch11.mcard_banknet,
	:pte_bch11.ticket_nbr,
   :pte_bch11.odometer,
   :pte_bch11.def_gross_amt,
   :pte_bch11.term,
   :pte_bch11.product2_code,
   :pte_bch11.product20_code,
   :pte_bch11.product7_amount,
   :pte_bch11.product15_amount
);

   if ( SQLCODE != 0 )
      return( DBTest_oracle_to_pte_rcode( SQLCODE, ErrorMsg ) );

   return PTEMSG_OK;
}
/*************************************************************************************/
/*************************************************************************************/
BYTE db_update_bch11( pBCH11 bch11_ptr, pCHAR ErrorMsg )
{
   /* update open date and time is not necessary */
   bch11_to_db( bch11_ptr );

   /* Log the query into shared memory. */
   memset( &Sql01, 0x00, sizeof(SQL01) );
   strcpy( Sql01.appname, app_name );
   sprintf( Sql01.sqltext,
           "SELECT * INTO :db_bch11 FROM bch11 "
           "WHERE device_id = %s AND batch_nbr = %s "
           "AND retrieval_ref_num = %s For Update NOWAIT",
            pte_bch11.device_id, pte_bch11.batch_nbr,
            pte_bch11.retrieval_ref_num );

   rtnval = WriteSQL01_Table( &Sql01 );
   if ( rtnval < 0 )
   {
      sprintf( ErrorMsg,
              "Select BCH11 NOWAIT - Err writing to SQL01 in memory: %d",
               rtnval );
      LogEvent( ErrorMsg, WARN_MSG );
   }

   /* Make sure we can access the record before attempting to update it. */
   EXEC SQL
      SELECT *
      INTO  :db_bch11
      FROM   BCH11
      WHERE  device_id = :pte_bch11.device_id
        AND  batch_nbr = :pte_bch11.batch_nbr
        AND  retrieval_ref_num = :pte_bch11.retrieval_ref_num
      For Update NOWAIT;

   if (SQLCODE != 0 && SQLCODE != NULL_COLUMN_DATA && SQLCODE != NO_DATA_FOUND)
   {
      /* Record is inaccessible. Return with error. */
      return( DBTest_oracle_to_pte_rcode(SQLCODE, ErrorMsg) );
   }

   /* Log the query into shared memory. */
   memset( &Sql01, 0x00, sizeof(SQL01) );
   strcpy( Sql01.appname, app_name );
   sprintf( Sql01.sqltext,
           "UPDATE bch11 "
           "WHERE device_id = %s AND batch_nbr = %s "
           "AND retrieval_ref_num = %s",
            pte_bch11.device_id, pte_bch11.batch_nbr,
            pte_bch11.retrieval_ref_num );

   rtnval = WriteSQL01_Table( &Sql01 );
   if ( rtnval < 0 )
   {
      sprintf( ErrorMsg,
              "Update BCH11 - Err writing to SQL01 in memory: %d",
               rtnval );
      LogEvent( ErrorMsg, WARN_MSG );
   }

   EXEC SQL UPDATE bch11 
   SET 
    device_id				= :pte_bch11.device_id,
	batch_nbr			= :pte_bch11.batch_nbr, 
	retrieval_ref_num		= :pte_bch11.retrieval_ref_num,
	merchant_id			= :pte_bch11.merchant_id,  
	transaction_id			= :pte_bch11.transaction_id,
	tran_date			= :pte_bch11.tran_date,
	tran_time			= :pte_bch11.tran_time,   
	tran_amount			= :pte_bch11.tran_amount, 
	processing_code			= :pte_bch11.processing_code,
	auth_number			= :pte_bch11.auth_number,   
	message_type			= :pte_bch11.message_type,
	card_nbr			= :pte_bch11.card_nbr,    
  	invoice_nbr			= :pte_bch11.invoice_nbr,   
	settle_file_prefix		= :pte_bch11.settle_file_prefix,    
	product_code			= :pte_bch11.product_code,           
	sys_trace_audit_num		= :pte_bch11.sys_trace_audit_num,
	tx_key				= :pte_bch11.tx_key, 
	bin_type			= :pte_bch11.bin_type,
	pos_entry_mode			= :pte_bch11.pos_entry_mode,
	profile				= :pte_bch11.profile,
	exp_date			= :pte_bch11.exp_date,
	product2_code			= :pte_bch11.product2_code,
	product7_amount			= :pte_bch11.product7_amount     
    
WHERE device_id = :pte_bch11.device_id AND batch_nbr = :pte_bch11.batch_nbr AND
         retrieval_ref_num = :pte_bch11.retrieval_ref_num;
      
   if ( SQLCODE != 0 )
      return( DBTest_oracle_to_pte_rcode( SQLCODE, ErrorMsg ) );

   return PTEMSG_OK;
}
/*************************************************************************************/
/*************************************************************************************/
BYTE db_insert_bch20( pBCH20 bch20_ptr, pCHAR ErrorMsg)
{
   bch20_to_db( bch20_ptr );

   /* Log the query into shared memory. */
   memset( &Sql01, 0x00, sizeof(SQL01) );
   strcpy( Sql01.appname, app_name );
   strcpy( Sql01.sqltext, "INSERT INTO bch20 ... " );

   rtnval = WriteSQL01_Table( &Sql01 );
   if ( rtnval < 0 )
   {
      sprintf( ErrorMsg,
              "Insert BCH20 - Err writing to SQL01 in memory: %d",
               rtnval );
      LogEvent( ErrorMsg, WARN_MSG );
   }

 EXEC SQL INSERT INTO bch20
 (  
	device_id,
	batch_nbr, 
	retrieval_ref_num,
	open_date,
	open_time,
	merchant_id,  
	transaction_id,
	tran_date,
	tran_time,   
	tran_amount, 
	processing_code,
	auth_number,   
	message_type,
	card_nbr,    
	invoice_nbr,   
	settle_file_prefix,    
	product_code,           
	sys_trace_audit_num,
	tx_key, 
	bin_type,
	pos_entry_mode,
	profile,
	processed,
	response_code,  
	transmission_timestamp, 
	mcard_banknet,
	exp_date,
	ticket_nbr,
   odometer,
   def_gross_amt,
   term,
   product2_code, /* Added for STIP value*/
	product15_amount
 )
VALUES
 (
	:pte_bch20.device_id,
	:pte_bch20.batch_nbr, 
	:pte_bch20.retrieval_ref_num,
	:pte_bch20.open_date,
	:pte_bch20.open_time,
	:pte_bch20.merchant_id,  
	:pte_bch20.transaction_id,
	:pte_bch20.tran_date,
	:pte_bch20.tran_time,   
	:pte_bch20.tran_amount, 
	:pte_bch20.processing_code,
	:pte_bch20.auth_number,   
	:pte_bch20.message_type,
	:pte_bch20.card_nbr,    
	:pte_bch20.invoice_nbr,   
	:pte_bch20.settle_file_prefix,    
	:pte_bch20.product_code,           
	:pte_bch20.sys_trace_audit_num,
	:pte_bch20.tx_key, 
	:pte_bch20.bin_type,
	:pte_bch20.pos_entry_mode,
	:pte_bch20.profile,
	:pte_bch20.processed,
	:pte_bch20.response_code,
	:pte_bch20.transmission_timestamp,
	:pte_bch20.mcard_banknet,
	:pte_bch20.exp_date,
	:pte_bch20.ticket_nbr,
   :pte_bch20.odometer,
   :pte_bch20.def_gross_amt,
   :pte_bch20.term,
   :pte_bch20.product2_code,
   :pte_bch20.product15_amount
 );

   if ( SQLCODE != 0 )
      return( DBTest_oracle_to_pte_rcode( SQLCODE, ErrorMsg ) );

   return PTEMSG_OK;
}
/*************************************************************************************/
/*************************************************************************************/
BYTE db_update_bch20( pBCH20 bch20_ptr, pCHAR ErrorMsg)
{
   bch20_to_db( bch20_ptr );

   /* Log the query into shared memory. */
   memset( &Sql01, 0x00, sizeof(SQL01) );
   strcpy( Sql01.appname, app_name );
   sprintf( Sql01.sqltext,
           "SELECT * INTO :db_bch20 FROM bch20 "
           "WHERE device_id = %s AND batch_nbr = %s "
           "AND merchant_id = %s AND sys_trace_audit_num = %s For Update NOWAIT",
            pte_bch20.device_id, pte_bch20.batch_nbr,
            pte_bch20.merchant_id, pte_bch20.sys_trace_audit_num );

   rtnval = WriteSQL01_Table( &Sql01 );
   if ( rtnval < 0 )
   {
      sprintf( ErrorMsg,
              "Select BCH20 NOWAIT - Err writing to SQL01 in memory: %d",
               rtnval );
      LogEvent( ErrorMsg, WARN_MSG );
   }

   /* Make sure we can access the record before attempting to update it. */
   EXEC SQL
      SELECT *
      INTO  :db_bch20
      FROM   BCH20
      WHERE  device_id           = :pte_bch20.device_id
        AND  merchant_id         = :pte_bch20.merchant_id
      For Update NOWAIT;

   if (SQLCODE != 0 && SQLCODE != NULL_COLUMN_DATA && SQLCODE != NO_DATA_FOUND)
   {
      /* Record is inaccessible. Return with error. */
      return( DBTest_oracle_to_pte_rcode(SQLCODE, ErrorMsg) );
   }

   /* Log the query into shared memory. */
   memset( &Sql01, 0x00, sizeof(SQL01) );
   strcpy( Sql01.appname, app_name );
   sprintf( Sql01.sqltext,
           "UPDATE bch20 SET processed = 'Y' "
           "WHERE device_id = %s AND batch_nbr = %s "
           "AND merchant_id = %s AND sys_trace_audit_num = %s",
            pte_bch20.device_id, pte_bch20.batch_nbr,
            pte_bch20.merchant_id, pte_bch20.sys_trace_audit_num );

   rtnval = WriteSQL01_Table( &Sql01 );
   if ( rtnval < 0 )
   {
      sprintf( ErrorMsg,
              "Update BCH20 Stan - Err writing to SQL01 in memory: %d",
               rtnval );
      LogEvent( ErrorMsg, WARN_MSG );
   }

   EXEC SQL UPDATE bch20
   SET processed = 'Y'
   WHERE device_id = :pte_bch20.device_id
            AND merchant_id = :pte_bch20.merchant_id;

   if (( SQLCODE != 0 ) /*&& ( SQLCODE != NO_DATA_FOUND)*/)
      return(DBTest_oracle_to_pte_rcode( SQLCODE, ErrorMsg ) );

   return PTEMSG_OK;
}

/*************************************************************************************/
/*************************************************************************************/
BYTE db_insert_ucf01( pUCF01 ucf01_ptr, pCHAR ErrorMsg )
{
   ucf01_to_db( ucf01_ptr );

   /* Log the query into shared memory. */
   memset( &Sql01, 0x00, sizeof(SQL01) );
   strcpy( Sql01.appname, app_name );
   strcpy( Sql01.sqltext, "INSERT INTO ucf01 ... " );

   rtnval = WriteSQL01_Table( &Sql01 );
   if ( rtnval < 0 )
   {
      sprintf( ErrorMsg,
              "Insert UCF01 - Err writing to SQL01 in memory: %d",
               rtnval );
      LogEvent( ErrorMsg, WARN_MSG );
   }

   EXEC SQL INSERT INTO ucf01
      ( name, password, date_added, group_id, subsystem_name_1, action_1,
        subsystem_name_2, action_2, subsystem_name_3, action_3,
        subsystem_name_4, action_4, subsystem_name_5, action_5, 
        subsystem_name_6, action_6, subsystem_name_7, action_7,
        subsystem_name_8, action_8, subsystem_name_9, action_9,
        subsystem_name_10, action_10, subsystem_name_11, action_11,
        subsystem_name_12, action_12, subsystem_name_13, action_13,
        subsystem_name_14, action_14, subsystem_name_15, action_15,
        terminals_1, terminals_2, terminals_3, terminals_4, terminals_5,
        terminals_6, terminals_7, terminals_8, terminals_9, terminals_10,
         password_1, password_2, password_3, password_4	, accountstatus	, password_modified_date,
 		user_info_1, user_info_2, user_info_3, user_info_4, user_info_5, user_info_6, user_info_7, ekey, dekey, 
        subsystem_name_16, action_16, subsystem_name_17, action_17,
        subsystem_name_18, action_18, subsystem_name_19, action_19,
        subsystem_name_20, action_20, buffer

      )
   VALUES( :pte_ucf01.name, :pte_ucf01.password, :pte_ucf01.date_added, :pte_ucf01.group_id, :pte_ucf01.subsystem_name_1, :pte_ucf01.action_1,
        :pte_ucf01.subsystem_name_2, :pte_ucf01.action_2, :pte_ucf01.subsystem_name_3, :pte_ucf01.action_3,
        :pte_ucf01.subsystem_name_4, :pte_ucf01.action_4, :pte_ucf01.subsystem_name_5, :pte_ucf01.action_5, 
        :pte_ucf01.subsystem_name_6, :pte_ucf01.action_6, :pte_ucf01.subsystem_name_7, :pte_ucf01.action_7,
        :pte_ucf01.subsystem_name_8, :pte_ucf01.action_8, :pte_ucf01.subsystem_name_9, :pte_ucf01.action_9,
        :pte_ucf01.subsystem_name_10, :pte_ucf01.action_10, :pte_ucf01.subsystem_name_11, :pte_ucf01.action_11,
        :pte_ucf01.subsystem_name_12, :pte_ucf01.action_12, :pte_ucf01.subsystem_name_13, :pte_ucf01.action_13,
        :pte_ucf01.subsystem_name_14, :pte_ucf01.action_14, :pte_ucf01.subsystem_name_15, :pte_ucf01.action_15,
        :pte_ucf01.terminals_1, :pte_ucf01.terminals_2, :pte_ucf01.terminals_3, :pte_ucf01.terminals_4, :pte_ucf01.terminals_5,
        :pte_ucf01.terminals_6, :pte_ucf01.terminals_7, :pte_ucf01.terminals_8, :pte_ucf01.terminals_9, :pte_ucf01.terminals_10,
        :pte_ucf01.password_1,  :pte_ucf01.password_2,  :pte_ucf01.password_3,  :pte_ucf01.password_4 ,  :pte_ucf01.accountstatus ,
	    :pte_ucf01.password_modified_date, :pte_ucf01.user_info_1,  :pte_ucf01.user_info_2,  :pte_ucf01.user_info_3,  :pte_ucf01.user_info_4,
	    :pte_ucf01.user_info_5,  :pte_ucf01.user_info_6,  :pte_ucf01.user_info_7,  :pte_ucf01.ekey,  :pte_ucf01.dekey, 
        :pte_ucf01.subsystem_name_16, :pte_ucf01.action_16, :pte_ucf01.subsystem_name_17, :pte_ucf01.action_17,
        :pte_ucf01.subsystem_name_18, :pte_ucf01.action_18, :pte_ucf01.subsystem_name_19, :pte_ucf01.action_19,
        :pte_ucf01.subsystem_name_20, :pte_ucf01.action_20, :pte_ucf01.buffer
   			   
      );

   if ( SQLCODE != 0 )
      return( DBTest_oracle_to_pte_rcode( SQLCODE, ErrorMsg ) );

   return PTEMSG_OK;
}
/*************************************************************************************/
/*************************************************************************************/
BYTE db_update_ucf01( pUCF01 ucf01_ptr, pCHAR ErrorMsg )
{
   ucf01_to_db( ucf01_ptr );

   /* Log the query into shared memory. */
   memset( &Sql01, 0x00, sizeof(SQL01) );
   strcpy( Sql01.appname, app_name );
   sprintf( Sql01.sqltext,
           "SELECT * INTO :db_ucf01 FROM ucf01 "
           "WHERE name = %s For Update NOWAIT",
            pte_ucf01.name );
   rtnval = WriteSQL01_Table( &Sql01 );
   if ( rtnval < 0 )
   {
      sprintf( ErrorMsg,
              "Select UCF01 NOWAIT - Err writing to SQL01 in memory: %d",
               rtnval );
      LogEvent( ErrorMsg, WARN_MSG );
   }
   /* Make sure we can access the record before attempting to update it. */
   EXEC SQL
      SELECT *
      INTO  :db_ucf01
      FROM   UCF01
      WHERE  name = :pte_ucf01.name
      For Update NOWAIT;

   if (SQLCODE != 0 && SQLCODE != NULL_COLUMN_DATA && SQLCODE != NO_DATA_FOUND)
   {
      /* Record is inaccessible. Return with error. */
      return( DBTest_oracle_to_pte_rcode(SQLCODE, ErrorMsg) );
   }

   /* Log the query into shared memory. */
   memset( &Sql01, 0x00, sizeof(SQL01) );
   strcpy( Sql01.appname, app_name );
   sprintf( Sql01.sqltext,
           "UPDATE ucf01 "
           "WHERE name = %s",
            pte_ucf01.name );
   rtnval = WriteSQL01_Table( &Sql01 );
   if ( rtnval < 0 )
   {
      sprintf( ErrorMsg,
              "Update UCF01 - Err writing to SQL01 in memory: %d",
               rtnval );
      LogEvent( ErrorMsg, WARN_MSG );
   }

   EXEC SQL UPDATE ucf01 
   SET name                = :pte_ucf01.name,                              
       password            = :pte_ucf01.password,                 
       date_added          = :pte_ucf01.date_added,           
       group_id            = :pte_ucf01.group_id, 
       subsystem_name_1    = :pte_ucf01.subsystem_name_1,
       action_1            = :pte_ucf01.action_1,
       subsystem_name_2    = :pte_ucf01.subsystem_name_2,
       action_2            = :pte_ucf01.action_2,
       subsystem_name_3    = :pte_ucf01.subsystem_name_3,
       action_3            = :pte_ucf01.action_3,
       subsystem_name_4    = :pte_ucf01.subsystem_name_4,
       action_4            = :pte_ucf01.action_4,
       subsystem_name_5    = :pte_ucf01.subsystem_name_5,
       action_5            = :pte_ucf01.action_5,
       subsystem_name_6    = :pte_ucf01.subsystem_name_6,
       action_6            = :pte_ucf01.action_6,
       subsystem_name_7    = :pte_ucf01.subsystem_name_7,
       action_7            = :pte_ucf01.action_7,
       subsystem_name_8    = :pte_ucf01.subsystem_name_8,
       action_8            = :pte_ucf01.action_8,
       subsystem_name_9    = :pte_ucf01.subsystem_name_9,
       action_9            = :pte_ucf01.action_9,
       subsystem_name_10   = :pte_ucf01.subsystem_name_10,
       action_10           = :pte_ucf01.action_10,
       subsystem_name_11   = :pte_ucf01.subsystem_name_11,
       action_11           = :pte_ucf01.action_11,
       subsystem_name_12   = :pte_ucf01.subsystem_name_12,
       action_12           = :pte_ucf01.action_12,
       subsystem_name_13   = :pte_ucf01.subsystem_name_13,
       action_13           = :pte_ucf01.action_13,
       subsystem_name_14   = :pte_ucf01.subsystem_name_14,
       action_14           = :pte_ucf01.action_14,
       subsystem_name_15   = :pte_ucf01.subsystem_name_15,
       action_15           = :pte_ucf01.action_15,
       terminals_1         = :pte_ucf01.terminals_1,             
       terminals_2         = :pte_ucf01.terminals_2,             
       terminals_3         = :pte_ucf01.terminals_3,             
       terminals_4         = :pte_ucf01.terminals_4,             
       terminals_5         = :pte_ucf01.terminals_5,             
       terminals_6         = :pte_ucf01.terminals_6,             
       terminals_7         = :pte_ucf01.terminals_7,             
       terminals_8         = :pte_ucf01.terminals_8,             
       terminals_9         = :pte_ucf01.terminals_9,             
       terminals_10        = :pte_ucf01.terminals_10,
       password_1		   = :pte_ucf01.password_1,
       password_2		   = :pte_ucf01.password_2,
       password_3		   = :pte_ucf01.password_3,
       password_4 		   = :pte_ucf01.password_4, 
       accountstatus 	   = :pte_ucf01.accountstatus,
       password_modified_date = :pte_ucf01.password_modified_date,
       user_info_1 		 = :pte_ucf01.user_info_1,
       user_info_2   		= :pte_ucf01.user_info_2, 
       user_info_3  		 = :pte_ucf01.user_info_3,
       user_info_4  		 = :pte_ucf01.user_info_4,
       user_info_5  		 = :pte_ucf01.user_info_5,
       user_info_6	 		  = :pte_ucf01.user_info_6,	
       user_info_7   		 = :pte_ucf01.user_info_7, 
       ekey		   		= :pte_ucf01.ekey,	 
       dekey  				 = :pte_ucf01.dekey,
       subsystem_name_16    = :pte_ucf01.subsystem_name_16,
       action_16            = :pte_ucf01.action_16,
       subsystem_name_17    = :pte_ucf01.subsystem_name_17,
       action_17            = :pte_ucf01.action_17,
       subsystem_name_18    = :pte_ucf01.subsystem_name_18,
       action_18            = :pte_ucf01.action_18,
       subsystem_name_19    = :pte_ucf01.subsystem_name_19,
       action_19            = :pte_ucf01.action_19,
       subsystem_name_20   = :pte_ucf01.subsystem_name_20,
       action_20           = :pte_ucf01.action_20,
       buffer              = :pte_ucf01.buffer
   WHERE name = :pte_ucf01.name;

   if ( SQLCODE != 0 )
      return( DBTest_oracle_to_pte_rcode( SQLCODE, ErrorMsg ) );

   return PTEMSG_OK;
}

/*************************************************************************************/
/*************************************************************************************/
BYTE db_insert_ucf02( pUCF02 ucf02_ptr, pCHAR ErrorMsg )
{
   ucf02_to_db( ucf02_ptr );

   /* Log the query into shared memory. */
   memset( &Sql01, 0x00, sizeof(SQL01) );
   strcpy( Sql01.appname, app_name );
   strcpy( Sql01.sqltext, "INSERT INTO ucf02 ... " );

   rtnval = WriteSQL01_Table( &Sql01 );
   if ( rtnval < 0 )
   {
      sprintf( ErrorMsg,
              "Insert UCF02 - Err writing to SQL01 in memory: %d",
               rtnval );
      LogEvent( ErrorMsg, WARN_MSG );
   }

   EXEC SQL INSERT INTO ucf02
      ( group_id, date_added, subsystem_name_1, action_1,
        subsystem_name_2, action_2, subsystem_name_3, action_3,
        subsystem_name_4, action_4, subsystem_name_5, action_5, 
        subsystem_name_6, action_6, subsystem_name_7, action_7,
        subsystem_name_8, action_8, subsystem_name_9, action_9,
        subsystem_name_10, action_10, subsystem_name_11, action_11,
        subsystem_name_12, action_12, subsystem_name_13, action_13,
        subsystem_name_14, action_14, subsystem_name_15, action_15,
        terminals_1, terminals_2, terminals_3, terminals_4, terminals_5,
        terminals_6, terminals_7, terminals_8, terminals_9, terminals_10, 
        subsystem_name_16, action_16, subsystem_name_17, action_17,
        subsystem_name_18, action_18, subsystem_name_19, action_19,
        subsystem_name_20, action_20, buffer
      )
   VALUES( :pte_ucf02.group_id, :pte_ucf02.date_added, :pte_ucf02.subsystem_name_1, :pte_ucf02.action_1,
        :pte_ucf02.subsystem_name_2, :pte_ucf02.action_2, :pte_ucf02.subsystem_name_3, :pte_ucf02.action_3,
        :pte_ucf02.subsystem_name_4, :pte_ucf02.action_4, :pte_ucf02.subsystem_name_5, :pte_ucf02.action_5, 
        :pte_ucf02.subsystem_name_6, :pte_ucf02.action_6, :pte_ucf02.subsystem_name_7, :pte_ucf02.action_7,
        :pte_ucf02.subsystem_name_8, :pte_ucf02.action_8, :pte_ucf02.subsystem_name_9, :pte_ucf02.action_9,
        :pte_ucf02.subsystem_name_10, :pte_ucf02.action_10, :pte_ucf02.subsystem_name_11, :pte_ucf02.action_11,
        :pte_ucf02.subsystem_name_12, :pte_ucf02.action_12, :pte_ucf02.subsystem_name_13, :pte_ucf02.action_13,
        :pte_ucf02.subsystem_name_14, :pte_ucf02.action_14, :pte_ucf02.subsystem_name_15, :pte_ucf02.action_15,
        :pte_ucf02.terminals_1, :pte_ucf02.terminals_2, :pte_ucf02.terminals_3, :pte_ucf02.terminals_4, :pte_ucf02.terminals_5,
        :pte_ucf02.terminals_6, :pte_ucf02.terminals_7, :pte_ucf02.terminals_8, :pte_ucf02.terminals_9, :pte_ucf02.terminals_10, 
        :pte_ucf02.subsystem_name_16, :pte_ucf02.action_16, :pte_ucf02.subsystem_name_17, :pte_ucf02.action_17,
        :pte_ucf02.subsystem_name_18, :pte_ucf02.action_18, :pte_ucf02.subsystem_name_19, :pte_ucf02.action_19,
        :pte_ucf02.subsystem_name_20, :pte_ucf02.action_20, :pte_ucf02.buffer
      );

   if ( SQLCODE != 0 )
      return( DBTest_oracle_to_pte_rcode( SQLCODE, ErrorMsg ) );

   return PTEMSG_OK;
}
/*************************************************************************************/
/*************************************************************************************/
BYTE db_update_ucf02( pUCF02 ucf02_ptr, pCHAR ErrorMsg )
{
   ucf02_to_db( ucf02_ptr );

   /* Log the query into shared memory. */
   memset( &Sql01, 0x00, sizeof(SQL01) );
   strcpy( Sql01.appname, app_name );
   sprintf( Sql01.sqltext,
           "SELECT * INTO :db_ucf02 FROM ucf02 "
           "WHERE group_id = %s For Update NOWAIT",
            pte_ucf02.group_id );
   rtnval = WriteSQL01_Table( &Sql01 );
   if ( rtnval < 0 )
   {
      sprintf( ErrorMsg,
              "Select UCF02 NOWAIT - Err writing to SQL01 in memory: %d",
               rtnval );
      LogEvent( ErrorMsg, WARN_MSG );
   }
   /* Make sure we can access the record before attempting to update it. */
   EXEC SQL
      SELECT *
      INTO  :db_ucf02
      FROM   UCF02
      WHERE  group_id = :pte_ucf02.group_id
      For Update NOWAIT;
   if (SQLCODE != 0 && SQLCODE != NULL_COLUMN_DATA && SQLCODE != NO_DATA_FOUND)
   {
      /* Record is inaccessible. Return with error. */
      return( DBTest_oracle_to_pte_rcode(SQLCODE, ErrorMsg) );
   }

   /* Log the query into shared memory. */
   memset( &Sql01, 0x00, sizeof(SQL01) );
   strcpy( Sql01.appname, app_name );
   sprintf( Sql01.sqltext,
           "UPDATE ucf02 "
           "WHERE group_id = %s",
            pte_ucf02.group_id );

   rtnval = WriteSQL01_Table( &Sql01 );
   if ( rtnval < 0 )
   {
      sprintf( ErrorMsg,
              "Update UCF02 - Err writing to SQL01 in memory: %d",
               rtnval );
      LogEvent( ErrorMsg, WARN_MSG );
   }

   EXEC SQL UPDATE ucf02 
   SET group_id            = :pte_ucf02.group_id,                             
       date_added          = :pte_ucf02.date_added,           
       subsystem_name_1    = :pte_ucf02.subsystem_name_1,
       action_1            = :pte_ucf02.action_1,
       subsystem_name_2    = :pte_ucf02.subsystem_name_2,
       action_2            = :pte_ucf02.action_2,
       subsystem_name_3    = :pte_ucf02.subsystem_name_3,
       action_3            = :pte_ucf02.action_3,
       subsystem_name_4    = :pte_ucf02.subsystem_name_4,
       action_4            = :pte_ucf02.action_4,
       subsystem_name_5    = :pte_ucf02.subsystem_name_5,
       action_5            = :pte_ucf02.action_5,
       subsystem_name_6    = :pte_ucf02.subsystem_name_6,
       action_6            = :pte_ucf02.action_6,
       subsystem_name_7    = :pte_ucf02.subsystem_name_7,
       action_7            = :pte_ucf02.action_7,
       subsystem_name_8    = :pte_ucf02.subsystem_name_8,
       action_8            = :pte_ucf02.action_8,
       subsystem_name_9    = :pte_ucf02.subsystem_name_9,
       action_9            = :pte_ucf02.action_9,
       subsystem_name_10   = :pte_ucf02.subsystem_name_10,
       action_10           = :pte_ucf02.action_10,
       subsystem_name_11   = :pte_ucf02.subsystem_name_11,
       action_11           = :pte_ucf02.action_11,
       subsystem_name_12   = :pte_ucf02.subsystem_name_12,
       action_12           = :pte_ucf02.action_12,
       subsystem_name_13   = :pte_ucf02.subsystem_name_13,
       action_13           = :pte_ucf02.action_13,
       subsystem_name_14   = :pte_ucf02.subsystem_name_14,
       action_14           = :pte_ucf02.action_14,
       subsystem_name_15   = :pte_ucf02.subsystem_name_15,
       action_15           = :pte_ucf02.action_15,
       terminals_1         = :pte_ucf02.terminals_1,             
       terminals_2         = :pte_ucf02.terminals_2,             
       terminals_3         = :pte_ucf02.terminals_3,
       terminals_4         = :pte_ucf02.terminals_4,             
       terminals_5         = :pte_ucf02.terminals_5,             
       terminals_6         = :pte_ucf02.terminals_6,             
       terminals_7         = :pte_ucf02.terminals_7,             
       terminals_8         = :pte_ucf02.terminals_8,             
       terminals_9         = :pte_ucf02.terminals_9,             
       terminals_10        = :pte_ucf02.terminals_10,
       subsystem_name_16    = :pte_ucf02.subsystem_name_16,
       action_16            = :pte_ucf02.action_16,
       subsystem_name_17    = :pte_ucf02.subsystem_name_17,
       action_17            = :pte_ucf02.action_17,
       subsystem_name_18    = :pte_ucf02.subsystem_name_18,
       action_18            = :pte_ucf02.action_18,
       subsystem_name_19    = :pte_ucf02.subsystem_name_19,
       action_19            = :pte_ucf02.action_19,
       subsystem_name_20   = :pte_ucf02.subsystem_name_20,
       action_20           = :pte_ucf02.action_20,
       buffer		    = :pte_ucf02.buffer
   WHERE group_id = :pte_ucf02.group_id;
   if ( SQLCODE != 0 )
      return( DBTest_oracle_to_pte_rcode( SQLCODE, ErrorMsg ) );
   /**********************************************************************************/
   /* UPDATE SUB_SYSTEM and ACTION of UCF01 for users associated with the same group */

   /* Log the query into shared memory. */
   memset( &Sql01, 0x00, sizeof(SQL01) );
   strcpy( Sql01.appname, app_name );
   sprintf( Sql01.sqltext,
           "UPDATE ucf01 "
           "WHERE group_id = %s",
            pte_ucf02.group_id );

   rtnval = WriteSQL01_Table( &Sql01 );
   if ( rtnval < 0 )
   {
     sprintf( ErrorMsg,
              "Update UCF01 - Err writing to SQL01 in memory: %d",
               rtnval );
      LogEvent( ErrorMsg, WARN_MSG );
   }
   EXEC SQL UPDATE ucf01 
   SET subsystem_name_1    = :pte_ucf02.subsystem_name_1,
       action_1            = :pte_ucf02.action_1,
       subsystem_name_2    = :pte_ucf02.subsystem_name_2,
       action_2            = :pte_ucf02.action_2,
       subsystem_name_3    = :pte_ucf02.subsystem_name_3,
       action_3            = :pte_ucf02.action_3,
       subsystem_name_4    = :pte_ucf02.subsystem_name_4,
       action_4            = :pte_ucf02.action_4,
       subsystem_name_5    = :pte_ucf02.subsystem_name_5,
       action_5            = :pte_ucf02.action_5,
       subsystem_name_6    = :pte_ucf02.subsystem_name_6,
       action_6            = :pte_ucf02.action_6,
       subsystem_name_7    = :pte_ucf02.subsystem_name_7,
       action_7            = :pte_ucf02.action_7,
       subsystem_name_8    = :pte_ucf02.subsystem_name_8,
       action_8            = :pte_ucf02.action_8,
       subsystem_name_9    = :pte_ucf02.subsystem_name_9,
       action_9            = :pte_ucf02.action_9,
       subsystem_name_10   = :pte_ucf02.subsystem_name_10,
       action_10           = :pte_ucf02.action_10,
       subsystem_name_11   = :pte_ucf02.subsystem_name_11,
       action_11           = :pte_ucf02.action_11,
       subsystem_name_13   = :pte_ucf02.subsystem_name_13,
       action_13           = :pte_ucf02.action_13,
       subsystem_name_14   = :pte_ucf02.subsystem_name_14,
       action_14           = :pte_ucf02.action_14,
       subsystem_name_15   = :pte_ucf02.subsystem_name_15,
       action_15           = :pte_ucf02.action_15,
       subsystem_name_16    = :pte_ucf02.subsystem_name_16,
       action_16            = :pte_ucf02.action_16,
       subsystem_name_17    = :pte_ucf02.subsystem_name_17,
       action_17            = :pte_ucf02.action_17,
       subsystem_name_18    = :pte_ucf02.subsystem_name_18,
       action_18            = :pte_ucf02.action_18,
       subsystem_name_19    = :pte_ucf02.subsystem_name_19,
       action_19            = :pte_ucf02.action_19,
       subsystem_name_20   = :pte_ucf02.subsystem_name_20,
       action_20           = :pte_ucf02.action_20,
       buffer		   = :pte_ucf02.buffer
   WHERE group_id = :pte_ucf02.group_id;
   if ( SQLCODE != 0 )
   {
   /*printf("\nError in updating ucf01\n");
      return( DBTest_oracle_to_pte_rcode( SQLCODE, ErrorMsg ) );*/
   }
   return PTEMSG_OK;
}
/*************************************************************************************/
/*************************************************************************************/
BYTE db_insert_atp01( pATP01 atp01_ptr, pCHAR ErrorMsg )
{
   atp01_to_db( atp01_ptr );

   /* Log the query into shared memory. */
   memset( &Sql01, 0x00, sizeof(SQL01) );
   strcpy( Sql01.appname, app_name );
   strcpy( Sql01.sqltext, "INSERT INTO atp01 ... " );

   rtnval = WriteSQL01_Table( &Sql01 );
   if ( rtnval < 0 )
   {
      sprintf( ErrorMsg,
              "Insert ATP01 - Err writing to SQL01 in memory: %d",
               rtnval );
      LogEvent( ErrorMsg, WARN_MSG );
   }

   EXEC SQL INSERT INTO atp01
      ( site_name, tlf_log_date,
        subsystem_name_1, 
        subsystem_name_2,
        subsystem_name_3,
        subsystem_name_4,
        subsystem_name_5,
        subsystem_name_6,
        subsystem_name_7,
        subsystem_name_8,
        subsystem_name_9,
        subsystem_name_10,
        subsystem_name_11,
        subsystem_name_12,
        subsystem_name_13,
        subsystem_name_14,
        subsystem_name_15,
        subsystem_name_16,
        subsystem_name_17,
        subsystem_name_18,
        subsystem_name_19,
        subsystem_name_20
      )
   VALUES( :pte_atp01.site_name, :pte_atp01.tlf_log_date,
        :pte_atp01.subsystem_name_1,
        :pte_atp01.subsystem_name_2,
        :pte_atp01.subsystem_name_3,
        :pte_atp01.subsystem_name_4,
        :pte_atp01.subsystem_name_5,
        :pte_atp01.subsystem_name_6,
        :pte_atp01.subsystem_name_7,
        :pte_atp01.subsystem_name_8,
        :pte_atp01.subsystem_name_9,
        :pte_atp01.subsystem_name_10,
        :pte_atp01.subsystem_name_11,
        :pte_atp01.subsystem_name_12,
        :pte_atp01.subsystem_name_13,
        :pte_atp01.subsystem_name_14,
        :pte_atp01.subsystem_name_15,
        :pte_atp01.subsystem_name_16,
        :pte_atp01.subsystem_name_17,
        :pte_atp01.subsystem_name_18,
        :pte_atp01.subsystem_name_19,
        :pte_atp01.subsystem_name_20
      );

   if ( SQLCODE != 0 )
      return( DBTest_oracle_to_pte_rcode( SQLCODE, ErrorMsg ) );

   return PTEMSG_OK;
}
/*************************************************************************************/
/*************************************************************************************/
BYTE db_update_atp01( pATP01 atp01_ptr, pCHAR ErrorMsg )
{
   atp01_to_db( atp01_ptr );

   /* Log the query into shared memory. */
   memset( &Sql01, 0x00, sizeof(SQL01) );
   strcpy( Sql01.appname, app_name );
   sprintf( Sql01.sqltext,
           "SELECT * INTO :db_atp01 FROM atp01 "
           "WHERE site_name = %s For Update NOWAIT",
            pte_atp01.site_name );

   rtnval = WriteSQL01_Table( &Sql01 );
   if ( rtnval < 0 )
   {
      sprintf( ErrorMsg,
              "Select ATP01 NOWAIT - Err writing to SQL01 in memory: %d",
               rtnval );
      LogEvent( ErrorMsg, WARN_MSG );
   }

   /* Make sure we can access the record before attempting to update it. */
   EXEC SQL
      SELECT *
      INTO  :db_atp01
      FROM   atp01
      WHERE  site_name = :pte_atp01.site_name
      For Update NOWAIT;

   if (SQLCODE != 0 && SQLCODE != NULL_COLUMN_DATA && SQLCODE != NO_DATA_FOUND)
   {
      /* Record is inaccessible. Return with error. */
      return( DBTest_oracle_to_pte_rcode(SQLCODE, ErrorMsg) );
   }

   /* Log the query into shared memory. */
   memset( &Sql01, 0x00, sizeof(SQL01) );
   strcpy( Sql01.appname, app_name );
   sprintf( Sql01.sqltext,
           "UPDATE atp01 "
           "WHERE site_name = %s",
            pte_atp01.site_name );

   rtnval = WriteSQL01_Table( &Sql01 );
   if ( rtnval < 0 )
   {
      sprintf( ErrorMsg,
              "Update ATP01 - Err writing to SQL01 in memory: %d",
               rtnval );
      LogEvent( ErrorMsg, WARN_MSG );
   }
   EXEC SQL UPDATE atp01 
   SET site_name           = :pte_atp01.site_name,                              
       tlf_log_date        = :pte_atp01.tlf_log_date,           
       subsystem_name_1    = :pte_atp01.subsystem_name_1,
       subsystem_name_2    = :pte_atp01.subsystem_name_2,
       subsystem_name_3    = :pte_atp01.subsystem_name_3,
       subsystem_name_4    = :pte_atp01.subsystem_name_4,
       subsystem_name_5    = :pte_atp01.subsystem_name_5,
       subsystem_name_6    = :pte_atp01.subsystem_name_6,
       subsystem_name_7    = :pte_atp01.subsystem_name_7,
       subsystem_name_8    = :pte_atp01.subsystem_name_8,
       subsystem_name_9    = :pte_atp01.subsystem_name_9,
       subsystem_name_10   = :pte_atp01.subsystem_name_10,
       subsystem_name_11   = :pte_atp01.subsystem_name_11,
       subsystem_name_12   = :pte_atp01.subsystem_name_12,
       subsystem_name_13   = :pte_atp01.subsystem_name_13,
       subsystem_name_14   = :pte_atp01.subsystem_name_14,
       subsystem_name_15   = :pte_atp01.subsystem_name_15,
       subsystem_name_16   = :pte_atp01.subsystem_name_16,
       subsystem_name_17   = :pte_atp01.subsystem_name_17,
       subsystem_name_18   = :pte_atp01.subsystem_name_18,
       subsystem_name_19   = :pte_atp01.subsystem_name_19,
       subsystem_name_20   = :pte_atp01.subsystem_name_20

   WHERE site_name = :pte_atp01.site_name;

   if ( SQLCODE != 0 )
      return( DBTest_oracle_to_pte_rcode( SQLCODE, ErrorMsg ) );

   return PTEMSG_OK;
}
/*************************************************************************************/
/*************************************************************************************/
BYTE db_insert_atp02( pATP02 atp02_ptr, pCHAR ErrorMsg )
{
   atp02_to_db( atp02_ptr );

   /* Log the query into shared memory. */
   memset( &Sql01, 0x00, sizeof(SQL01) );
   strcpy( Sql01.appname, app_name );
   strcpy( Sql01.sqltext, "INSERT INTO atp02 ... " );

   rtnval = WriteSQL01_Table( &Sql01 );
   if ( rtnval < 0 )
   {
      sprintf( ErrorMsg,
              "Insert ATP02 - Err writing to SQL01 in memory: %d",
               rtnval );
      LogEvent( ErrorMsg, WARN_MSG );
   }

   EXEC SQL INSERT INTO atp02
      ( workstation_id,
        workstation_status
      )
   VALUES( :pte_atp02.workstation_id,
        :pte_atp02.workstation_status
      );

   if ( SQLCODE != 0 )
      return( DBTest_oracle_to_pte_rcode( SQLCODE, ErrorMsg ) );

   return PTEMSG_OK;
}
/*************************************************************************************/
/*************************************************************************************/

BYTE db_update_atp02( pATP02 atp02_ptr, pCHAR ErrorMsg )
{
   atp02_to_db( atp02_ptr );

   /* Log the query into shared memory. */
   memset( &Sql01, 0x00, sizeof(SQL01) );
   strcpy( Sql01.appname, app_name );
   sprintf( Sql01.sqltext,
           "SELECT * INTO :db_atp02 FROM atp02 "
           "WHERE workstation_id = %s For Update NOWAIT",
            pte_atp02.workstation_id );

   rtnval = WriteSQL01_Table( &Sql01 );
   if ( rtnval < 0 )
   {
      sprintf( ErrorMsg,
              "Select ATP02 NOWAIT - Err writing to SQL01 in memory: %d",
               rtnval );
      LogEvent( ErrorMsg, WARN_MSG );
   }

   /* Make sure we can access the record before attempting to update it. */
   EXEC SQL
      SELECT *
      INTO  :db_atp02
      FROM   atp02
      WHERE  workstation_id = :pte_atp02.workstation_id
      For Update NOWAIT;

   if (SQLCODE != 0 && SQLCODE != NULL_COLUMN_DATA && SQLCODE != NO_DATA_FOUND)
   {
      /* Record is inaccessible. Return with error. */
      return( DBTest_oracle_to_pte_rcode(SQLCODE, ErrorMsg) );
   }


   /* Log the query into shared memory. */
   memset( &Sql01, 0x00, sizeof(SQL01) );
   strcpy( Sql01.appname, app_name );
   sprintf( Sql01.sqltext,
           "UPDATE atp02 "
           "WHERE workstation_id = %s",
            pte_atp02.workstation_id );

   rtnval = WriteSQL01_Table( &Sql01 );
   if ( rtnval < 0 )
   {
      sprintf( ErrorMsg,
              "Select ATP02 - Err writing to SQL01 in memory: %d",
               rtnval );
      LogEvent( ErrorMsg, WARN_MSG );
   }

   EXEC SQL UPDATE atp02 
   SET workstation_id      = :pte_atp02.workstation_id,                              
       workstation_status  = :pte_atp02.workstation_status           
                    
   WHERE workstation_id = :pte_atp02.workstation_id;
       
   if ( SQLCODE != 0 )
      return( DBTest_oracle_to_pte_rcode( SQLCODE, ErrorMsg ) );

   return PTEMSG_OK;
}
/*************************************************************************************/
/*************************************************************************************/
BYTE db_insert_ccf02p( pCCF02P ccf02p_ptr, pCHAR ErrorMsg )
{
   ccf02p_to_db( ccf02p_ptr );

  /* db_ccf02p.pin.len =100;
   memcpy(db_ccf02p.pin.pin_data, pte_ccf02p.pin, sizeof(pte_ccf02p.pin)); */
   
   /* Log the query into shared memory. */
   memset( &Sql01, 0x00, sizeof(SQL01) );
   strcpy( Sql01.appname, app_name );
   strcpy( Sql01.sqltext, "INSERT INTO ccf02p ... " );

   rtnval = WriteSQL01_Table( &Sql01 );
   if ( rtnval < 0 )
   {
      sprintf( ErrorMsg,
              "Insert CCF02P - Err writing to SQL01 in memory: %d",
               rtnval );
      LogEvent( ErrorMsg, WARN_MSG );
   }

   EXEC SQL INSERT INTO ccf02p
     ( card_type,               
       card_nbr,
       primary_acct_nbr,
       pin_offset,
       caf_profile_id,
       status,     
       date_added,    
       maint_date, 
       changed_by,           
       card_class,          
       expire_date,          
       effect_date,    
       percent_deposit,
       percent_avail_allowed,
       credit_line,
       outstanding_auths,
       allowed,
       country_code,
       currency_code,
       peso_saving_acct,   
       peso_current_acct,  
       dollar_saving_acct, 
       dollar_current_acct,
       product_codes, 
       cash_bonus_eligible,     
       visa_purchase_card, 
       related_acct_type_1,
       related_acct_nbr_1,
       related_acct_type_2,
       related_acct_nbr_2,
       related_acct_type_3,
       related_acct_nbr_3,
       related_acct_type_4,
       related_acct_nbr_4,
       related_acct_type_5,
       related_acct_nbr_5,
       related_acct_type_6,
       related_acct_nbr_6,
       related_acct_type_7,
       related_acct_nbr_7,
       related_acct_type_8,
       related_acct_nbr_8, 
       related_acct_type_9,
       related_acct_nbr_9,
       related_acct_type_10,
       related_acct_nbr_10,
       pin_verification_override,
       pin,
       pvki,
       add_on_rate,
       add_on_term,
       peso_tran_limit,
       dollar_tran_limit
     )               
   VALUES(  :pte_ccf02p.card_type,
            :pte_ccf02p.card_nbr,
            :pte_ccf02p.primary_acct_nbr,
            :pte_ccf02p.pin_offset,
            :pte_ccf02p.caf_profile_id,
            :pte_ccf02p.status,           
            :pte_ccf02p.date_added,           
            :pte_ccf02p.maint_date,           
            :pte_ccf02p.changed_by,           
            :pte_ccf02p.card_class,           
            :pte_ccf02p.expire_date,           
            :pte_ccf02p.effect_date,           
            :pte_ccf02p.percent_deposit,           
            :pte_ccf02p.percent_avail_allowed,           
            :pte_ccf02p.credit_line,           
            :pte_ccf02p.outstanding_auths,           
            :pte_ccf02p.allowed,           
            :pte_ccf02p.country_code,           
            :pte_ccf02p.currency_code,
            :pte_ccf02p.peso_saving_acct,   
            :pte_ccf02p.peso_current_acct,  
            :pte_ccf02p.dollar_saving_acct, 
            :pte_ccf02p.dollar_current_acct,
            :pte_ccf02p.product_codes,   
            :pte_ccf02p.cash_bonus_eligible,   
            :pte_ccf02p.visa_purchase_card,      
            :pte_ccf02p.related_acct_type_1,           
            :pte_ccf02p.related_acct_nbr_1,           
            :pte_ccf02p.related_acct_type_2,           
            :pte_ccf02p.related_acct_nbr_2,           
            :pte_ccf02p.related_acct_type_3,           
            :pte_ccf02p.related_acct_nbr_3,           
            :pte_ccf02p.related_acct_type_4,           
            :pte_ccf02p.related_acct_nbr_4,           
            :pte_ccf02p.related_acct_type_5,           
            :pte_ccf02p.related_acct_nbr_5,           
            :pte_ccf02p.related_acct_type_6,           
            :pte_ccf02p.related_acct_nbr_6,           
            :pte_ccf02p.related_acct_type_7,           
            :pte_ccf02p.related_acct_nbr_7,           
            :pte_ccf02p.related_acct_type_8,           
            :pte_ccf02p.related_acct_nbr_8,           
            :pte_ccf02p.related_acct_type_9,           
            :pte_ccf02p.related_acct_nbr_9,           
            :pte_ccf02p.related_acct_type_10,           
            :pte_ccf02p.related_acct_nbr_10,           
            :pte_ccf02p.pin_verification_override,           
            :pte_ccf02p.pin,
            :pte_ccf02p.pvki,
            :pte_ccf02p.add_on_rate,
            :pte_ccf02p.add_on_term,
            :pte_ccf02p.peso_tran_limit,
            :pte_ccf02p.dollar_tran_limit
      );

   if ( SQLCODE != 0 )
      return( DBTest_oracle_to_pte_rcode( SQLCODE, ErrorMsg ) );

   return PTEMSG_OK;
}
/*************************************************************************************/
/*************************************************************************************/
BYTE db_update_ccf02p( pCCF02P ccf02p_ptr, pCHAR ErrorMsg )
{
   ccf02p_to_db( ccf02p_ptr );
   /*db_ccf02p.pin.len =100;
   memcpy(db_ccf02p.pin.pin_data, pte_ccf02p.pin, sizeof(pte_ccf02p.pin)); */

   /* Log the query into shared memory. */
   memset( &Sql01, 0x00, sizeof(SQL01) );
   strcpy( Sql01.appname, app_name );
   sprintf( Sql01.sqltext,
           "SELECT * INTO :db_ccf02p FROM ccf02p "
           "WHERE card_type = %s AND card_nbr = %s For Update NOWAIT",
            pte_ccf02p.card_type, pte_ccf02p.card_nbr );

   rtnval = WriteSQL01_Table( &Sql01 );
   if ( rtnval < 0 )
   {
      sprintf( ErrorMsg,
              "Select CCF02P NOWAIT Update - Err writing to SQL01 in memory: %d",
               rtnval );
      LogEvent( ErrorMsg, WARN_MSG );
   }

   /* Make sure we can access the record before attempting to update it. */
   EXEC SQL
      SELECT *
      INTO  :db_ccf02p
      FROM   ccf02p
      WHERE  card_type = :pte_ccf02p.card_type
        AND  card_nbr  = :pte_ccf02p.card_nbr
      For Update NOWAIT;

   if (SQLCODE != 0 && SQLCODE != NULL_COLUMN_DATA && SQLCODE != NO_DATA_FOUND)
   {
      /* Record is inaccessible. Return with error. */
      return( DBTest_oracle_to_pte_rcode(SQLCODE, ErrorMsg) );
   }

   /* Log the query into shared memory. */
   memset( &Sql01, 0x00, sizeof(SQL01) );
   strcpy( Sql01.appname, app_name );
   sprintf( Sql01.sqltext,
           "UPDATE ccf02p SET ... "
           "WHERE card_type = %s AND card_nbr = %s",
            pte_ccf02p.card_type, pte_ccf02p.card_nbr );

   rtnval = WriteSQL01_Table( &Sql01 );
   if ( rtnval < 0 )
   {
      sprintf( ErrorMsg,
              "Update CCF02P - Err writing to SQL01 in memory: %d",
               rtnval );
      LogEvent( ErrorMsg, WARN_MSG );
   }

   EXEC SQL UPDATE ccf02p 
   SET card_type                    = :pte_ccf02p.card_type,                              
       card_nbr                     = :pte_ccf02p.card_nbr,
       primary_acct_nbr             = :pte_ccf02p.primary_acct_nbr,
       pin_offset                   = :pte_ccf02p.pin_offset,
       caf_profile_id               = :pte_ccf02p.caf_profile_id,
       status                       = :pte_ccf02p.status,           
       date_added                   = :pte_ccf02p.date_added,           
       maint_date                   = :pte_ccf02p.maint_date,
       changed_by                   = :pte_ccf02p.changed_by,           
       card_class                   = :pte_ccf02p.card_class,           
       expire_date                  = :pte_ccf02p.expire_date,           
       effect_date                  = :pte_ccf02p.effect_date,
       percent_deposit              = :pte_ccf02p.percent_deposit,           
       percent_avail_allowed        = :pte_ccf02p.percent_avail_allowed,           
       credit_line                  = :pte_ccf02p.credit_line,           
       outstanding_auths            = :pte_ccf02p.outstanding_auths,           
       allowed                      = :pte_ccf02p.allowed, 
       country_code                 = :pte_ccf02p.country_code,          
       currency_code                = :pte_ccf02p.currency_code,
       peso_saving_acct             = :pte_ccf02p.peso_saving_acct,    
       peso_current_acct            = :pte_ccf02p.peso_current_acct,  
       dollar_saving_acct           = :pte_ccf02p.dollar_saving_acct, 
       dollar_current_acct          = :pte_ccf02p.dollar_current_acct,
       product_codes                = :pte_ccf02p.product_codes,    
       cash_bonus_eligible          = :pte_ccf02p.cash_bonus_eligible,
       visa_purchase_card           = :pte_ccf02p.visa_purchase_card,    
       related_acct_type_1          = :pte_ccf02p.related_acct_type_1,           
       related_acct_nbr_1           = :pte_ccf02p.related_acct_nbr_1,           
       related_acct_type_2          = :pte_ccf02p.related_acct_type_2,           
       related_acct_nbr_2           = :pte_ccf02p.related_acct_nbr_2,           
       related_acct_type_3          = :pte_ccf02p.related_acct_type_3,           
       related_acct_nbr_3           = :pte_ccf02p.related_acct_nbr_3,           
       related_acct_type_4          = :pte_ccf02p.related_acct_type_4,           
       related_acct_nbr_4           = :pte_ccf02p.related_acct_nbr_4,           
       related_acct_type_5          = :pte_ccf02p.related_acct_type_5,           
       related_acct_nbr_5           = :pte_ccf02p.related_acct_nbr_5,           
       related_acct_type_6          = :pte_ccf02p.related_acct_type_6,           
       related_acct_nbr_6           = :pte_ccf02p.related_acct_nbr_6,           
       related_acct_type_7          = :pte_ccf02p.related_acct_type_7,           
       related_acct_nbr_7           = :pte_ccf02p.related_acct_nbr_7,           
       related_acct_type_8          = :pte_ccf02p.related_acct_type_8,           
       related_acct_nbr_8           = :pte_ccf02p.related_acct_nbr_8,           
       related_acct_type_9          = :pte_ccf02p.related_acct_type_9,           
       related_acct_nbr_9           = :pte_ccf02p.related_acct_nbr_9,           
       related_acct_type_10         = :pte_ccf02p.related_acct_type_10,           
       related_acct_nbr_10          = :pte_ccf02p.related_acct_nbr_10,           
       pin_verification_override    = :pte_ccf02p.pin_verification_override,           
       pin                          = :pte_ccf02p.pin,
       pvki                         = :pte_ccf02p.pvki,
       add_on_rate                  = :pte_ccf02p.add_on_rate,
       add_on_term                  = :pte_ccf02p.add_on_term
                  
   WHERE card_type = :pte_ccf02p.card_type AND card_nbr = :pte_ccf02p.card_nbr;
       
   if ( SQLCODE != 0 )
      return( DBTest_oracle_to_pte_rcode( SQLCODE, ErrorMsg ) );

   return PTEMSG_OK;
}

/*************************************************************************************/
/*************************************************************************************/
BYTE db_insert_ccf03p( pCCF03 ccf03p_ptr, pCHAR ErrorMsg )
{
   ccf03p_to_db( ccf03p_ptr );

   /* Log the query into shared memory. */
   memset( &Sql01, 0x00, sizeof(SQL01) );
   strcpy( Sql01.appname, app_name );
   strcpy( Sql01.sqltext, "INSERT INTO ccf03p ... " );

   rtnval = WriteSQL01_Table( &Sql01 );
   if ( rtnval < 0 )
   {
      sprintf( ErrorMsg,
              "Insert CCF03P - Err writing to SQL01 in memory: %d",
               rtnval );
      LogEvent( ErrorMsg, WARN_MSG );
   }

   EXEC SQL INSERT INTO ccf03p
     ( card_type,
       card_nbr,
        primary_acct_nbr,
        daily_amt_usage,
        julian_date,
        
        peso_julian_date,        
      dollar_julian_date,      
      peso_usage1_nbr_usage,   
      peso_usage1_amt_usage,   
      peso_usage2_nbr_usage,   
      peso_usage2_amt_usage,   
      peso_usage3_nbr_usage,   
      peso_usage3_amt_usage,   
      peso_usage4_nbr_usage,   
      peso_usage4_amt_usage,   
      peso_usage5_nbr_usage,   
      peso_usage5_amt_usage,   
      peso_usage6_nbr_usage,   
      peso_usage6_amt_usage,   
      peso_usage7_nbr_usage,   
      peso_usage7_amt_usage,   
      peso_usage8_nbr_usage,   
      peso_usage8_amt_usage,   
      peso_usage9_nbr_usage,   
      peso_usage9_amt_usage,   
      peso_usage10_nbr_usage,  
      peso_usage10_amt_usage,  
      peso_usage11_nbr_usage,  
      peso_usage11_amt_usage,  
      peso_usage12_nbr_usage,  
      peso_usage12_amt_usage,  
      peso_usage13_nbr_usage,  
      peso_usage13_amt_usage,  
      peso_usage14_nbr_usage,  
      peso_usage14_amt_usage,
      dollar_usage1_nbr_usage, 
      dollar_usage1_amt_usage, 
      dollar_usage2_nbr_usage, 
      dollar_usage2_amt_usage, 
      dollar_usage3_nbr_usage, 
      dollar_usage3_amt_usage, 
      dollar_usage4_nbr_usage, 
      dollar_usage4_amt_usage, 
      dollar_usage5_nbr_usage, 
      dollar_usage5_amt_usage, 
      dollar_usage6_nbr_usage, 
      dollar_usage6_amt_usage, 
      dollar_usage7_nbr_usage, 
      dollar_usage7_amt_usage, 
      dollar_usage8_nbr_usage, 
      dollar_usage8_amt_usage, 
      dollar_usage9_nbr_usage, 
      dollar_usage9_amt_usage, 
      dollar_usage10_nbr_usage,
      dollar_usage10_amt_usage,
      dollar_usage11_nbr_usage,
      dollar_usage11_amt_usage,
      dollar_usage12_nbr_usage,
      dollar_usage12_amt_usage,
      dollar_usage13_nbr_usage,
      dollar_usage13_amt_usage,
        dollar_usage14_nbr_usage,
        dollar_usage14_amt_usage,
        failed_pin_attempts,
        date_added,
        last_maint,
        status,
        mcc1_code,
        mcc1_usage,
        mcc2_code,
        mcc2_usage,
        mcc3_code,
        mcc3_usage,
        mcc4_code,
        mcc4_usage,
        mcc5_code,
        mcc5_usage,
        mcc6_code,
        mcc6_usage,
        mcc7_code,
        mcc7_usage,
        mcc8_code,
        mcc8_usage,
        mcc9_code,
        mcc9_usage,
        mcc10_code,
        mcc10_usage,
        mcc11_code,
        mcc11_usage,
        mcc12_code,
        mcc12_usage,
        mcc13_code,
        mcc13_usage,
        mcc14_code,
        mcc14_usage,
        mcc15_code,
        mcc15_usage,
        mcc16_code,
        mcc16_usage,
        mcc17_code,
        mcc17_usage,
        mcc18_code,
        mcc18_usage,
        mcc19_code,
        mcc19_usage,
        mcc20_code,
        mcc20_usage,
        repeat1_merchant_id,
        repeat1_nbr_uses,
        repeat2_merchant_id,
        repeat2_nbr_uses,
        repeat3_merchant_id,
        repeat3_nbr_uses,
        repeat4_merchant_id,
        repeat4_nbr_uses,
        repeat5_merchant_id,
        repeat5_nbr_uses,
        repeat6_merchant_id,
        repeat6_nbr_uses,
        repeat7_merchant_id,
        repeat7_nbr_uses,
        repeat8_merchant_id,
        repeat8_nbr_uses,
        repeat9_merchant_id,
        repeat9_nbr_uses,
        repeat10_merchant_id,
        repeat10_nbr_uses,
        repeat11_merchant_id,
        repeat11_nbr_uses,
        repeat12_merchant_id,
        repeat12_nbr_uses,
        repeat13_merchant_id,
        repeat13_nbr_uses,
        repeat14_merchant_id,
        repeat14_nbr_uses,
        repeat15_merchant_id,
        repeat15_nbr_uses,
        repeat16_merchant_id,
        repeat16_nbr_uses,
        repeat17_merchant_id,
        repeat17_nbr_uses,
        repeat18_merchant_id,
        repeat18_nbr_uses,
        repeat19_merchant_id,
        repeat19_nbr_uses,
        repeat20_merchant_id,
        repeat20_nbr_uses
     )     
   VALUES(  :pte_ccf03p.card_type,
       :pte_ccf03p.card_nbr,
       :pte_ccf03p.primary_acct_nbr,
       :pte_ccf03p.daily_amt_usage,
       :pte_ccf03p.julian_date,
       :pte_ccf03p.peso_julian_date,         
       :pte_ccf03p.dollar_julian_date,       
       :pte_ccf03p.peso_usage1_nbr_usage,    
       :pte_ccf03p.peso_usage1_amt_usage,    
       :pte_ccf03p.peso_usage2_nbr_usage,    
       :pte_ccf03p.peso_usage2_amt_usage,    
       :pte_ccf03p.peso_usage3_nbr_usage,    
       :pte_ccf03p.peso_usage3_amt_usage,    
       :pte_ccf03p.peso_usage4_nbr_usage,    
       :pte_ccf03p.peso_usage4_amt_usage,    
       :pte_ccf03p.peso_usage5_nbr_usage,    
       :pte_ccf03p.peso_usage5_amt_usage,    
       :pte_ccf03p.peso_usage6_nbr_usage,    
       :pte_ccf03p.peso_usage6_amt_usage,    
       :pte_ccf03p.peso_usage7_nbr_usage,    
       :pte_ccf03p.peso_usage7_amt_usage,    
       :pte_ccf03p.peso_usage8_nbr_usage,    
       :pte_ccf03p.peso_usage8_amt_usage,    
       :pte_ccf03p.peso_usage9_nbr_usage,    
       :pte_ccf03p.peso_usage9_amt_usage,    
       :pte_ccf03p.peso_usage10_nbr_usage,   
       :pte_ccf03p.peso_usage10_amt_usage,   
       :pte_ccf03p.peso_usage11_nbr_usage,   
       :pte_ccf03p.peso_usage11_amt_usage,   
       :pte_ccf03p.peso_usage12_nbr_usage,   
       :pte_ccf03p.peso_usage12_amt_usage,   
       :pte_ccf03p.peso_usage13_nbr_usage,   
       :pte_ccf03p.peso_usage13_amt_usage,   
       :pte_ccf03p.peso_usage14_nbr_usage,   
       :pte_ccf03p.peso_usage14_amt_usage,       
       :pte_ccf03p.dollar_usage1_nbr_usage,  
       :pte_ccf03p.dollar_usage1_amt_usage,  
       :pte_ccf03p.dollar_usage2_nbr_usage,  
       :pte_ccf03p.dollar_usage2_amt_usage,  
       :pte_ccf03p.dollar_usage3_nbr_usage,  
       :pte_ccf03p.dollar_usage3_amt_usage,  
       :pte_ccf03p.dollar_usage4_nbr_usage,  
       :pte_ccf03p.dollar_usage4_amt_usage,  
       :pte_ccf03p.dollar_usage5_nbr_usage,  
       :pte_ccf03p.dollar_usage5_amt_usage,  
       :pte_ccf03p.dollar_usage6_nbr_usage,  
       :pte_ccf03p.dollar_usage6_amt_usage,  
       :pte_ccf03p.dollar_usage7_nbr_usage,  
       :pte_ccf03p.dollar_usage7_amt_usage,  
       :pte_ccf03p.dollar_usage8_nbr_usage,  
       :pte_ccf03p.dollar_usage8_amt_usage,  
       :pte_ccf03p.dollar_usage9_nbr_usage,  
       :pte_ccf03p.dollar_usage9_amt_usage,  
       :pte_ccf03p.dollar_usage10_nbr_usage, 
       :pte_ccf03p.dollar_usage10_amt_usage, 
       :pte_ccf03p.dollar_usage11_nbr_usage, 
       :pte_ccf03p.dollar_usage11_amt_usage, 
       :pte_ccf03p.dollar_usage12_nbr_usage, 
       :pte_ccf03p.dollar_usage12_amt_usage, 
       :pte_ccf03p.dollar_usage13_nbr_usage, 
       :pte_ccf03p.dollar_usage13_amt_usage, 
       :pte_ccf03p.dollar_usage14_nbr_usage, 
       :pte_ccf03p.dollar_usage14_amt_usage, 
       :pte_ccf03p.failed_pin_attempts,
       :pte_ccf03p.date_added,
       :pte_ccf03p.last_maint,
       :pte_ccf03p.status,
       :pte_ccf03p.mcc1_code,
       :pte_ccf03p.mcc1_usage,
       :pte_ccf03p.mcc2_code,
       :pte_ccf03p.mcc2_usage,
       :pte_ccf03p.mcc3_code,
       :pte_ccf03p.mcc3_usage,
       :pte_ccf03p.mcc4_code,
       :pte_ccf03p.mcc4_usage,
       :pte_ccf03p.mcc5_code,
       :pte_ccf03p.mcc5_usage,
       :pte_ccf03p.mcc6_code,
       :pte_ccf03p.mcc6_usage,
       :pte_ccf03p.mcc7_code,
       :pte_ccf03p.mcc7_usage,
       :pte_ccf03p.mcc8_code,
       :pte_ccf03p.mcc8_usage,
       :pte_ccf03p.mcc9_code,
       :pte_ccf03p.mcc9_usage,
       :pte_ccf03p.mcc10_code,
       :pte_ccf03p.mcc10_usage,
       :pte_ccf03p.mcc11_code,
       :pte_ccf03p.mcc11_usage,
       :pte_ccf03p.mcc12_code,
       :pte_ccf03p.mcc12_usage,
       :pte_ccf03p.mcc13_code,
       :pte_ccf03p.mcc13_usage,
       :pte_ccf03p.mcc14_code,
       :pte_ccf03p.mcc14_usage,
       :pte_ccf03p.mcc15_code,
       :pte_ccf03p.mcc15_usage,
       :pte_ccf03p.mcc16_code,
       :pte_ccf03p.mcc16_usage,
       :pte_ccf03p.mcc17_code,
       :pte_ccf03p.mcc17_usage,
       :pte_ccf03p.mcc18_code,
       :pte_ccf03p.mcc18_usage,
       :pte_ccf03p.mcc19_code,
       :pte_ccf03p.mcc19_usage,
       :pte_ccf03p.mcc20_code,
       :pte_ccf03p.mcc20_usage,
       :pte_ccf03p.repeat1_merchant_id,
       :pte_ccf03p.repeat1_nbr_uses,
       :pte_ccf03p.repeat2_merchant_id,
       :pte_ccf03p.repeat2_nbr_uses,
       :pte_ccf03p.repeat3_merchant_id,
       :pte_ccf03p.repeat3_nbr_uses,
       :pte_ccf03p.repeat4_merchant_id,
       :pte_ccf03p.repeat4_nbr_uses,
       :pte_ccf03p.repeat5_merchant_id,
       :pte_ccf03p.repeat5_nbr_uses,
       :pte_ccf03p.repeat6_merchant_id,
       :pte_ccf03p.repeat6_nbr_uses,
       :pte_ccf03p.repeat7_merchant_id,
       :pte_ccf03p.repeat7_nbr_uses,
       :pte_ccf03p.repeat8_merchant_id,
       :pte_ccf03p.repeat8_nbr_uses,
       :pte_ccf03p.repeat9_merchant_id,
       :pte_ccf03p.repeat9_nbr_uses,
       :pte_ccf03p.repeat10_merchant_id,
       :pte_ccf03p.repeat10_nbr_uses,
       :pte_ccf03p.repeat11_merchant_id,
       :pte_ccf03p.repeat11_nbr_uses,
       :pte_ccf03p.repeat12_merchant_id,
       :pte_ccf03p.repeat12_nbr_uses,
       :pte_ccf03p.repeat13_merchant_id,
       :pte_ccf03p.repeat13_nbr_uses,
       :pte_ccf03p.repeat14_merchant_id,
       :pte_ccf03p.repeat14_nbr_uses,
       :pte_ccf03p.repeat15_merchant_id,
       :pte_ccf03p.repeat15_nbr_uses,
       :pte_ccf03p.repeat16_merchant_id,
       :pte_ccf03p.repeat16_nbr_uses,
       :pte_ccf03p.repeat17_merchant_id,
       :pte_ccf03p.repeat17_nbr_uses,
       :pte_ccf03p.repeat18_merchant_id,
       :pte_ccf03p.repeat18_nbr_uses,
       :pte_ccf03p.repeat19_merchant_id,
       :pte_ccf03p.repeat19_nbr_uses,
       :pte_ccf03p.repeat20_merchant_id,
       :pte_ccf03p.repeat20_nbr_uses
      );

   if ( SQLCODE != 0 )
   {  
      return( DBTest_oracle_to_pte_rcode( SQLCODE, ErrorMsg ) );
   }

   return PTEMSG_OK;
}
/*************************************************************************************/
/*************************************************************************************/
BYTE db_update_ccf03p( pCCF03 ccf03p_ptr, pCHAR ErrorMsg )
{
   ccf03p_to_db( ccf03p_ptr );

   /* Log the query into shared memory. */
   memset( &Sql01, 0x00, sizeof(SQL01) );
   strcpy( Sql01.appname, app_name );
   sprintf( Sql01.sqltext,
           "SELECT * INTO :db_ccf03p FROM ccf03p "
           "WHERE card_type = %s AND card_nbr = %s For Update NOWAIT",
            pte_ccf03p.card_type, pte_ccf03p.card_nbr );

   rtnval = WriteSQL01_Table( &Sql01 );
   if ( rtnval < 0 )
   {
      sprintf( ErrorMsg,
              "Select CCF03P NOWAIT Update - Err writing to SQL01 in memory: %d",
               rtnval );
      LogEvent( ErrorMsg, WARN_MSG );
   }

   /* Make sure we can access the record before attempting to update it. */
   EXEC SQL
      SELECT *
      INTO  :db_ccf03p
      FROM   ccf03p
      WHERE  card_type = :pte_ccf03p.card_type
        AND  card_nbr  = :pte_ccf03p.card_nbr
      For Update NOWAIT;

   if (SQLCODE != 0 && SQLCODE != NULL_COLUMN_DATA && SQLCODE != NO_DATA_FOUND)
   {
      /* Record is inaccessible. Return with error. */
      return( DBTest_oracle_to_pte_rcode(SQLCODE, ErrorMsg) );
   }

   /* Log the query into shared memory. */
   memset( &Sql01, 0x00, sizeof(SQL01) );
   strcpy( Sql01.appname, app_name );
   sprintf( Sql01.sqltext,
           "UPDATE ccf03p SET ... "
           "WHERE card_type = %s AND card_nbr = %s",
            pte_ccf03p.card_type, pte_ccf03p.card_nbr );

   rtnval = WriteSQL01_Table( &Sql01 );
   if ( rtnval < 0 )
   {
      sprintf( ErrorMsg,
              "Update CCF03P - Err writing to SQL01 in memory: %d",
               rtnval );
      LogEvent( ErrorMsg, WARN_MSG );
   }

   EXEC SQL UPDATE ccf03p 
   SET card_type                    = :pte_ccf03p.card_type,
        card_nbr                    = :pte_ccf03p.card_nbr,
        primary_acct_nbr            = :pte_ccf03p.primary_acct_nbr,
        daily_amt_usage             = :pte_ccf03p.daily_amt_usage,
        julian_date                 = :pte_ccf03p.julian_date,

        peso_julian_date            = :pte_ccf03p.peso_julian_date,               
        dollar_julian_date          = :pte_ccf03p.dollar_julian_date,           
        peso_usage1_nbr_usage       = :pte_ccf03p.peso_usage1_nbr_usage,    
        peso_usage1_amt_usage       = :pte_ccf03p.peso_usage1_amt_usage,    
        peso_usage2_nbr_usage       = :pte_ccf03p.peso_usage2_nbr_usage,    
        peso_usage2_amt_usage       = :pte_ccf03p.peso_usage2_amt_usage,    
        peso_usage3_nbr_usage       = :pte_ccf03p.peso_usage3_nbr_usage,    
        peso_usage3_amt_usage       = :pte_ccf03p.peso_usage3_amt_usage,    
        peso_usage4_nbr_usage       = :pte_ccf03p.peso_usage4_nbr_usage,    
        peso_usage4_amt_usage       = :pte_ccf03p.peso_usage4_amt_usage,    
        peso_usage5_nbr_usage       = :pte_ccf03p.peso_usage5_nbr_usage,    
        peso_usage5_amt_usage       = :pte_ccf03p.peso_usage5_amt_usage,    
        peso_usage6_nbr_usage       = :pte_ccf03p.peso_usage6_nbr_usage,    
        peso_usage6_amt_usage       = :pte_ccf03p.peso_usage6_amt_usage,    
        peso_usage7_nbr_usage       = :pte_ccf03p.peso_usage7_nbr_usage,    
        peso_usage7_amt_usage       = :pte_ccf03p.peso_usage7_amt_usage,    
        peso_usage8_nbr_usage       = :pte_ccf03p.peso_usage8_nbr_usage,    
        peso_usage8_amt_usage       = :pte_ccf03p.peso_usage8_amt_usage,    
        peso_usage9_nbr_usage       = :pte_ccf03p.peso_usage9_nbr_usage,    
        peso_usage9_amt_usage       = :pte_ccf03p.peso_usage9_amt_usage,    
        peso_usage10_nbr_usage      = :pte_ccf03p.peso_usage10_nbr_usage,   
        peso_usage10_amt_usage      = :pte_ccf03p.peso_usage10_amt_usage,   
        peso_usage11_nbr_usage      = :pte_ccf03p.peso_usage11_nbr_usage,   
        peso_usage11_amt_usage      = :pte_ccf03p.peso_usage11_amt_usage,   
        peso_usage12_nbr_usage      = :pte_ccf03p.peso_usage12_nbr_usage,   
        peso_usage12_amt_usage      = :pte_ccf03p.peso_usage12_amt_usage,   
        peso_usage13_nbr_usage      = :pte_ccf03p.peso_usage13_nbr_usage,   
        peso_usage13_amt_usage      = :pte_ccf03p.peso_usage13_amt_usage,   
        peso_usage14_nbr_usage      = :pte_ccf03p.peso_usage14_nbr_usage,   
        peso_usage14_amt_usage      = :pte_ccf03p.peso_usage14_amt_usage,   

        dollar_usage1_nbr_usage     = :pte_ccf03p.dollar_usage1_nbr_usage,  
        dollar_usage1_amt_usage     = :pte_ccf03p.dollar_usage1_amt_usage,  
        dollar_usage2_nbr_usage     = :pte_ccf03p.dollar_usage2_nbr_usage,  
        dollar_usage2_amt_usage     = :pte_ccf03p.dollar_usage2_amt_usage,  
        dollar_usage3_nbr_usage     = :pte_ccf03p.dollar_usage3_nbr_usage,  
        dollar_usage3_amt_usage     = :pte_ccf03p.dollar_usage3_amt_usage,  
        dollar_usage4_nbr_usage     = :pte_ccf03p.dollar_usage4_nbr_usage,  
        dollar_usage4_amt_usage     = :pte_ccf03p.dollar_usage4_amt_usage,  
        dollar_usage5_nbr_usage     = :pte_ccf03p.dollar_usage5_nbr_usage,  
        dollar_usage5_amt_usage     = :pte_ccf03p.dollar_usage5_amt_usage,  
        dollar_usage6_nbr_usage     = :pte_ccf03p.dollar_usage6_nbr_usage,  
        dollar_usage6_amt_usage     = :pte_ccf03p.dollar_usage6_amt_usage,  
        dollar_usage7_nbr_usage     = :pte_ccf03p.dollar_usage7_nbr_usage,  
        dollar_usage7_amt_usage     = :pte_ccf03p.dollar_usage7_amt_usage,  
        dollar_usage8_nbr_usage     = :pte_ccf03p.dollar_usage8_nbr_usage,  
        dollar_usage8_amt_usage     = :pte_ccf03p.dollar_usage8_amt_usage,  
        dollar_usage9_nbr_usage     = :pte_ccf03p.dollar_usage9_nbr_usage,  
        dollar_usage9_amt_usage     = :pte_ccf03p.dollar_usage9_amt_usage,  
        dollar_usage10_nbr_usage    = :pte_ccf03p.dollar_usage10_nbr_usage, 
        dollar_usage10_amt_usage    = :pte_ccf03p.dollar_usage10_amt_usage, 
        dollar_usage11_nbr_usage    = :pte_ccf03p.dollar_usage11_nbr_usage, 
        dollar_usage11_amt_usage    = :pte_ccf03p.dollar_usage11_amt_usage, 
        dollar_usage12_nbr_usage    = :pte_ccf03p.dollar_usage12_nbr_usage, 
        dollar_usage12_amt_usage    = :pte_ccf03p.dollar_usage12_amt_usage, 
        dollar_usage13_nbr_usage    = :pte_ccf03p.dollar_usage13_nbr_usage, 
        dollar_usage13_amt_usage    = :pte_ccf03p.dollar_usage13_amt_usage, 
        dollar_usage14_nbr_usage    = :pte_ccf03p.dollar_usage14_nbr_usage, 
        dollar_usage14_amt_usage    = :pte_ccf03p.dollar_usage14_amt_usage, 

        failed_pin_attempts         = :pte_ccf03p.failed_pin_attempts,
        date_added                  = :pte_ccf03p.date_added,
        last_maint                  = :pte_ccf03p.last_maint,
        status                      = :pte_ccf03p.status,
        mcc1_code                   = :pte_ccf03p.mcc1_code,
        mcc1_usage                  = :pte_ccf03p.mcc1_usage,
        mcc2_code                   = :pte_ccf03p.mcc2_code,
        mcc2_usage                  = :pte_ccf03p.mcc2_usage,
        mcc3_code                   = :pte_ccf03p.mcc3_code,
        mcc3_usage                  = :pte_ccf03p.mcc3_usage,
        mcc4_code                   = :pte_ccf03p.mcc4_code,
        mcc4_usage                  = :pte_ccf03p.mcc4_usage,
        mcc5_code                   = :pte_ccf03p.mcc5_code,
        mcc5_usage                  = :pte_ccf03p.mcc5_usage,
        mcc6_code                   = :pte_ccf03p.mcc6_code,
        mcc6_usage                  = :pte_ccf03p.mcc6_usage,
        mcc7_code                   = :pte_ccf03p.mcc7_code,
        mcc7_usage                  = :pte_ccf03p.mcc7_usage,
        mcc8_code                   = :pte_ccf03p.mcc8_code,
        mcc8_usage                  = :pte_ccf03p.mcc8_usage,
        mcc9_code                   = :pte_ccf03p.mcc9_code,
        mcc9_usage                  = :pte_ccf03p.mcc9_usage,
        mcc10_code                  = :pte_ccf03p.mcc10_code,
        mcc10_usage                 = :pte_ccf03p.mcc10_usage,
        mcc11_code                  = :pte_ccf03p.mcc11_code,
        mcc11_usage                 = :pte_ccf03p.mcc11_usage,
        mcc12_code                  = :pte_ccf03p.mcc12_code,
        mcc12_usage                 = :pte_ccf03p.mcc12_usage,
        mcc13_code                  = :pte_ccf03p.mcc13_code,
        mcc13_usage                 = :pte_ccf03p.mcc13_usage,
        mcc14_code                  = :pte_ccf03p.mcc14_code,
        mcc14_usage                 = :pte_ccf03p.mcc14_usage,
        mcc15_code                  = :pte_ccf03p.mcc15_code,
        mcc15_usage                 = :pte_ccf03p.mcc15_usage,
        mcc16_code                  = :pte_ccf03p.mcc16_code,
        mcc16_usage                 = :pte_ccf03p.mcc16_usage,
        mcc17_code                  = :pte_ccf03p.mcc17_code,
        mcc17_usage                 = :pte_ccf03p.mcc17_usage,
        mcc18_code                  = :pte_ccf03p.mcc18_code,
        mcc18_usage                 = :pte_ccf03p.mcc18_usage,
        mcc19_code                  = :pte_ccf03p.mcc19_code,
        mcc19_usage                 = :pte_ccf03p.mcc19_usage,
        mcc20_code                  = :pte_ccf03p.mcc20_code,
        mcc20_usage                 = :pte_ccf03p.mcc20_usage,

        repeat1_merchant_id         = :pte_ccf03p.repeat1_merchant_id,
        repeat1_nbr_uses            = :pte_ccf03p.repeat1_nbr_uses,
        repeat2_merchant_id         = :pte_ccf03p.repeat2_merchant_id,
        repeat2_nbr_uses            = :pte_ccf03p.repeat2_nbr_uses,
        repeat3_merchant_id         = :pte_ccf03p.repeat3_merchant_id,
        repeat3_nbr_uses            = :pte_ccf03p.repeat3_nbr_uses,
        repeat4_merchant_id         = :pte_ccf03p.repeat4_merchant_id,
        repeat4_nbr_uses            = :pte_ccf03p.repeat4_nbr_uses,
        repeat5_merchant_id         = :pte_ccf03p.repeat5_merchant_id,
        repeat5_nbr_uses            = :pte_ccf03p.repeat5_nbr_uses,
        repeat6_merchant_id         = :pte_ccf03p.repeat6_merchant_id,
        repeat6_nbr_uses            = :pte_ccf03p.repeat6_nbr_uses,
        repeat7_merchant_id         = :pte_ccf03p.repeat7_merchant_id,
        repeat7_nbr_uses            = :pte_ccf03p.repeat7_nbr_uses,
        repeat8_merchant_id         = :pte_ccf03p.repeat8_merchant_id,
        repeat8_nbr_uses            = :pte_ccf03p.repeat8_nbr_uses,
        repeat9_merchant_id         = :pte_ccf03p.repeat9_merchant_id,
        repeat9_nbr_uses            = :pte_ccf03p.repeat9_nbr_uses,
        repeat10_merchant_id        = :pte_ccf03p.repeat10_merchant_id,
        repeat10_nbr_uses           = :pte_ccf03p.repeat10_nbr_uses,
        repeat11_merchant_id        = :pte_ccf03p.repeat11_merchant_id,
        repeat11_nbr_uses           = :pte_ccf03p.repeat11_nbr_uses,
        repeat12_merchant_id        = :pte_ccf03p.repeat12_merchant_id,
        repeat12_nbr_uses           = :pte_ccf03p.repeat12_nbr_uses,
        repeat13_merchant_id        = :pte_ccf03p.repeat13_merchant_id,
        repeat13_nbr_uses           = :pte_ccf03p.repeat13_nbr_uses,
        repeat14_merchant_id        = :pte_ccf03p.repeat14_merchant_id,
        repeat14_nbr_uses           = :pte_ccf03p.repeat14_nbr_uses,
        repeat15_merchant_id        = :pte_ccf03p.repeat15_merchant_id,
        repeat15_nbr_uses           = :pte_ccf03p.repeat15_nbr_uses,
        repeat16_merchant_id        = :pte_ccf03p.repeat16_merchant_id,
        repeat16_nbr_uses           = :pte_ccf03p.repeat16_nbr_uses,
        repeat17_merchant_id        = :pte_ccf03p.repeat17_merchant_id,
        repeat17_nbr_uses           = :pte_ccf03p.repeat17_nbr_uses,
        repeat18_merchant_id        = :pte_ccf03p.repeat18_merchant_id,
        repeat18_nbr_uses           = :pte_ccf03p.repeat18_nbr_uses,
        repeat19_merchant_id        = :pte_ccf03p.repeat19_merchant_id,
        repeat19_nbr_uses           = :pte_ccf03p.repeat19_nbr_uses,
        repeat20_merchant_id        = :pte_ccf03p.repeat20_merchant_id,
        repeat20_nbr_uses           = :pte_ccf03p.repeat20_nbr_uses
                  
   WHERE card_type = :pte_ccf03p.card_type AND card_nbr = :pte_ccf03p.card_nbr;
       
   if ( SQLCODE != 0 )
      return( DBTest_oracle_to_pte_rcode( SQLCODE, ErrorMsg ) );

   return PTEMSG_OK;
}
/*************************************************************************************/
/*************************************************************************************/
BYTE db_insert_acf01( pACF01 acf01_ptr, pCHAR ErrorMsg )
{
   acf01_to_db( acf01_ptr );

   /* Log the query into shared memory. */
   memset( &Sql01, 0x00, sizeof(SQL01) );
   strcpy( Sql01.appname, app_name );
   strcpy( Sql01.sqltext, "INSERT INTO acf01 ... " );

   rtnval = WriteSQL01_Table( &Sql01 );
   if ( rtnval < 0 )
   {
      sprintf( ErrorMsg,
              "Insert ACF01 - Err writing to SQL01 in memory: %d",
               rtnval );
      LogEvent( ErrorMsg, WARN_MSG );
   }

   EXEC SQL INSERT INTO acf01
     (  account_type,
        account_nbr,
        status,
        date_added,
        maint_date,
        changed_by,
        credit_limit,
        available,
        outstanding,
        ledger_balance,
        cash_limit,      
        cash_available,  
        cash_outstanding
     )               
   VALUES(  :pte_acf01.account_type,
       :pte_acf01.account_nbr,
       :pte_acf01.status,
       :pte_acf01.date_added,
       :pte_acf01.maint_date,
       :pte_acf01.changed_by,
       :pte_acf01.credit_limit,
       :pte_acf01.available,
       :pte_acf01.outstanding,
       :pte_acf01.ledger_balance,
       :pte_acf01.cash_limit,      
       :pte_acf01.cash_available,  
       :pte_acf01.cash_outstanding
      );

   if ( SQLCODE != 0 )
      return( DBTest_oracle_to_pte_rcode( SQLCODE, ErrorMsg ) );

   return PTEMSG_OK;
}
/*************************************************************************************/
/*************************************************************************************/
BYTE db_update_acf01( pACF01 acf01_ptr, pCHAR ErrorMsg )
{
   acf01_to_db( acf01_ptr );

   /* Log the query into shared memory. */
   memset( &Sql01, 0x00, sizeof(SQL01) );
   strcpy( Sql01.appname, app_name );
   sprintf( Sql01.sqltext,
           "SELECT * INTO :db_acf01 FROM acf01 "
           "WHERE account_type = %s AND account_nbr = %s For Update NOWAIT",
            pte_acf01.account_type, pte_acf01.account_nbr );

   rtnval = WriteSQL01_Table( &Sql01 );
   if ( rtnval < 0 )
   {
      sprintf( ErrorMsg,
              "Select ACF01 NOWAIT Update - Err writing to SQL01 in memory: %d",
               rtnval );
      LogEvent( ErrorMsg, WARN_MSG );
   }

   /* Make sure we can access the record before attempting to update it. */
   EXEC SQL
      SELECT *
      INTO  :db_acf01
      FROM   ACF01
      WHERE  account_type = :pte_acf01.account_type
        AND  account_nbr  = :pte_acf01.account_nbr
      For Update NOWAIT;

   if (SQLCODE != 0 && SQLCODE != NULL_COLUMN_DATA && SQLCODE != NO_DATA_FOUND)
   {
      /* Record is inaccessible. Return with error. */
      return( DBTest_oracle_to_pte_rcode(SQLCODE, ErrorMsg) );
   }

   /* Log the query into shared memory. */
   memset( &Sql01, 0x00, sizeof(SQL01) );
   strcpy( Sql01.appname, app_name );
   sprintf( Sql01.sqltext,
           "UPDATE acf01 SET ... "
           "WHERE account_type = %s AND account_nbr = %s",
            pte_acf01.account_type, pte_acf01.account_nbr );

   rtnval = WriteSQL01_Table( &Sql01 );
   if ( rtnval < 0 )
   {
      sprintf( ErrorMsg,
              "Update ACF01 - Err writing to SQL01 in memory: %d",
               rtnval );
      LogEvent( ErrorMsg, WARN_MSG );
   }

   EXEC SQL UPDATE acf01 
   SET  account_type                         = :pte_acf01.account_type,
        account_nbr                          = :pte_acf01.account_nbr,
        status                               = :pte_acf01.status,
        date_added                           = :pte_acf01.date_added,
        maint_date                           = :pte_acf01.maint_date,
        changed_by                           = :pte_acf01.changed_by,
        credit_limit                         = :pte_acf01.credit_limit,
        available                            = :pte_acf01.available,
        outstanding                          = :pte_acf01.outstanding,
        ledger_balance                       = :pte_acf01.ledger_balance,
        cash_limit                           = :pte_acf01.cash_limit,           
        cash_available                       = :pte_acf01.cash_available,       
        cash_outstanding                     = :pte_acf01.cash_outstanding     
                  
   WHERE account_type = :pte_acf01.account_type AND account_nbr = :pte_acf01.account_nbr;
       
   if ( SQLCODE != 0 )
      return( DBTest_oracle_to_pte_rcode( SQLCODE, ErrorMsg ) );

   return PTEMSG_OK;
}
/*************************************************************************************/
/*************************************************************************************/
BYTE db_insert_paf01( pPAF01 paf01_ptr, pCHAR ErrorMsg )
{
   paf01_to_db( paf01_ptr );

   /* Log the query into shared memory. */
   memset( &Sql01, 0x00, sizeof(SQL01) );
   strcpy( Sql01.appname, app_name );
   strcpy( Sql01.sqltext, "INSERT INTO paf01 ... " );

   rtnval = WriteSQL01_Table( &Sql01 );
   if ( rtnval < 0 )
   {
      sprintf( ErrorMsg,
              "Insert PAF01 - Err writing to SQL01 in memory: %d",
               rtnval );
      LogEvent( ErrorMsg, WARN_MSG );
   }

   EXEC SQL INSERT INTO paf01
     (  primary_acct_nbr,
        name_dba, address1, address2, city, state, zip_code, home_phone, work_phone,
        status, caf_profile_id, type, corp_acct_nbr,block_status,  account_name, 
        past_due_amount, min_pay_code  ,  Credit_limit,Custr_nbr,APP_Source,COMP_Name	 
     )               
   VALUES(  :pte_paf01.primary_acct_nbr, :pte_paf01.name_dba, :pte_paf01.address1, :pte_paf01.address2,
            :pte_paf01.city, :pte_paf01.state, :pte_paf01.zip_code, :pte_paf01.home_phone, :pte_paf01.work_phone,
            :pte_paf01.status, :pte_paf01.caf_profile_id, :pte_paf01.type,  
            :pte_paf01.corp_acct_nbr, :pte_paf01.block_status,:pte_paf01.account_name, 
            :pte_paf01.past_due_amount, :pte_paf01.min_pay_code  ,:pte_paf01.Credit_limit,:pte_paf01.Custr_nbr	,
            :pte_paf01.APP_Source,:pte_paf01.COMP_Name	   
      );

   if ( SQLCODE != 0 ) 
      return( DBTest_oracle_to_pte_rcode( SQLCODE, ErrorMsg ) );

   return PTEMSG_OK;
}
/*************************************************************************************/
/*************************************************************************************/
BYTE db_update_paf01( pPAF01 paf01_ptr, pCHAR ErrorMsg )
{
   paf01_to_db( paf01_ptr );
   /* Log the query into shared memory. */
   memset( &Sql01, 0x00, sizeof(SQL01) );
   strcpy( Sql01.appname, app_name );
   sprintf( Sql01.sqltext,
           "SELECT * INTO :db_paf01 FROM PAF01 "
           "WHERE primary_acct_nbr = %s For Update NOWAIT",
            pte_paf01.primary_acct_nbr );

   rtnval = WriteSQL01_Table( &Sql01 );
   if ( rtnval < 0 )
   {
      sprintf( ErrorMsg,
              "Select PAF01 NOWAIT - Err writing to SQL01 in memory: %d",
               rtnval );
      LogEvent( ErrorMsg, WARN_MSG );
   }
   /* Make sure we can access the record before attempting to update it. */
   EXEC SQL
      SELECT *
      INTO  :db_paf01
      FROM   PAF01
      WHERE  primary_acct_nbr = :pte_paf01.primary_acct_nbr
      For Update NOWAIT;

   if (SQLCODE != 0 && SQLCODE != NULL_COLUMN_DATA && SQLCODE != NO_DATA_FOUND)
   {
      /* Record is inaccessible. Return with error. */
      return( DBTest_oracle_to_pte_rcode(SQLCODE, ErrorMsg) );
   }
   /* Log the query into shared memory. */
   memset( &Sql01, 0x00, sizeof(SQL01) );
   strcpy( Sql01.appname, app_name );
   sprintf( Sql01.sqltext,
           "Update PAF01 SET ... "
           "WHERE primary_acct_nbr = %s",
            pte_paf01.primary_acct_nbr );

   rtnval = WriteSQL01_Table( &Sql01 );
   if ( rtnval < 0 )
   {
      sprintf( ErrorMsg,
              "Select PAF01 NOWAIT - Err writing to SQL01 in memory: %d",
               rtnval );
      LogEvent( ErrorMsg, WARN_MSG );
   }
   EXEC SQL UPDATE paf01 
   SET  primary_acct_nbr                     = :pte_paf01.primary_acct_nbr,
        name_dba                             = :pte_paf01.name_dba,
        address1                             = :pte_paf01.address1,
        address2                             = :pte_paf01.address2,
        city                                 = :pte_paf01.city,
        state                                = :pte_paf01.state,
        zip_code                             = :pte_paf01.zip_code,
        home_phone                           = :pte_paf01.home_phone,
        work_phone                           = :pte_paf01.work_phone,
        status                               = :pte_paf01.status,
        caf_profile_id                       = :pte_paf01.caf_profile_id,
        type                                 = :pte_paf01.type,
        block_status                         = :pte_paf01.block_status,
        corp_acct_nbr                        = :pte_paf01.corp_acct_nbr,
        account_name                         = :pte_paf01.account_name,
        past_due_amount                      = :pte_paf01.past_due_amount,      
        min_pay_code                         = :pte_paf01.min_pay_code  ,
        Credit_limit						 = :pte_paf01.Credit_limit,
        Custr_nbr							 = :pte_paf01.Custr_nbr,
        APP_Source							 = :pte_paf01.APP_Source,
        COMP_Name							 = :pte_paf01.COMP_Name
                  
   WHERE primary_acct_nbr = :pte_paf01.primary_acct_nbr;       
   if ( SQLCODE != 0 )
      return( DBTest_oracle_to_pte_rcode( SQLCODE, ErrorMsg ) );
   return PTEMSG_OK;
}
/*************************************************************************************/
/*************************************************************************************/
BYTE db_move_bch10_to_bch11(pCHAR PrimaryKey, pCHAR ErrorMsg)
{
   INT  retval;

   EXEC SQL BEGIN DECLARE SECTION;
   EXEC SQL END DECLARE SECTION;
   
   strncpy( pte_bch10.device_id, PrimaryKey, sizeof(pte_bch10.device_id) );
   strncpy( pte_bch10.batch_nbr, PrimaryKey + sizeof(pte_bch10.device_id), sizeof(pte_bch10.batch_nbr) );   

   /* Log the query into shared memory. */
   memset( &Sql01, 0x00, sizeof(SQL01) );
   strcpy( Sql01.appname, app_name );
   sprintf( Sql01.sqltext,
           "INSERT INTO bch11 SELECT * FROM bch10 "
           "WHERE device_id = %s AND batch_nbr = %s",
            pte_bch10.device_id, pte_bch10.batch_nbr );
   retval = WriteSQL01_Table( &Sql01 );
   if ( retval < 0 )
   {
      sprintf( ErrorMsg,
              "INSERT BCH11 from BCH10 - Err writing to SQL01 in memory: %d",
               retval );
      LogEvent( ErrorMsg, WARN_MSG );
   }
   EXEC SQL INSERT INTO bch11
   SELECT * FROM bch10 
   WHERE device_id = :pte_bch10.device_id AND 
         batch_nbr = :pte_bch10.batch_nbr;   

   if (( SQLCODE != 0 ) && (SQLCODE != NO_DATA_FOUND) )
      return( DBTest_oracle_to_pte_rcode( SQLCODE, ErrorMsg ) );

   return PTEMSG_OK;
}
/*************************************************************************************/
/*************************************************************************************/
BYTE db_insert_omc01( pOMC01 omc01_ptr, pCHAR ErrorMsg )
{
   INT  retval;
   omc01_to_db( omc01_ptr );

   /* Log the query into shared memory. */
   memset( &Sql01, 0x00, sizeof(SQL01) );
   strcpy( Sql01.appname, app_name );
   strcpy( Sql01.sqltext, "INSERT INTO omc01 ... " );

   retval = WriteSQL01_Table( &Sql01 );
   if ( retval < 0 )
   {
      sprintf( ErrorMsg,
              "Insert OMC01 - Err writing to SQL01 in memory: %d",
               retval );
      LogEvent( ErrorMsg, WARN_MSG );
   }

   EXEC SQL INSERT INTO omc01
     ( merchant_id,
	card_nbr,
	max_repeat,
	repeated,
	expiry_date,
	peso_amt_limit,
	usd_amt_limit
     )               
   VALUES(:pte_omc01.merchant_id,
	:pte_omc01.card_nbr,
	:pte_omc01.max_repeat,
	:pte_omc01.repeated,
	:pte_omc01.expiry_date,
	:pte_omc01.peso_amt_limit,
	:pte_omc01.usd_amt_limit
      );


   if ( SQLCODE != 0 )
      return( dbcommon_oracle_to_pte_rcode( SQLCODE, ErrorMsg ) );

   return PTEMSG_OK;
}
/*************************************************************************************/
/*************************************************************************************/
BYTE db_update_omc01( pOMC01 omc01_ptr, pCHAR ErrorMsg )
{

   INT  retval;
   omc01_to_db( omc01_ptr );

   /* Log the query into shared memory. */
   memset( &Sql01, 0x00, sizeof(SQL01) );
   strcpy( Sql01.appname, app_name );
   sprintf( Sql01.sqltext,
           "UPDATE OMC01 SET ... "
           "WHERE merchant_id = %s AND card_nbr = %s",
            pte_omc01.merchant_id, pte_omc01.card_nbr );

   retval = WriteSQL01_Table( &Sql01 );
   if ( retval < 0 )
   {
      sprintf( ErrorMsg,
              "UPDATE OMC01 - Err writing to SQL01 in memory: %d",
               retval );
      LogEvent( ErrorMsg, WARN_MSG );
   }

   EXEC SQL UPDATE omc01
   SET  MERCHANT_ID	= :pte_omc01.merchant_id,
	CARD_NBR	= :pte_omc01.card_nbr,
	MAX_REPEAT 	= :pte_omc01.max_repeat,
	REPEATED	= :pte_omc01.repeated,
	EXPIRY_DATE	= :pte_omc01.expiry_date,
	PESO_AMT_LIMIT = :pte_omc01.peso_amt_limit,
	USD_AMT_LIMIT  = :pte_omc01.usd_amt_limit

   WHERE MERCHANT_ID = :pte_omc01.merchant_id AND CARD_NBR = :pte_omc01.card_nbr;

   if ( SQLCODE != 0 )

      return( dbcommon_oracle_to_pte_rcode( SQLCODE, ErrorMsg ) );
   return PTEMSG_OK;

}
/*************************************************************************************/
/*************************************************************************************/
BYTE db_update_ncf01( pNCF01 ncf01_ptr, pCHAR ErrorMsg )
{
   ncf01_to_db( ncf01_ptr );

   /* Log the query into shared memory. */
   memset( &Sql01, 0x00, sizeof(SQL01) );
   strcpy( Sql01.appname, app_name );

   sprintf( Sql01.sqltext,
           "UPDATE ncf01 SET ... "
           "WHERE network_id = %s AND network_type = %s For Update NOWAIT",
            pte_ncf01.network_id, pte_ncf01.network_type );

   rtnval = WriteSQL01_Table( &Sql01 );
   if ( rtnval < 0 )
   {
      sprintf( ErrorMsg,
              "Update NCF01 - Err writing to SQL01 in memory: %d",
               rtnval );
      LogEvent( ErrorMsg, WARN_MSG );
   }

   EXEC SQL UPDATE ncf01
   SET   network_id                 = :pte_ncf01.network_id,
     network_type                   = :pte_ncf01.network_type,
     name                           = :pte_ncf01.name,
     status                         = :pte_ncf01.status,
     totals_ind                     = :pte_ncf01.totals_ind,
     statistics_ind                 = :pte_ncf01.statistics_ind,
     acquirer_inst_id_code          = :pte_ncf01.acquirer_inst_id_code,
     forwarding_inst_id_code        = :pte_ncf01.forwarding_inst_id_code,
     receiving_inst_id_code         = :pte_ncf01.receiving_inst_id_code,
     remote_nsp_type                = :pte_ncf01.remote_nsp_type,
     pin_type                       = :pte_ncf01.pin_type,
     encr_type                      = :pte_ncf01.encr_type,
     pad_char                       = :pte_ncf01.pad_char,
     cwk                            = :pte_ncf01.cwk,
     kek                            = :pte_ncf01.kek,
     retired_cwk                    = :pte_ncf01.retired_cwk,
     auto_logon                     = :pte_ncf01.auto_logon,
     echo_interval                  = :pte_ncf01.echo_interval,
     max_consecutive_timeouts       = :pte_ncf01.max_consecutive_timeouts,
     max_active_txns                = :pte_ncf01.max_active_txns,
     que_name                       = :pte_ncf01.que_name,
     local_nsp_type                 = :pte_ncf01.local_nsp_type,
     request_timer                  = :pte_ncf01.request_timer,
     idle_line_timer                = :pte_ncf01.idle_line_timer,
     advice_repeat_counter          = :pte_ncf01.advice_repeat_counter,
     admin_message_timer            = :pte_ncf01.admin_message_timer,  
     store_forward_processing       = :pte_ncf01.store_forward_processing,
     currency_code_purchase         = :pte_ncf01.currency_code_purchase, 
     currency_code_cash             = :pte_ncf01.currency_code_cash, 
     country_code                   = :pte_ncf01.country_code,
     station_id1                    = :pte_ncf01.station_id1,
     station_id2                    = :pte_ncf01.station_id2,
     prev_src_station               = :pte_ncf01.prev_src_station,
     tpdu_id                        = :pte_ncf01.tpdu_id,
     identifier1                    = :pte_ncf01.identifier1,
     identifier2                    = :pte_ncf01.identifier2,
     identifier3                    = :pte_ncf01.identifier3,
     identifier4                    = :pte_ncf01.identifier4, 
     identifier5                    = :pte_ncf01.identifier5,
     identifier6                    = :pte_ncf01.identifier6, 
     identifier7                    = :pte_ncf01.identifier7,
     identifier8                    = :pte_ncf01.identifier8, 
     identifier9                    = :pte_ncf01.identifier9,
     identifier10                   = :pte_ncf01.identifier10,
     processing_code1               = :pte_ncf01.processing_code1,  
     processing_code2               = :pte_ncf01.processing_code2,
     processing_code3               = :pte_ncf01.processing_code3,  
     processing_code4               = :pte_ncf01.processing_code4,  
     processing_code5               = :pte_ncf01.processing_code5,  
     processing_code6               = :pte_ncf01.processing_code6,  
     processing_code7               = :pte_ncf01.processing_code7,  
     processing_code8               = :pte_ncf01.processing_code8,  
     processing_code9               = :pte_ncf01.processing_code9,  
     processing_code10              = :pte_ncf01.processing_code10, 
     processing_code11              = :pte_ncf01.processing_code11, 
     processing_code12              = :pte_ncf01.processing_code12, 
     processing_code13              = :pte_ncf01.processing_code13, 
     processing_code14              = :pte_ncf01.processing_code14, 
     processing_code15              = :pte_ncf01.processing_code15, 
     processing_code16              = :pte_ncf01.processing_code16,
     processing_code17              = :pte_ncf01.processing_code17,
     processing_code18              = :pte_ncf01.processing_code18, 
     processing_code19              = :pte_ncf01.processing_code19, 
     processing_code20              = :pte_ncf01.processing_code20,       
     zmk                            = :pte_ncf01.zmk,
     neg_access_code                = :pte_ncf01.neg_access_code

   WHERE network_id                 = :pte_ncf01.network_id AND
     network_type                   = :pte_ncf01.network_type;
       
   if ( SQLCODE != 0 )
      return( dbcommon_oracle_to_pte_rcode( SQLCODE, ErrorMsg ) );

   return PTEMSG_OK;
}
/*************************************************************************************/
/*************************************************************************************/
BYTE db_insert_ncf01( pNCF01 ncf01_ptr, pCHAR ErrorMsg )
{
   ncf01_to_db( ncf01_ptr );

   /* Log the query into shared memory. */
   memset( &Sql01, 0x00, sizeof(SQL01) );
   strcpy( Sql01.appname, app_name );
   strcpy( Sql01.sqltext, "INSERT INTO ncf01 " );

   rtnval = WriteSQL01_Table( &Sql01 );
   if ( rtnval < 0 )
   {
      sprintf( ErrorMsg,
              "Insert NCF01 - Err writing to SQL01 in memory: %d",
               rtnval );
      LogEvent( ErrorMsg, WARN_MSG );
   }

   EXEC SQL INSERT INTO ncf01
     ( network_id,
      network_type,
      name,
      status,
      totals_ind,
      statistics_ind,
      acquirer_inst_id_code,
      forwarding_inst_id_code,
      receiving_inst_id_code,
      remote_nsp_type,
      pin_type,
      encr_type,
      pad_char,
      cwk,
      kek,
      retired_cwk,
      auto_logon,
      echo_interval,
      max_consecutive_timeouts,
      max_active_txns,
      que_name,
      local_nsp_type,
      request_timer ,
      idle_line_timer,
      advice_repeat_counter,
      admin_message_timer,  
      store_forward_processing ,
      currency_code_purchase, 
      currency_code_cash, 
      country_code, 
      station_id1 ,
      station_id2 ,
      prev_src_station,
      tpdu_id,
      identifier1 ,
      identifier2 ,
      identifier3 ,
      identifier4, 
      identifier5,
      identifier6, 
      identifier7, 
      identifier8, 
      identifier9 ,
      identifier10,
      processing_code1,  
      processing_code2,
      processing_code3,  
      processing_code4,  
      processing_code5,  
      processing_code6,  
      processing_code7,  
      processing_code8,  
      processing_code9,  
      processing_code10, 
      processing_code11, 
      processing_code12, 
      processing_code13, 
      processing_code14, 
      processing_code15, 
      processing_code16,
      processing_code17,
      processing_code18, 
      processing_code19, 
      processing_code20,
      zmk,
      neg_access_code
     )               
   VALUES(  :pte_ncf01.network_id,
     :pte_ncf01.network_type,
     :pte_ncf01.name,
     :pte_ncf01.status,
     :pte_ncf01.totals_ind,
     :pte_ncf01.statistics_ind,
     :pte_ncf01.acquirer_inst_id_code,
     :pte_ncf01.forwarding_inst_id_code,
     :pte_ncf01.receiving_inst_id_code,
     :pte_ncf01.remote_nsp_type,
     :pte_ncf01.pin_type,
     :pte_ncf01.encr_type,
     :pte_ncf01.pad_char,
     :pte_ncf01.cwk,
     :pte_ncf01.kek,
     :pte_ncf01.retired_cwk,
     :pte_ncf01.auto_logon,
     :pte_ncf01.echo_interval,
     :pte_ncf01.max_consecutive_timeouts,
     :pte_ncf01.max_active_txns,
     :pte_ncf01.que_name,
     :pte_ncf01.local_nsp_type,
     :pte_ncf01.request_timer ,
     :pte_ncf01.idle_line_timer,
     :pte_ncf01.advice_repeat_counter,
     :pte_ncf01.admin_message_timer,  
     :pte_ncf01.store_forward_processing ,
     :pte_ncf01.currency_code_purchase, 
     :pte_ncf01.currency_code_cash, 
     :pte_ncf01.country_code, 
     :pte_ncf01.station_id1 ,
     :pte_ncf01.station_id2 ,
     :pte_ncf01.prev_src_station,
     :pte_ncf01.tpdu_id,
     :pte_ncf01.identifier1 ,
     :pte_ncf01.identifier2 ,
     :pte_ncf01.identifier3 ,
     :pte_ncf01.identifier4, 
     :pte_ncf01.identifier5,
     :pte_ncf01.identifier6, 
     :pte_ncf01.identifier7, 
     :pte_ncf01.identifier8, 
     :pte_ncf01.identifier9 ,
     :pte_ncf01.identifier10,
     :pte_ncf01.processing_code1,  
     :pte_ncf01.processing_code2,
     :pte_ncf01.processing_code3,  
     :pte_ncf01.processing_code4,  
     :pte_ncf01.processing_code5,  
     :pte_ncf01.processing_code6,  
     :pte_ncf01.processing_code7,  
     :pte_ncf01.processing_code8,  
     :pte_ncf01.processing_code9,  
     :pte_ncf01.processing_code10, 
     :pte_ncf01.processing_code11, 
     :pte_ncf01.processing_code12, 
     :pte_ncf01.processing_code13, 
     :pte_ncf01.processing_code14, 
     :pte_ncf01.processing_code15, 
     :pte_ncf01.processing_code16,
     :pte_ncf01.processing_code17,
     :pte_ncf01.processing_code18, 
     :pte_ncf01.processing_code19, 
     :pte_ncf01.processing_code20,
     :pte_ncf01.zmk,
     :pte_ncf01.neg_access_code
	   
      );

   if ( SQLCODE != 0 )
      return( dbcommon_oracle_to_pte_rcode( SQLCODE, ErrorMsg ) );

   return PTEMSG_OK;
}

/*************************************************************************************/
/*************************************************************************************/
BYTE DBTEST_connect ( pCHAR username, 
                        pCHAR password,
                        pCHAR alias,    
                        pCHAR database,
                        pCHAR ErrorMsg )
{
   EXEC SQL BEGIN DECLARE SECTION;
      /* login values */
      char  db_username[21];
      char  db_password[21];
      char  db_alias[21];
      char  db_database[21];
   EXEC SQL END DECLARE SECTION;


   /* Connect to ORACLE. */
   strcpy( db_username, username);
   strcpy( db_password, password);
   strcpy( db_alias,    alias   );
   strcpy( db_database, database);
   /* Read from TF.ini*/

#ifdef WIN32
   if (stricmp("core", username) == 0)
#else
   if (strcasecmp("core", username) == 0)
#endif
   {
    GetCoreServiceName(db_alias );
    GetCorePassword   (db_password);
    GetCoreUserId     (db_username);
   }
   else
   {
    GetAppServiceName(db_alias );
    GetAppPassword   (db_password);
    GetAppUserId     (db_username);
   }


   
   /* EXEC SQL CONNECT :db_username IDENTIFIED BY :db_password  AT :db_alias using :db_database; */
   EXEC SQL CONNECT :db_username  IDENTIFIED BY :db_password  USING :db_alias;
   
   if (SQLCODE != 0)
      return (DBTest_oracle_to_pte_rcode (SQLCODE, ErrorMsg));

   return (PTEMSG_OK);
}
/*************************************************************************************/
/*************************************************************************************/
BYTE DBTEST_disconnect( pCHAR ErrorMsg )
{
   /* Disconnect from ORACLE. */   
   EXEC SQL ROLLBACK WORK;   
   if (SQLCODE < 0)
      return (DBTest_oracle_to_pte_rcode (SQLCODE, ErrorMsg));
   return PTEMSG_OK;
}
